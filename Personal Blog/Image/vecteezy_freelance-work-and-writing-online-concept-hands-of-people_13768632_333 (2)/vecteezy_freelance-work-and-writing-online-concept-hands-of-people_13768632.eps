%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 25.2)
%%For: Denis
%%CreationDate: 10.09.2021
%%BoundingBox: 0 0 2739 1826
%%HiResBoundingBox: 0 0 2739 1826
%%CropBox: 0 0 2739 1826
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.2.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.2.3 x259 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 17460 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD80FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFD81FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD81FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FD81FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FD81FFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FD%05FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFD4CFF7676A8FD32FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFAFFF%A9FFA8FFA9FFA8FFA9FFA8FFFFCB4B757551A1FFA8FFA8FFFFFFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FD3BFFA87DFD0DFF7D75A0C9A07CFD06FFA1FD2AFFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA9FFA8FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFFFA851A1A1FF%A8FFCBFFA8FFCBFFA9FFA87575C9A0C999A7FFFFA9FF7C7D7DFFCBFFA8FF%CBFFA8FFCBFFA8FFFFFFA8FFFFFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FD24FF767CA8FD13FFA8767DA8FD0AFF764B4BA0C8C9C8C27D%FD04FFA152A8FD0EFF7D767CFD18FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA87651A1FFFFA8FFA9FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FF7D7DA8FFA9FFA8FFA9FFA8FF7D4A75759F%C8A0C9A0A0A8FFA9FFA8A8A8FFA8FFA9FFA8FFA9FFA8FFA9FFA87DA876A8%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FD16FFA8FD0DFFA8%A8FD21FF7675CE75A0C8C9C8A076FD16FFA17DFD18FFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA85176FFA9FFCBFFA8FFCBFFA8FFCBFFFFFF%CBFFA8FFFFA87676A8FFA9FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A9FF4BC8C8764BC8A07C4B4BA8FFCBFFA8FFCBFFA8FFA9FFA9FFCBFFA8FF%CBFFA8FFA9FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFD%16FF7D76A8FD12FF7D4BA0755176FD15FFA876C8C9A075C2A04A764AA1FD%08FFA17D76FD24FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFFFFF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFFFA14AC9C9C94B4B7DFFA8FF%A9FFFFFFA8FFA8FFA9FFA8FFA9FFA8FFFFA875C9A0A04AA0C2754B754AFF%A9FFA9FFA8FFFF76767D7DFFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD2AFF52C9C9CEC97CA076FD04FFA1%A1CBFD0DFFA8A0A076754B75C94B76757576FD07FFA17D76A8FD23FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFFFFFA8FFA87CC9C9C9A775C951FFA9FFFF4B20A8FFFFA8FFCBFF%AFFFA9FFA8FFFFFF76A04A4B2675C2C84AA09F4A7DFFCBFFA8FFFFFF76A1%CBFFA8FFCBFFA8FFFFFFA9FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FD24FFA8FD04FFA8A0CEC9CE76C9A77DFD04FFA1A1FD07FFA1%A8FD06FFA17575A07575C9C8754B769976FD12FFA8FD1AFFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA876%7DFFA9FF76C9C9C97CA0C9A07DFFA9FFA8FFFFFFA8FFA9FFA8FF7D767DA8%FFFFA8FF7D754BA04B75A0C9A04B757C527DFFFFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA152A1FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FD1AFFA8FD09FF7DA7FFFFA8A1C9CEC9A0C9CF7CFD0FFF7651A8FD04FF%A8FD04754BC9C8A04B7E7EA952FD10FFA876FD1AFFA8FFCBFFA8FFCBFFA8%FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF7D7676FFA9FFCBFFA8FFFFFFA8FFFF%A876CEC9A076CEC9A0A8FFCBFFA8FFCBFFA9FFA9FFA8FFFFA8A8FFA9FFA8%FFA8514BA0754B75C8757E84A8847E52FFFFFFA8FFCBFFA9FFCBFFA8FFCB%FFA8FFFFFFA8FFCBFFFFFFA9FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFD19%FF7C7D7CA8FD0BFFA17CC9CF75A1C9C97CFD09FFA8FFA8FD0BFF757575A0%4A7C767C84A87EA8847D7DFD16FFA8A8FD12FFA9FFA8FFA9FFA8FFA9FFA8%FFFFFFA9FFA9FFA8FFA9FFA8FFA1514BA8FFFFA8FFA9FFA8FFA9FFFFA151%A07576A0CEA0A1FFFFA8FFA8FFA8A8A8A9A8FFA8FFA8FFA9FFA8FFA9FFA8%754BA076527DFF52847E847E8484777DFFA9FFA9A87CFFA8FFA9FFA8FFA9%FFA8FFA9FFA8FF527DFFFFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD0DFFA8%7DFD0BFFA8FD0DFF7CCAA17DA17CC9A07DFFFFFFA8A9A8FD11FF76A97E84%847DFFA87DA984A984A8847DA8FFFFFF4B7CA1FD0EFF7D76FD12FFCBFFA8%FFCBFFA8FFCBFFA9FF5276A8FFCBFFA8FFCBFFA8FFFFFFA9FFCBFFA8FFCB%FFA8FFFFFF76767CA77DCA767551A8FFA8A8FFA9FFA9FFCBFFA8FFA8FFA9%FFFFFFA8FFCBFFA87D84847EA952FFA87D84847EA87E847D76A8FFA9A126%A8FFFFCBFFA8FFCBFFA8FFCBFFA8FFA1A8A8FFCBFFA8FFCBFFA8FFCBFFA8%FFCBFFA8FD0DFF76A1FD17FF7D7DA9A84BFFA876A27D76FFA8FD0BFFA8FF%A8FD07FF76A984A8847DA8FF76A884A87EA884A97DA1FFFFFFA17DFD22FF%A8FFA9FFA8FFA9FFA8FFA9FF7DFFA9FFA8FFA9FFA8FFA9FFA8A8A1A8A9FF%FFFFAFFFA9FFA87DA8A9A87DA9A17DFFA87DA8A9A8FFA8FFA9FFA8FFA9FF%A8A8A8A9FD05A8FFA87D7E847E84597DFFA153A87E847E847E8452A8FFFF%A9FFA9FD05FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FD1AFF4B4B4B7652A1A1FD04FFA8A2FFA8A97DFF7DA9A8FF7DFD0D%FFA8A9FD04FFA8FFA8CB76A884A884A976FFA87D84A884A984A884A876FD%05FFA8CAA1A8FD1DFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFFFFFA9%FFA9FFA876A1A876764B4B205251764BA8A8A97DA8FF7DA8FFA87DA8FFA8%FFA8FFCBFFA8FFCBFFCBA9A8FFA8FFFFFFA9FFFF7D7DA87E84847DA8FF76%7E84847EA984A8847D7DA876764B4B204B51FFA9FFCBFFA8FFCBFFA8FFFF%FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFD14FFA8A9A8FFFFFF52FD05FFA8%A87D7C5176264B525152A776A9A8FF7DA8FFFFA9FD09FFA8FD09FF7D7E84%A884A87DA8FFCA52A984847D7D52524B4B4B76517DA1CA7D7CFD1DFFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA8A8A8FFA8FFA8FFFF767CFD09FFA8A8%7DA151514B4B2652517676A8A8FD07FFA8FFA8A8A8FFA9FFA8FFA9FFFFA1%7D847EA8847E52A87D4B4B51204B4B7676A1A1CAFD05FF7D52FFA9FFA8FF%A8FFA8FFA8A9A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD0EFFA8FFA8FF%A9FD05FFA9FF7C7DFD10FFA8A87C7651512676527C7DCAA8FD05FFA8FD09%FF7D7E7D7D52764B4B4A76517C7DA8A8FD0BFF76A1FFFFA8FFA8FFA8FD16%FFCBFFA8FFCBFFA8FFCBFFA9FFA8A9A8FFFFFFA8FFCBFFA8A9FFA852FD15%FFA8A87D7C4B51264B4B7676FFA8A9A9FFFFFFA8FFA87D5252264B4B514B%7D7DA8A8FD10FF76A1FFA8FFA8FFFFFFA9FFFFFFA8FFFFFFA8A8A9FFA8FF%CBFFA8FFCBFFA8FD0CFFA8FD0BFFA8FFA876FD1BFFA87DA1764B7CFFA9FF%FFA8765226514B5176A7A7FD17FF4BFFA9FD0BFFA8FFFF7C52FD0CFFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFFFA8A8FF4BCAFD1EFF4B%A8A8FFA9FF4B517DA7A8FD1BFFA876A8FFA8FFA9FFA8FFA9FFA8FFA8A9A8%FF7DA8A9FFA9FFA8FFA9FFA8FFA9FD0CFFA8A8FD0AFFA8FFFF7DA1FD1DFF%767DFD05FFA851FD1EFFA876FD0DFFA8FD10FFA8FFCBFFA8FFCBFFA9FFA8%A9A8FFFFFFA8FFCBFFA8FFFFFFA8FF767CFD1CFFA751A8A9A8FFCBFFFF76%76FD1DFF767DFFFFA8FFFFFFA9FFCBFFA8FFA9A9A8FFFFFFA8FFCBFFA8FF%CBFFA8FFCBFD09FFCBA8FFFFFFA8FD0AFFA9FFA84B767CA8A8FD18FF7676%FFA8FD05FFA851A8FD1CFF7C7DFFFFFFA9FD09FFA8FD10FFA9FFA8FFA9FF%A8A8A8FFA8FFA9A8A8FFA9FFA8FFA9FFA8FFA8A8767D524B4B76517676A1%A1CAA8FD10FFA14BFFA8A9A9FFA8FFA9FF7676FD16FFA8A87D7D525126A8%FFFFA8FFA8FFA8A9A8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD%08FFA8FD05FFA8FD0BFF7D7D7DA87D7D7C7D767D527651767DA17DCACAFD%0BFF4BA8FFFFA8FD07FF4BA8FD10FFA8A87DA1FD04764B767D7D52FFFFFF%A9FFA8FFA8FD05FFA8FD10FFCBFFA8FFCBFFA8A9FFFFA8FFFFFFA8FFCBFF%A8FFCBFFA8FFFFA1527C7D7D767D5276527651764B7652525176527D7DA8%A8FD05FF527CFFFFA9FFA8A9A8FD04FFA84BFD09FFCAFFA7A17D7D52764B%5252764B767676527D7D76A8FFA8FFA8FFFFFFA8FFA8FFCBFFA8FFA8FFCB%FFA8FFCBFFA8FFCBFFA8FD08FFA8FD06FFA9A9FD09FF7D7C7DA9A87D76A1%76A14BC976764B7D7C7D767D76764B76527676A77D52A8FFFFA87DFFA9A9%A8FFA8FFFF7676FFFFFFCAA87DA77C7652765176527D767D767D52A07552%767D7D7676A8FFFFA8FD07FFA8FFA8FFA8FD0EFFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA8A9A8FFA9FFA8FFA9FFFFA1527D7E7E757D76A77676A1527C7C%527D5276527D527C527D52524B4B7DFFA8FF524BA8FFFFFFA8FFA8A97D51%7C7C4B7652524B76527D527D5276527D767D4B7676A14B7C7DA852527DFF%A8A8A9FFA8FFA9FFA8FFA8A8A8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FD0AFF%A8FD05FFA8FD09FF7D7D7DA97DA77DA1A752A1A176A77DA9A8A87D7D767D%767D767D7DA87DA1FFFFFFA87DFD07FFCBFF7C4B5276767D767D767D767D%767D7DA87DA8A8A1A076A1A77C757D7D52A1FFFFCBFD09FFA9FFA9FD0EFF%A8FFCBFFA8FFCBFFA9A9A8FFA8FFA9A8A8FFFFFFA8FFA8A8A27D76A87E7D%A17652CA4BCA4BA77C7E7DA87D7D51767DA87DA27D7D527D7DA9A8FFFFFF%A9FFCBFF7D76A8FFFFA17DA8767D767D767D76527DA884A87EA87EA87DA1%7C76A1A17C76527676FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFA8FFA9FFCBFF%A8FFCBFFA8FFCBFD0AFFA9A9FD04FFA8FFFFFFA8A9A8FFA8CA767DA8A87D%A7A1A1CACFCAA0A77DA8A87EA176767C767DA884A8A87D52FFFFFFA8FFA8%FD05FFA8A1FFFF7D7D767D7DA8A8A87DA17C7D52A8A8A87EA8A8A876CA4B%A77CA7767C527CA8FD0FFFA8FD0CFFA9FFA8FFA9FFA8FFA9FFA8A9FFFFA8%FFA8A8A8FFA8A8A8FF7D7652A87E7D76FFCACACACFCAA74B7C7DA876A74B%A176767D7D7DA8527DA8FFA9FFA8FFA8A8A8FFCBFFA8FFFFA14B7D84A87D%A8767676A151767DA87DA87DA87D527C7C76A7A1A7765152A8FFFFA8FFA9%FFA8FFA9FFA8A9A8FFA8A9A8FFA8FFA9FFA8FFA9FFA8FD0CFFA8FD05FFCB%FFA9FFA8A9FFA852A1A8A87DA1CACFCACFCAFF7CA176A87D76A1A176CA76%7676A87D7D7DFD07FFA9A9A9FD05FFA87C7DA884A87EA176A1A17D7CA2A8%A87EA8A8A876A1A7A7CACFCFA74B7DA8FD0BFFA8FFFFFFA9FD0CFFCBFFA8%FFCBFFA8FFCBFFA9FFA8FFA8FFFFFFA8A8FFFFA8AF7D7D527D7D7D76CFCA%CFCACFA7A17C7DA87D757CA176A1A1517C7D7D527DFFFFCBFFA8FFFFFFA8%A9A8A8A8FFFFA8527D7DA87D76767C7CA176A17DA87EA87DA8847D75CACA%CFCACFA74B4BA1FFFFA8FFCBFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFCBFFA8%FFCBFFA8FD0EFFA8FFFFFFA8A8CBFFFFFFA87D7E7D767D52A1CACFCACFCA%C97C7D84A87DA776CA76CA7C7C76A17D7DA1FD05FFA8FFA8A9A8FFFFFFA8%FFA87652A8A8A151A176A17C7D7C767EA8A8A87EA87D76A1FFCACFCACF51%7C7DFD09FFA8FD12FFA8FFA9FFA8FFA9FFA8A8A8FFA8A8A8FFA8A8A8FFA8%FFFFCA52A87EA87E7D7CCFA7CFCACFA7A0527D7D7D7CA1FD04A7767C7D7D%52A8FFFFFD05A8FFCBFFA8FFA8A8A8FF7C767DA87D7C527C76A176A74B7E%7EA87EA87D7D51A7CACFCACFA77D7D7CA9FFA9FFA8FFA9FFA8A9A9FFA8FF%A9FFA8FFCBFFA8FFA9FFA8FFA9FD09FFA84BA8FFFFA9A8A8A8FD06FFA87D%A8A87EA87DA7CACFCACFCFCF515251764B7CA1FFCFCFCACFA1A17D7DA8FF%A8A9FD0AFFA8FFFFA152A1A8A1A176A7CAA7CAA77C7DA176764B767D7CA1%FFCACFCAFF7C7E52FD11FFA8FD0AFFA8FFCBFFA8FFCBFFA8A8FFFFA8FFA8%A8A8FFCBFFA8FFFFA77DA87EA87E7CA7CFCACFCAA751A884A876767CA7CA%CFCACACAA1527C76FFFFFFA8FFFFFFA8FFCBFFA8FFA8FFA9FF7D5276A97D%A77CCFCACFCAA7754B4B76767D52A87E76A7CFCACFCAA7767CA8FFCBFFA8%FFFFFFA8FFCBFFA8FFCBFFA9FFA8FFA8FFCBFFA8FFCBFD10FFA8FD07FF7D%7E84A8A87D7CFFCACFCAC976A884A8A8A252A1CFCFCACFCACF7C7C7D7DCB%FFFFA9A8FD07FFA8FD04FFCA767D7D767CFFCACFCACFA17C7DA884A8A87D%7CA97D7CCACFCACFCAA152A8FD06FFA8FD09FFA8FD0AFFA9FFA8FFA9FFA8%FFA9FFA8FFFFA8A8FFA9FFA8FFA9FFA9A8527C767D4BA7CACFCAA752A884%A87DA8767D76CACACAA7CFCA7C7DA87CFFA8FFA8A9A8FFA9FFA8FFA8A8A8%FFA9FFA8767D7D7D7CC9CFA7CFCACAA07D7EA87DA87D7C7EA8767CA7CFCA%CF7C4B76FFA8FFCBFFA8A9FFFFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8%FD0EFFA8FD09FFA87DA2A84B9A75A0CACF4B7C7D7D7DA8A87D7D7DA1FFCA%CFCACF76A87DA7FD04FFA8FD05FFA9A9FD06FF52A8A8A97CCACACFCACFCA%CA7DFD05A876A9A8A97D7CA7FF7CA1CAA77DFFA8FFFFFFA8FD0BFFA9FD08%FFCBFFA8FFCBFFA8FFCBFFA9FFA8FFA8FFCBFFA8FFCBFFFFA17DFF7D99C1%C29976767652764B524B7652A87E7CC9CFCACFA77D847DA1FFA8FFA9A8A8%FFCBFFA8A8A9FFA8FFCBFFFF7D7DA87E7D7CCFCACFCACF7CFD057D52527D%7D767D52767C7CA8CF7D4B7DFFA8A8A8FFA8FFA8FFFFFFA8FFA8A9A8FFFF%FFA8FFCBFFA8FD0CFFA8FD0BFF7DFFA875BBC2C2C29976A9FFA8A9A27D76%7D767D52A7CFCFCACA7DA976FD05FFA8FD04FFA9A8FD07FF7D7DA8A87DA1%CACFCACFCA76517651524B7C767D7D847EA97D76CACF76A1A87DA8FFFFFF%A8FD05FFA9FFA8FD0CFFA8FFA9FFA8FFA9FFA8FFA8A8A8FFA9FFA8FFA9FF%A8FF7D767D7699C299C299994BA17D7D7DA8A8A9A8A87D7D76CFCACFA77D%7D76A8FFA9FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFA152A87EA852FD04CA%C94B76527D7D847EA984847E847E7E52CF7CA1A8CFA776A8FFA9FFA8FFA8%A9A8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FD0EFFA8FD07FFAF76997599C2BC%C2C2C2759A99C299A0999A76A17DAFAFA1CACFA1A14B76A8FFA8FD04FFA9%FD04FFA8FD07FFA8767D7D767CCACFCAFFA17E84A97E84FD047D767D7D7D%7C7D51A1CAFFCAFFA87DA8FFFFFFA8FFA9FD10FFA8FFCBFFA8FFCBFFA8FF%CBFFA9A9A8FFA8FFCBFFFFA899C26FC299C299C29975BBC2BBC299C2BBC2%9999757D76767599999976FFA9FFA8A8A8A9A8FFA8FFFFFFA8FFFFFFA8FF%CBFFA176538452C9A7CACA7D597D527D7CA1A1A8A7CAA7CAA8CAA87D76CF%A8CFA8CFA17CA8FFA8FFFFFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFD10FF%A8FD05FF7CC275A0BBC2C2C2BC9A99C299C2C2C299C2C2C2BBC299756FC2%C2C2997CFD06FFA8FFA9FD05FFA8FD07FF7D84847676A17C7C51A7A7CAA8%FFCACFA8CFCACFA8CFCACFA8A1A7CFA8CFA8FFA17DFD15FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8A9A8FFA8FFA9766F99BBC299C2999A6FC299C299C2%99C299C299C299C2759A99C299C26FA9FFFFA8FFCBFFA8A9FFFFA8FFCBFF%A8A9A9FFA8FFA8A8597D7CCFA8CF7D7DA8CFA8CAA8CAA8CAA8CAA8CAA8CA%A8CFA17CA8CAA8CAA8CF7D7DA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FD12FFA8FFFFA87599C2C2BCC2C2C275C2C2C2BCC2C2C2BCC2C2C2BCC2%C29A99FD04C29AA1FFA8767DFFFFFFA8FD05FFA8FFA8A9FFFFA8FFA87652%A1A1A7A7CA7DFFCACFA8CFCACFA8CFCACFA8CFCACFA8FFA1A1CACFCACFA8%FF7DA1FD13FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFFFFFA8A9A84B99C2%99C299C2997599C299C299C299C299C299C299C29999BBC299C299A0FFFF%4B76FFFFA8A9A8FFA8A9A8A8A8FFA8A8A8A9FFCB767D76A17DA1767CA8CF%A8CAA8CFA8CAA8CFA8CAA8CFA8CAA8CF76A8A8CFA8CAA8FFA8FFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FD14FFA9A875C299C2C2C2BC9A99C299C2%C2C299C2C2C299C2C2C2BBC275C299C2C2C275FFFFCBA8FFFFFFA8A9A8FF%A8FD05FFA8A9FFFFFFA176CFCACFCAA77CFFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CA76CFA8CFCAFD16FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFFFFF75BB99C299C2999A6FC299C299C299C299C299C299C299C29975%99C299C299997DFFFFFFA8FFA9FFA8FFCBFFA8FFA9FFA8FFFFFFA8FF7D76%A8CFA8CF7DA7A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8A17CFFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FD14FFA9CAC3C2BBC2%C2C275C2C2C2BCC2C2C2BCC2C2C2BCC2C2C2BCC275C2BCC2C2C299A1FD15%FFA87CFFCACFCAA7A1FFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8FFCACB%FD19FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFFFFFA8C9A0C299%7599C299C299C299C299C299C299C299C2999999C299C299C275FFFFFFA8%FFA176A8FFCBFFA8FFFFFF7DFFFFFFA8FFA1A1A8CFA8CF7DA7A8CAA8CFA8%CAA8CFA8CAA8CFA8CAA8CFA8FFA8FFFFFFA8FFCBFFA8FFCBFFA8FFCBFFA8%FFCBFFA8FFCBFFA8FFCBFD1AFFCAA1A0C299C2BBC299C2BCC299C2C2C299%C2C2C2999AC2C299C2C2997DFD04FFA74BA8FD06FFA176A1FD04FFA7A7CF%A8CFCAA1A1FFA8CFA8CFA8CFA8CFA8CFA8FFCAFD20FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA9FFA8CAA1C9A0C299C299C2%99C299C299C299996EC299C299C2997CA9FFA9FFA8A8A8FFA8FFA9FFA8FF%7DA8A9FFA9FF76A8A8CAA7CF7CA7A8CAA8CAA8CFA8CAA8FFA8FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD%24FFCAFFCACFCACAC9CAC9CAA7A7C9CAC9CFCACAA8FD17FFCAFFFFA8A8FD%2EFFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFFFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFAFFFFFFFA9FFFFFFA9FFFFFFA9FF%FFFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FD81FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FD81FFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFD%81FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FD81FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFF%A8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FD81FFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c004 79.164570, 2020/11/18-15:51:46        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
   xmp:CreatorTool="Adobe Illustrator 25.2 (Macintosh)"
   xmp:CreateDate="2021-09-10T16:29:46+03:00"
   xmp:MetadataDate="2021-09-10T16:29:46+03:00"
   xmp:ModifyDate="2021-09-10T16:29:46+03:00"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   illustrator:CreatorSubTool="Adobe Illustrator"
   dc:format="application/postscript"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:DocumentID="xmp.did:265dc5c1-0b57-450f-9c4f-d1c13e38979b"
   xmpMM:InstanceID="xmp.iid:265dc5c1-0b57-450f-9c4f-d1c13e38979b"
   xmpMM:OriginalDocumentID="xmp.did:ec139463-1a89-4ce0-9cf6-09b3d64e8105">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="172"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9NZNXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxXzx+YOn+VVtoDbS6hql6SLSwg2ZgDTkxo3EVNBRS&#xA;T4UBIpzZxjG7dhwGZ2X+UfPdtr08un3NlNpOswRiaTT7ih5REgepDIvwyIGIUnYg9R0yODURyDZO&#xA;bBLHzZPmQ0OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJ/OGt3Wh+W73VbW3W5&#xA;mtVVvSd1jXiXVXdmYotEQl6FhWlKjrkZmhbOEbNKHknzFda9oz3lzHEssVxNbetbNzt5hE1BLC1W&#xA;qrdPtHcHc4ISsLkjRT/JsHYq7FXYqwf8w9L1e81DTZY7O+1LSYoLpZbLTrn6rKLxwn1aVm9SGqrx&#xA;cA1PEmtMqyAt2MgA97L9MS4j020S55fWVhjWbm4lbmFAasgCczX9qgr4ZYOTUeaJwoY9558423lT&#xA;RPr8kJurqaVLawslJDTTyfZQEBqbAnp7DcjKsuQQjZbcWIzlTyjSL/Wtc/MW4v8AzDbx22oWlmEg&#xA;tUpxjQhOBU8pKkCeQEhv2jmh1mo8SNu5wYRDZlOquLWTT9TU8JdPvbaT1R1EMkqxXA+TQu+UaHJw&#xA;5Qy1MOKBen51Tz7DfJ+i+brLXJ5tXkEltHZrY/WTMZXujBcSPbzlCPgb0ZeMlTUtlUAQd22cokbM&#xA;yy1qdirsVYV5u8761od/O8djA2k2C27XDTu8dxdfWHKutkKcHaEAEqTUk0271TmQ2wxgjzZrlrU7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqw5fLXmu38/trFtqbPot1Rry3mcMAixsggjiKNSknGRXV06tyDZXw&#xA;nivo28UeGq3ZjljU7FXEAggioOxBxVyqFAVQAoFAB0AxViHm7zbrNvqkXl/y3ax3GrvEtzd3VzyF&#xA;raQOzIjPx3aRyjcEHhU7Zi6nUjH73IwYOPc8mIaj5t/Mjyjf2kl9cp5ptNQ9RTarBFZvC8S+rSJo&#xA;wS9Yw32qk06eOJi1xPNyZaWJG2z1LRtWs9Y0q01SyYtaXsSzQkijcXFaMOxHQjxzZxNi3XyjRoov&#xA;mvLhUc6V413p40ySG8VdirsVeefmFZfXPOvllZRW3s7a/u0B3DSq1tGKj/I9UMM1XasiIDzdj2eN&#xA;ywbV9V06y/MbS7u2vIJWu1OmX8MciM8bs37sOoJKs7lOo/YzUwiTjII83ZE+pj/nq78x32tanpLS&#xA;8WjiEtrHbTlI47apPOdmkhjVmXdg6segWg3NuARABYTsmnvfkHzXb+afKtjq8bD13QR30QpWO5jA&#xA;EqEDp8W49iDnR458Qt0eWHDKmQ5NrYT5u89a7pOsTafpmjreLaWR1CaWdp4llRRIXjhkjgmiV1EV&#xA;f3jrWoArlUpkHYN0MYIsllumX8WoabaX8IKw3kMc8at9oLKocA+9DlgNhqIo0icKFC50+wupIZLm&#xA;2inkt2527yIrtG38yFgeJ9xgpIJV8KHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgNb1iPSbIXLW8&#xA;10zSJFHBbhObM5oN5XijUDqSzgZGRplGNqmkapa6tpdpqdpy+rXkSTRcxxYK4qAw7Ed8INi0SFGm&#xA;G6AsV1caprvH97q907q/jb2/+j21PZo4/U+bHNBq8nFkLtcUeGICXq8Go6tN5gumK6VoInjsfB5V&#xA;UpdXBp1CgGJP9me4ynkK6lsZV+XOkS6R5I0ixm2mEPrSpSnBrhjO0dP8gycfozosUaiA6nLK5EoC&#xA;9/LyS6/MW283vqkzRQQ+kunVdBGVAp6bRslUY7urq1fuonH6rSMnp4aZlljUknmzX73QdPj1OKxN&#xA;9YwSA6p6bfvYbah5zolD6np7Fl8K5CUq3ZwjZpGaJr+ka7ZfXtJuBdWfNo1nVWCMy/a4FgvIDpVd&#xA;q7dsIkDyRKJGxYZ+cFoz2el3KWkl8WlmsXtYpfQZ0uYTJT1arxq9sg65hdoRuAPKi5ehl6iO8Pn8&#xA;xWNtHpsz6o82o2zyTvpzo6m3McbSVMz8Q3xKvRf6nX7m9tnYvRPzR0i2itofMQitQbFgbxZYDK1w&#xA;GeNURijRkqtOjHfpUCuYemmSeHvbcg6q/wCX2sXuga8+rTtK+k6qi/p0Lbm1tbadmVYZIUl4Oyxr&#xA;VZXA6fEanpu9HjyQBsVF1eqyY5UAbk93zYOAkmveS/LWvXEdxqto08scZgqs00QaJmDGORYnQSIS&#xA;PsuCMhKAPNnGZHJOYoo4o0iiRY4o1CoigBVUCgAA2AAyTBdhVItI832Oqa9qejW8Eok0tik87NFw&#xA;LAJsED+r1fYlOOx3yAnZpnKFAHvT3JsHYq7FXYq7FXYq7FXYq7FXBgRUEEVI28RscVdirsVeW6W/&#xA;ne289RC8ttWeM6jdC+u/UMumPp8wkFqI4OXFGRvS+JRyHxctsoHFxdXIPDw9OXxepZe46y4t4LiB&#xA;4LiNJoJVKyRSKGRlPUMpqCMCgpb5ivotH8t3tzEvD6tbstrFHRSZCOEMcYHQs5VV98jM0LZwFyp5&#xA;knmG6sfKlp5ftIJYvMyQtpscAiZRE9tEwe4qw4cBFEZU3PIUp3poo4DKfk7QzAFphN9SPkDTbGF0&#xA;9DU4rHT4QCKOLxo4WA8ao7E/TkcUeLIB5pmaBL1IkAVPTOidOhW1O1JKwk3DjYrCOdD7sPhX6TjS&#xA;rJZdWeN2iijhIBKrIfUckDYUUhRX/WOKrrm2stX0qS2uUMllfQlJYwzIWjkWhHJCrCoPY4CL2SDW&#xA;6taWltZ20VraxJBbQII4YYwFREUUCqBsABiApNsS/N+KB/IN806F4o5rNpFUsGKG7iWQAr8Q5Rsy&#xA;7b77ZTqQTjNc27TGph4XP5X8xz+U003hcLdRtzt9GMJFvGS45MLoSAMSvI/GzChK0B3zXjR5fE+n&#xA;4ucdZi4fqZqunX8+m+U73UL9dS0i4kMkUjxGOZbuOF+ENxuyO0bK9HHGrKNq75kaTRRhkEu/73H1&#xA;WqlLGY/imRSxRTRPDKoeKRSkiNuCrChBHuM3RFulBpOPI/mGa2mj8s6pIXkRT+h7xzUzwoP7lz3m&#xA;iXv+2vxdQ2YhjwmnNEuIX82W6rqun6Tp1xqOozrb2VqhknmfooHy3JJ2AG5O2AmtykAk0FPRdYtd&#xA;WsUu4FeIsF9W1m4rPCzKHCTIpbg/B1bid6HADaZRoo7JMVC1sbS0MxtoliNzK085UU5ysAGdvchR&#xA;gASTasxIUkAsQKhRSp9hWgwoSXyt5lfXY75pLF7BrO6ktPSlkjkdjEAHb90WX4ZCyGjEVU75CMrZ&#xA;zjSd5Ng7FXYq7FXYq7FXYqw38vPJMmgR3V7fLB+lb6a5eZo4YAwSW6klUeuiLNICrLs7GnQdMrxw&#xA;ptyZOLlyZlljU7FWN6r+ZHkjSdXfR9R1aK11CPj6kUiyBV5qHUNJx9MHiwNOXTIHJEGmwYpEWAmm&#xA;neYvL+pmmm6naXp8LeeOU7eyMcIkDyYmJHMJhkmLAtcjPmnWZrV7iaLRNGnRVW2cwtPfRgmQmVKS&#xA;BIOaqvBh+8r3UZDg4+fJsEuAbcyl1nFNaXfmO71O5kv9K8t2TvpscjGSYG6gLzxySNVpHVYwsZap&#xA;4vuScq8MRkS2mZkAOpSE+TL7QNHtNduLiOa60hre+v7MIDCkVrIk9x9Ur8UczLEat0ffYVqB+WER&#xA;xdU/mOI8PQvXHtoZdTkjuV9VGjWSFHJKDieL/ATx2+E1p3zJcVMFVVAVQAB0A2GKuxVK4rieCU2E&#xA;Cq0oldlDkgCEjnXavRm4YVRP124j/wB6LV1Hd4qSr9wo/wDwuBWPfmBf2svlS59KYc0nspGUj40V&#xA;LyFmco1GooBJwH9ISP0H7mPZmOC1p9tPqHkfXNDt0D6ho9217YxjYyBpv0hCB4BnLw/RmFIUT5G/&#xA;0ufAggHvFfoU7S6gu7WG6gbnBOiyRN4q4qD+OZgNi3BkCDRWahZLeW/p82hlRllt7iPaSKVDySRD&#xA;/Mrf0O2CcBIUyhMxNhlmiXdj5y8s3Ona5bRyzITaaxZGvAyLRldO4VxxkjPUf6wzEq9i5gNUYq/k&#xA;bypL5X0qfSjcrd2wuZZrSYpxnMcp5UuHB/eyBqjntUUwQjwimWSfEbZDzTnw5DmByK13p0rTJtbe&#xA;KuxVLtK8u6FpMk8um2EFrNdMz3M0aASSMzFiXf7TfExO5yIiByZGRPNMckxdirsVdirsVdirsVUp&#xA;7y1goJpVRj9la/Efko3OKqP1y5l/3ntmp/vyc+kv/A0L/wDCjFVokvYbqEXEiPHPyTii8Qrgcl3J&#xA;YnZWxVhMOgaBd/m9rOn6tp8F8NT0y31OBp4lcxtAy2jenIRVGYIOXE7gDwyggcbfxHgBCYaj+Qv5&#xA;aXhkdNOezllqXkgmcnfwWUyoPoXE4ooGeQSs/kbqFgip5d856rpqJSiSu0ymnYqjwJ0/ycHhkciy&#xA;8cHmAl9r+X35y6Egh0zWNP1Gwj5lILhOMrM7F2YkRxklmJLFpSSThHHHkVMscuYSi5k/N3T9H1S1&#xA;1Pyj9a/SV3Dd3MtjJ6jMiNCroscRuTRoYPTAJqOu+RMpdQyAhtRdrX5q6c2l3Wm6zo+paVc3sE0C&#xA;pNEKBnjK0O4cdf5MsOcVRDGOnN2CCy3TPzY8h3dvpztrEUF7Csa3UVyJICvqIFkBaZUUhWoSQabY&#xA;Y5Y97CWGQ6M3sNV0vUY/V0+8gvIv57eRJV+9CcmCC1kEc0VhQgoY0k1a4uAN4Y0t6+5rIw+5lxVG&#xA;4qx78w4on8h+Yi6qTHpl46MwB4ssDlWGx3BFchP6Szx/UPew+e4t7eMyTypFGOryMFH3nM0kDm4A&#xA;BPJLdI/MPyjofmo3NxqkJs72zaC5aDlcES28geAFYBI32ZZh0zEy5I8V25uHFPhIpIE8/wCiQ6rq&#xA;FholnealatMZ9OSGLiVSf42jKyFWAWUvwov2aDtkcepERTPJpJSN2AmMF7+aGpoTpXk2aE1IU3zm&#xA;GoHekogX/h8J1MjyixGlgOcky0zyH+d5vzqEWoadoclxEkN4iASMyoxZaKUukJXk2/IdcqkZyN7B&#xA;tj4cRW5TlfyZ8yX0jPr3njUruKTd7W3LwIK9hSQp/wAk8Hhk8ynxgOQSvy95A0Lyv+bVnp2kvPIt&#xA;ppUmoXVzcsju7ySG2CM0aR9m5UPzxhACSZ5DKFnvepm+swaeshPgrBj9wzIpxnfXYz9lJX+Ubgfe&#xA;QBjSuF03qRo0DoJCVVm40qFLdmJ/ZxVXxV2KuxV2KuxV2KqdwFNvIrP6alSDJWnEEda9qYqhdGFq&#xA;1jFPDGis60kZAN2U8W+LqfiGJVHYqhtSjdrN2jFZYqSxjxaM8gPppTFWI+YZfqv5keS9WiNLa9W7&#xA;sLl/ESxB7dR/z0Jyqe0g3Q3iQ9GyTS7FXYq7FWnRJEKOoZG2KsKg/QcVY/qH5e+Rr8N9Z0KyLPs8&#xA;scKRSGnjJGEf8ciYDuZjJIdWLaj/AM49/lxdAfVYbrTGDFg9pOSwJ60acTkZA4Ytg1EmMN5c1vy7&#xA;+YWi6BoXmjUb0FVudRsZ5C8MFnHIvMyc2df3kfJVCoCGKmoqMABEgAWfEDEkgPWNMq1qJj1uGab6&#xA;HNV+5KDMkuK8vsvMH5xea9S1Ww0ebTNEk0uf0biKZWaaNS7BSSwnDclQkMIwp7eOY/FMnZyTGEQC&#xA;bKYyflH571YEeYPPFy8EqslxZWqGOJ1cUIJjaBSCOxjpjwSPMo8WI5RROn/847eQIGZ71rzVGenP&#xA;61MAKDsDEsbgf7LHwgg6iXTZlGnflj+X+nRqlvoNowTdDPH9ZYHxDT+o345MQHcwOWR6sjgt7e3i&#xA;EVvEkMS/ZjjUKo+QFBkmu1TFXYq7FXnXloHUfzD866gWDwRNa6bbEA1UxQn6wpP/ABkocjD6iW2e&#xA;0QGYWTcrOBuhKKSPem+WlqVsVULzZYn/AJJU/wCGbh/xtiqU+abLzPd/UY9EvEso1uEe9m485fTD&#xA;AEICVSlCSeVflkJA9GcCBzT0CgArX3OTYOxV2KuxVQu7oQKgCGSSVuESCgq1CdydhsMVU0snmYSX&#xA;rCRgapAv90p+R+0fdvoAxV1t+6vbmD9l+M8f+z+FwP8AZLX6cVReKuxV5f8AmdLcNDpOk2Msdtqe&#xA;nXrapa3cz8I4ksyvp86BuQb60oAO3wmtaUyvKLr5tuI1ZPuQdp+bf5i2M5TVtP029tgivHc2S3vB&#xA;61qDKkU6Kw471UDcZC5Dmy4YHlf2JvYfn3p8m19o00cg6x2V1a3b/wDItngl/wCEr7YjJ5IOHzZB&#xA;B+cPkJnWK7vJdNnelIr62uIKA9CXZPTFf9bD4g6sfCl03ZDpvmjy1qhC6bqtneMf2IJ45Gr4EKxN&#xA;ckJAsTAjmEzwsXYqlHmzzLYeWvL95rN6axWqVWOoBkkOyRrXuzfd16YJSoWyhHiNMG8m+XdbtdNv&#xA;de1iUJ5g8ySJLdjh+8jWQhIYKuTxWNW3WlR05fCMcUa3PMs8sr2HIPQERURUUUVQAB7DLGpgPnmG&#xA;68sa/Z+ftNjLxRcbTzHap/u20cgCWnd4jT/hakKDlOQUeIN2M8Q4T8HpFneWt7aQ3lpKs1rcxrLB&#xA;Mhqro45KwPgQcmC1EUrYodirsVQOpa7ommLy1LULaxWleVzNHCKf7MrgJASIk8mPXP5t+QIZjBFq&#xA;f164HSKxhmuif9lCjp97ZHjDPwpMc1L8+9MhnNrp3l7Vb68CswhMIiqFPGpoZXUVP7SDAcnkWQw9&#xA;SQ3+Td8LnTtbNzHJba1Pqc1/qdnKPija7CsnEjYoyrt9IyWLr3rm6Vypm8MwhsiSORR3RUHUkOVU&#xA;D55a0qkd18YinX0ZTsoJqrf6rd/l1xV1/wD7xzHuilx80+L+GIVXxV2KuxV2KuxVSurdLiBomJWt&#xA;CrjqrA1Vh7g74qtsrh5oysoC3ER4TqOnICtR7MNxiqne/u57a5HRX9KQ/wCRLsP+HC4qi8VdiryL&#xA;8w2ivvPUVsKPGn1G2cUqOcbT30gP+xhiys7n8e9tG0fn+pJdf0rT1mZbDTreKaMQPd3aRmNh9auF&#xA;toEDxGM8ncseRJ4hTtUjIZSAQANyzxWQSTsl+r6O95HZ2dvPO8+t3k9np8M080sdvDZ3KW1zcN6j&#xA;M8knJqhCeHCuxzHyzNkdA34ogAFCXGgwyXd02gv+j7C1dNP09rcvHcTXDSNRpJY2XkJEVriX4dou&#xA;CpTsIXYA5llIirPRF3nk++bkZbFLgMKEpJbXLEe5ureKT/ktmUcZ7nFGUd/4+BQ1nLq1nETpt7fW&#xA;caOQwtHvUUMNirtazajBt/qUyHD3fj72Zl3/AKP00m9t+Y35hwTxW9lr1tcSVCm2v5LSRQOpZ39O&#xA;1uun/FZ+jGz0KOGPUfj7k80y78z+c/OOmWfnMWUFlpSvqNpaWRcw3cyMqKzeozt+75g702qKEM1J&#xA;CJJ9SOKIieFmnn7VvMFhaWY0bSv0m00wW45xPNFGgoPj9FvWQmuzpFJSm4HXLJyI5NeOIPMp5HYS&#xA;rGpjmkt5KDnGr+tGGpuB6orT5UybWsuIruaCa1uYoL63lUxzxbpyRxRlZG5qag+Ix2UPNNF873v5&#xA;dT33lK+02/1WGE/W9CW3QzTLaSs3wzFS9FWQFQ29Ty6CgzHsxNc3IMRMcXJUb88PNF9Ex07y/HZS&#xA;hyhiuxeXMg4sR8aQQIiHbo0n04RKR6IOOI5n7kk1D80PPs0wWXV4tNqCDbxx2VvyJ2ovrS3s4/5F&#xA;1wEnv+5kIx7vv/YlEt15l1Mv9Z1DUr5ZNzGz6hNDt/LT9Fwfdjw3+D+xeIDu+z9q218nXm3p6cIq&#xA;Emsxs4Nz1POOK+m/5KYRj8vu/ag5R3/f+xBR6bNfzwxai31X60Gh095JprqOOYSCJXYTu8bKky/V&#xA;5o/THHmG8DlE5E/BvjED4ojSLGK1mtrPWbq90+eZnjT6r6NnaO8UhjaFjaxxOkiP8JDNTpxYhlrP&#xA;FMHYmmGWJG4AP2/ezD8nr2eLzXqOnyO05ktZopLiQlpGbTL6SNOTEksfRvY9zv0y2B3/AB0LVkHp&#xA;/HUfsep2sRkuZZSawRyMYB4sRR2+g1A+nL2hGSRpIhSRQyHqpFRgVCTQ3MULrF+/iZSPRc/EKj9l&#xA;z1+Tffiq2xupWZI5WU1WgChgVdKVVuW9SDXoMJVHYFdirsVdirsVQd6Dbyi+QbKON0o7xdeXzStf&#xA;lXFVa6hW5tJIg20qEK47Ej4WHyO+Kof6xqRg5yRx2iqtZZJW50oN/hQgU/2eKpe5uLp44H9f1pSH&#xA;jMxWKExqQT8CbtUfsHf5YVeZv6dz56vJYkVIY7i+YIuwU2/o6elAP+MEuVR3l8/1Ns9o/L9aZw6b&#xA;b3+vyaZcM6W+r2DLJJEeMiS2M8ctvIhIIBQzuwqOtOuU6kUQWzTnYhllh5R0SzOlyCJprnR0nWyu&#xA;ZWrIDdU9d248VLSU3PHuaUzEJci3n2sWEHlabTdG0i2kvbXSIfrF1NNIFL3N/IttAWYKeUvBHRFC&#xA;/ZO9FFctxTqV82OSPFHuVdfeym1DStOlvhazXVxwj4ScZUeWN4oJVQEcws7JVTsd8ytRKhsXG08b&#xA;JsbMf0e31LT7EXunxBLyyv5tN1nTNqT7NNEUIG0kbFoFb9oBa/CMxYZTE7cnKnjEhRZPp2raPr0U&#xA;giT1oU3pNH8LrzePmoatV5xOvzU5nRmJcnBnCUOaM/Jywt7j67cvCpt/qtuIoyo4L9blnu3UL0AC&#xA;SxbdshjbMn4+56T9Sli3tJ2jH++pKyR/ieQ+hqe2WtLheyxyJHdwmMyMESVDzjLHoOzD6R9OKoCx&#xA;8raXp2uy6rYu9vNeI638Acsty5fmksnMs3OOrKpB+yePQLSIiAbZmZIovP8A80mvrXzfFJG7w21/&#xA;YWiPKlQwW11DhNxYdKJfgmmQkSD+O/8AaziAY/P7v2IdvLOhU5XURuh0JvZZbld9uk7Ou/hTLOAd&#xA;WrxJdGOzzQ3UN3ZNaw2tnBbXmpcbb91ytraK4WLkVP2vVjjk227Zh5Mtggd7mY8VEE7p15cvtTmu&#xA;Z0vZRJHIhltlAHwKl1cWpBYfa5C3V9/E5kYshJIPRx8uMAAhP8vaGJahYy6te6voNvbmN7g+vps/&#xA;ICmpRW4dlFCGRbm25IT0qhP2q5r8+03YYPoDKJPKWp6xpqXV5bRxz3sVne3VlKeLJfCP0L1fhGwm&#xA;tjwr2YVyhtth/k577TvzGWyuJjFPDqEljNMdzKt3ZlFkPvK+nLIPdsy8UrIP45fscfLGht3fp/a9&#xA;/jjSNFRBRFFFHsMynEbxVTuZvRiLAcnJ4xp/Mx6DFUPJbNFacl+OeJvWLd2b9r7xUDFUWrK6hlNV&#xA;YVB8QcVbxV2KuxV2KpHpPmyz1XXdS0m2t5mXTeIlvChEJc0rGCwU8q16VGx3yAlZpnKFAFFrcppz&#xA;NbS8jFu1pxBYle8f+w7f5PyOTYLLT6zqTC4uFEdkprBb7H1COjufAdgPn4YVRt+lqbWRrnaGIGRn&#xA;rQpwFeQI6EYLV45pWjQXmk2N3ctNHfSwiaWaGaWB+VwTM4b02UN8ch+0DkIxsBnOZBKbeUdNli85&#xA;gteT3cVpp8pKTmNvTa4mjEZVkRG+JYH+0TmNqdqDfgNgmnoeYzc8f8za9a23m64rDeanaw3Dz3N1&#xA;awGSCO69NYI4mevH/R4VNf8ALc9CMvwCjZDHLvGgQgjreleYLq4i095fV9O3dZGhdTDdWmoW6wlS&#xA;68S3+mtXjX4Tv1w6iQJBCMETEUXof+CjHqGq3kFwq/pLULDUFjKkCM2jRmZag/EZVjb5E5jttvPZ&#xA;NH1HyxY3dlKFWW2stQFqqmoML3J+pdK0rV6DqK5kYDz9zVmo173pX5WWSW2g3kqCqTXsqR0/ls1S&#xA;yA9t7Y7ZlQDizPL8ebJorq/uoklgijhikUMjysWah3HwJt/w+TYObTWmdHurmSQxklVjpEoJBFRx&#xA;+Pof5sbVRvra0so47uKICSGVCSorI4c+mRU7ts/TCrz784dLupbXS9QllMdxcPd2CxA1VPrNpJLE&#xA;BTuJbZKnx9spyjk3Yjz+H3pXq8Ka3punwKAY9S5Mi9at9TmmiA8T6iLx98jqD6E6cVM+SX+WtD1X&#xA;WNFXUbNDJaXnlO90hZdizXsVw0SmpoauoO/TMEuaSiJ1vtFvdCnvpUs4p7KGHUILigaNpDd3G71o&#xA;GWQKv0nL8E6l72jNC4+5Wu/PnlG1AMmpRODQKYeUwJJoADGGGZhyxHVxBhmeiHsdUg1LzJo2pWkc&#xA;1tZyXCQPqMojETPHIfTXiJPU5N++gWq0BkzG1HqFhycI4biXsOYra8g852NtpXnXVNfkLs8Emi6k&#xA;0QIC+nBcem7fPhE49q++X4uRPdTCZ3A77e4ZnOE7FUND/pE5uD/dR1WD3PRn/gP7cVROKoez+ASW&#xA;/wDvlqJ/qNuv3fZ+jFURirsVdirsVWLDCkjypGqyS09RwAGbiKDke9MCoRidQkMa/wC8MZpI3+/W&#xA;B3Qf5A7+PTpXCqOAAFB0xVAeYLUXmg6laGYWwuLWeL6w32Y+cbLzPTZa1yMhsyiaLyT9OapY6HDq&#xA;l7o0iWTqnotbyxOSJCFi/dzNBJV6ii8SwrvkTl4Y8RGzMYOKXDE7pp5E8yaVbXFymrLJYavqk44v&#xA;OF9BkWqwQRzIzqOK9n4lnZuOaz8zHIbBdlPRzxR3GzfnHz3ayavN5ctr17OKAAanfRJIWJYV+rxS&#xA;oCsbBSC71qOi71K34oAnfk40yQNuahpWoaA8KW2l3Ns8UY4pDBIjcaduKnx65nxI5BwZCXMoHy/c&#xA;Q2+tQaxcqrWt3qNzaTs3xKoaRILeQ1/4us4gD2qD2zGzxuN+blYjR4fL9v6XrOYjc828z2VjqXm7&#xA;ULi7aT0tNhtIOKSSIhMfK7PqIrBX/vkO4zK08AQSWjPMigGeeQbdoPJmjh14yzWyXMynqJLn9/IP&#xA;+DkOZEOTTk+opnp3wLNb/wC+JWA/1X/eL9wemTLBFSSJGjSSMFRRVmOwAHc4qhLeN7mVbuZSqL/v&#xA;LCwoVB25sP5m/AfTirG/zZjjHkya+aP1G0y6s75OxAhuY/UNf+MRcZXk5X3NmLnXe8+k0rVtJ023&#xA;mjvvWh0Mx3NpaxwhGeO13ETMWcktGCnw8cjkxnhq+TLHkHFdc3rVqLYW6G1VVgcc4/TACkP8VQB4&#xA;1rmA5TDPzJ0KyuxZXtwFlLT29qLaReSODMHJ+ax+pt75PELkESNRKEtNM02yFLO0hth0pDGsYp/s&#xA;QM2QiBydeZE80t0+0gnbW9MnWsJuiwUVU8J4o5eQI6H1GahHcVyIANgsySKIZHoXnCSymt9H8wyK&#xA;JZCIrHVCQEuD0VJR/uuY9P5XPShPHMHLiMfc5cJiXJB/mLph8wSPpWjIH1uOF4Lu4YhbeK2uloY7&#xA;h925Ns8aqpYEV2U7xgSOTM11ZX5X8yz3cL2eoD/cvYqq6lbj+8RjsJVUf3kMlKo6j2IDAgZ8JiQ8&#xA;3CnCvcnF5eI0SJC3ISkc5EP2IyQrNX6af7WWBgjFVUUKooqiigdABgVvFULM6R30JDDnIDG6V+Kn&#xA;2lansdvpxVFYq7FXYq7FVC+glntZIon9N2Gx3AIrupI3HIbVGKtWVxE6eiqejJCAr25oCgGwpTqu&#xA;2xGKojFWD/mlrzW1jbaHBD9Ym1VuV0nMIBZQun1hS1D/AHocRgU3BbwzF1WojjAvq5mi0ss0jw9G&#xA;BXWv3Pma7ivJYPqun2LMtnblg/ObdHnJAAIAqif7I9xmq1+t8Sojk7zszs/wyZS3Kjqr2qadcNdR&#xA;iW3EZ5xEV5+CgeLHYZroXYp22QjhN8lTRZ7S18v2en6j5at9QmhTlNJcPFKzyuS7tV423Lsdyfpz&#xA;dQ7RxAAEW89PsnMSSDTV3b+R71Qt/wCXL62HTlBKJYVqO0SzGv8AyJy0a7BLns0y7N1MeVFH2Oke&#xA;X9Ss20jSPMbqkkbRjTLyCJXVGBB4w+naTila1rmXAwmKjKw4GSE4G5Rosy0rzbptt5ds7jXb+G1v&#xA;ED2tz6rhWkubZjDMUQ/E3J0LACuxzAkKO7kgcXJgcurvr2va/oehW013d6m7SQXfwQxrE1vDC0rC&#xA;d4pKRdPhTem2ZODIDEgNefCYyEpbPZ7W7skWO1ANsyKEiglHE0UUAWuzU/ySczKcK3c1j1bhUVuI&#xA;a094m/iH/DFWtRSQtDIymW1jJaaFftEinFqftBevH9fTFUXFLHLGskbB42FVYbgjFUu8z6Y+q+Wt&#xA;W0uOnqX1ncWyVoPiliZF6+5yMhYIZQNEF5LpfnDSbmwhWeV31ARIL6zjhllljl4/vEeKNGYUao6Y&#xA;xyAjzTPEQfJnP5ezvL5P08MGC2/q2sQcFX9K1meCPmrbhuEYrXvmtkKJDm3e7HfzHXVtV1uw0zTL&#xA;v6mNNjN7czcVb95PyhhABVt1RZa7j7Qy/TYjI2Nqac+UQjuLtiNxpFkJRFq3mqRpz/x7xS8S3b+4&#xA;le4B+hcyzjiPqk44yyP0w/H2Iuw0Ly5bxstraapcJJ8T+jb3yxOelWEKRwMaeOIOEfgqfGPd9iP/&#xA;AETpaIyR+V5yky0kZbIKSGFDyLcXrTD4uLu+xj4eXv8AtRPlW9v3sLfyrB9YsNcLS3GtXtwKz+jy&#xA;BNxG0gq7Tl1RGYfDRv5ADgeTmy7yyU+VYNLZdR8uRR22swg1llLN9bRiC8V3IeUj8+OzmrIdxtVT&#xA;KJo2GBN7Fk2h6ppmtWMs8EfpTFjBqNq4AlimUfHFLTuOWx6EEMKgg5mRnYtx5RoouG4uPSWP0WeZ&#xA;Phdm+BKrtXkfHrsDkmK/0LiT++mIX/fcXwj6W+191MVVYoIYQRGgWvUjqfme+Kr8VdirsVdirsVU&#xA;Lq0ExWRG9K4j/u5h1H+SR3U9xiq23valorkCG4jHJ1J+EqP20Y9V/V3xV4p5/wBVk1jzvf2VtziZ&#xA;Ibe0aXdWjtgn1h5B4NL9ZCp9/wCzmk7Sl6xfT73ouyIfuzX8R+xuGGKGFIYlCRRqEjRdgFUUAGag&#xA;m3fAUKCXXNL7VY7Trb2PG4ufAyneFP8AY/3h/wBjlg2jfe1y9Uq6D8D9fyTTK212KqN1Z2t1H6Vz&#xA;Ck0fUK6hgD4ivQ4YyI5MZREhRFpboFjaQyX0gTldi5kjkuHZpJCleUal3LNQIw2y3NklKrPRo0+K&#xA;MLoVun2iXiab5t0bUmH7symwuD4R3tEU/ROI/ormV2dl4cld7h9r4eLFf816N5s856NoV3p+n6la&#xA;XFwdVk9GAxRLJEHJAAkZ2VV65v5TEXloYzIFMriyt7Qx3UQIMcicqszUjJKECpNAPULUybBMiQBU&#xA;mgHUnFUpluoIZjLp7+uzGs9tEC6se7AqCEf57Hv44VRo1G1NqbnkQq7MlPjD9OBXryr2wK80/Ma+&#xA;udH1qLVZ4ZJpLvTLlvQhXn6a2DrIORHwhQtyxZyQO3gMj4ogb8mXhGYrzQujN5TtdMiWTzJek1aa&#xA;WeO5kit1lnYzSkNAFg4+ozHcke+YJomy5m42AReheWdF1PU9YuNQmOvgTQrDc3DB42i+qxMqGOMr&#xA;bvQN9vhU13xj3MZS5Mws9PsLGL0rK2itYv8AfcKLGu3soAwsCVfCh2KpN5h0y4k9HVdNQHWNPq0A&#xA;qF9eI/3ts7fyyD7NejhW7YCyieiYaZqVpqenwX9oxa3uFDpUUYdirDsynZh2O2KCKQWo2V9a3y63&#xA;owrqEa8LqyqFS9hXcROTssi1rE/Y7H4SclGRBsLsRRZXYXi3llBdLFLAJ0D+jOhilSo+y6NurDvm&#xA;YDbjkUr4UOxV2KuxV2KuxV2KuxVSuLS2uQonjWQIeShh0OKvIb3yv5gs7u91TU7X/TNSmNxdzQfv&#xA;Il2okasADxjQBRyAr175zuux5TMykNnrOzc2EQEYn1JVf3kdnaSXLgtwHwoOruTREX3ZiAMwIxs0&#xA;7OcuEWp6VZyW1oBMQ11MxmunHQyv9qnsv2V9gMM5WfJGONDfmjMizdirsVS6z/d6xqMP+/RDcj/Z&#xA;KYT/AMmBk5fSGqO0iPcf0foRV9bC6s5rcsU9VCocdVJGzD3B3GCEuEgsskBKJB6vU9Gh0LzdoOk6&#xA;xqum2l7diIGs8EcpguFPGdYy6sV4yxkbeGdZAicQXhsgljkY8k51S6023snOpXMVray/umlmkWJa&#xA;uCKBmIFfDJk01gEtrptk1HkU3B6hpmMn0gMSo+gYbQigoUAKKAdAMVQ4tbKWdbtVV5VqFkBqKiq9&#xA;tiRuK9sbViP5paW93YadJCwWSS6XTp0P+7LTUCIbhB8qK/yU5RnGzfgNFOsoSkHlG1t4P00YIVgW&#xA;XVLh2VBRWYKiFqe/DemAM5dE/wALB2KuxVtVZjRQSfAYgKgtM8uX9nrV1JCVTSb8G4liJ+KK7qAx&#xA;jX+WZTybfZlr+2csjhKJZBXmyOG1hi3UVb+Y9cvjABqMiVXJsXYq7FXYq7FXYq7FXYq7FXYq7FUn&#xA;1byh5d1Z4nvbJHeGT1kdKxkuFZQWKFeVOVd+9DmPPTY5cw5OPWZYcpHb4pTdflxpj1Ntcywk9mCy&#xA;Af8AET+OYU+yoHkSHY4+28g+oA/Yl0v5a3wP7q8icf5asv6uWUS7Jl0kHKj25DrEoZ/y611ektu3&#xA;yd/4oMrPZeXvH4+DcO2sPdL7P1qbfl/5gBoBE3uH/qBkT2Zl8mQ7ZwefyQMv5c+Z/wBLW9ykURi9&#xA;GSKc+oopVkaM/gw+nD/J2Wq2YntbDxXZ+SPX8vtfIqfRX2Ln+AOAdmZfJJ7Zw+fyZL5F0DVtCtb6&#xA;zvWja3luTcWgjYsUEqr6qEFVp+8Vn/2WbjSYpQhwydBrs0MmQyhyKJ84+UbLzTpS6bd3E1tGsolE&#xA;lvw5/YeMj41daFZD2y+cOIU40J8JtOoIhDBHCGLiNVQM1OR4ilTQAVyTBbeWyXVpPauzKk8bRMyH&#xA;iwDgqSp7HfbEhIKV+UvLY8vaV+j1nWdA4ZCkMduiqESMBY49t+HJj3Yk+wEY0GU5cRtvXtJu9RvN&#xA;JeMoLexuHupwxIZj6EkMYAAIO83L6BkckTIbJhIC1U6fcex+nKfCLLjCW6DoWpWtvdLc8Q815dTo&#xA;OQP7uSdmj6f5FMAwyTLIE0Gmzd2Uff8A0yXgljxhUXTP5pPoAyQw+aPEVUsLdeoLfM/0yYxBBmVd&#xA;URRRQFHttkwKYW3hV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVV/0f/Kwbq7/R/wDKx3V3+j/5WO6u/wBH/wAr&#xA;HdXf6P8A5WO6u/0f/Kx3V3+j/wCVjurv9H/ysd1d/o/+Vjurv9H/AMrHdXf6P/lY7q7/AEf/ACsd&#xA;1d/o/wDlY7q7/R/8rHdXf6P/AJWO6u/0f/Kx3V3+j/5WO6u/0f8Aysd1d/o/+Vjurv8AR/8AKx3V&#xA;3+j/AOVjurv9H/ysd1d/o/8AlY7q7/R/8rHdXf6P/lY7q7/R/wDKx3V3+j/5WO6u/wBH/wArHdXf&#xA;6P8A5WO6u/0f/Kx3V3+j/wCVjurv9H/ysd1f/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpTPg:MaxPageSize
    stDim:w="966.258333"
    stDim:h="644.172222"
    stDim:unit="Millimeters"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Группа образцов по умолчанию"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
   <dc:title>
    <rdf:Alt/>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Denis</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:ec139463-1a89-4ce0-9cf6-09b3d64e8105"
    stRef:documentID="xmp.did:ec139463-1a89-4ce0-9cf6-09b3d64e8105"
    stRef:originalDocumentID="xmp.did:ec139463-1a89-4ce0-9cf6-09b3d64e8105"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:ec139463-1a89-4ce0-9cf6-09b3d64e8105"
      stEvt:when="2021-09-10T16:29:44+03:00"
      stEvt:softwareAgent="Adobe Illustrator 25.2 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:265dc5c1-0b57-450f-9c4f-d1c13e38979b"
      stEvt:when="2021-09-10T16:29:46+03:00"
      stEvt:softwareAgent="Adobe Illustrator 25.2 (Macintosh)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                    
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1826 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1826 li
2739 1826 li
2739 0 li
cp
clp
0 0 mo
2739 0 li
2739 1826 li
0 1826 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .952941 .972549 rgb
ef
1522.05 317.468 mo
1535.66 291.817 1569.01 295.89 1569.01 295.89 cv
1569.01 295.89 1577.62 245.432 1604.73 228.168 cv
1617.51 220.028 1641.68 220.014 1657.61 234.773 cv
1665.73 242.299 1681.57 260.387 1689.95 274.553 cv
1697.6 287.479 1699.09 332.846 1707.92 365.233 cv
1719.07 406.15 1747.22 437.647 1760.05 456.737 cv
1771.16 473.281 1767.84 480.146 1767.84 480.146 cv
1678.38 560.742 li
1678.38 560.742 1665.43 557.254 1652.37 551.858 cv
1639.3 546.463 1626.13 539.168 1626.13 539.168 cv
1630.57 574.236 li
1527.97 590.994 li
1524.4 580.613 li
1524.4 580.613 1526.92 553.022 1519.46 514.179 cv
1514.3 487.255 1507.86 460.207 1504.19 428.466 cv
1502.6 414.768 1498.6 395.893 1500.29 382.9 cv
1502.81 363.553 1514.89 330.969 1522.05 317.468 cv
cp
1 .721569 .411765 rgb
ef
1579.01 1360.55 mo
2040.02 1282.52 li
2062.15 1308.49 li
2087.63 1328.81 li
2082.04 1349.69 li
2082.04 1349.69 2002.45 1344.88 1917.45 1354.06 cv
1832.45 1363.25 1742.05 1386.44 1742.05 1386.44 cv
1625.56 1426.63 li
1593.15 1442.41 li
1593.15 1442.41 1592.89 1446.67 1590.11 1435.85 cv
1581.38 1401.9 1579.01 1360.55 1579.01 1360.55 cv
cp
.647059 .74902 .823529 rgb
ef
1533.84 584.635 mo
1538.51 580.011 1550.04 570.383 1550.04 570.383 cv
1564.38 578.171 li
1564.38 578.171 1586.94 581.015 1599.27 578.806 cv
1611.6 576.596 1615.69 568.005 1615.69 568.005 cv
1615.69 568.005 1630.2 570.771 1636.85 583.772 cv
1643.5 596.773 1640.31 621.352 1640.31 621.352 cv
1654.56 660.186 li
1681.77 757.84 li
1538.59 780.948 li
1538.59 780.948 1531.84 743.214 1535.3 704.877 cv
1536.62 690.187 1527.8 677.223 1525.72 660.976 cv
1525.14 656.451 1526.08 646.897 1526.7 642.784 cv
1529.14 626.432 1522.74 613.098 1524.92 600.594 cv
1525.8 595.618 1530.39 588.05 1533.84 584.635 cv
cp
ef
1688.81 526.993 mo
1693.21 518.191 1714.82 499.155 1714.82 499.155 cv
1714.82 499.155 1724.46 503.296 1736.05 498.699 cv
1747.63 494.106 1761.16 480.786 1761.16 480.786 cv
1761.16 480.786 1771.48 479.412 1778.96 488.177 cv
1785.98 496.412 1789.76 514.315 1801.92 528.901 cv
1821.81 552.78 1849.26 585.978 1868.16 611.874 cv
1910.88 670.43 1932.04 715.007 1932.04 715.007 cv
1750.19 746.264 li
1750.19 746.264 1716.25 689.05 1700.91 634.233 cv
1698.56 625.857 1694.15 605.657 1691.56 599.658 cv
1681.41 576.222 1674.75 571.839 1678.67 555.465 cv
1680.32 548.599 1681.56 541.505 1688.81 526.993 cv
cp
ef
530.325 1251.54 mo
873.731 1265.59 li
1076.44 1343.59 li
1079.62 1382.56 li
958.444 1388.84 li
602.479 1424.83 li
490.792 1334.36 li
490.792 1334.36 496.781 1315.29 506.665 1294.59 cv
516.548 1273.89 530.325 1251.54 530.325 1251.54 cv
cp
.843137 .85098 .898039 rgb
ef
1379.05 827.242 mo
1378.51 813.223 li
1388.6 807.649 li
2101.14 685.485 li
2107.85 689.904 li
2111.69 700.116 li
2072.66 907.942 li
2063.05 916.625 li
2076.01 916.606 li
2086.05 925.622 li
2141.37 1243.97 li
2038.39 1282.33 li
1757.97 1329.71 li
1556.55 1363.2 li
1546.04 1351.62 li
1490.15 1032.81 li
1490.81 1022.46 li
1500.74 1011.97 li
1489.55 1007.4 li
1379.05 827.242 li
cp
.717647 .733333 .764706 rgb
ef
1270.38 809.525 mo
1270.93 795.506 li
1260.83 789.937 li
548.288 667.769 li
541.587 672.188 li
537.748 682.403 li
576.774 890.229 li
586.384 898.908 li
573.428 898.89 li
563.38 907.905 li
508.062 1226.26 li
509.563 1240.65 li
523.14 1248.08 li
611.044 1264.61 li
891.467 1312 li
1092.88 1345.48 li
1103.39 1333.91 li
1159.29 1015.09 li
1158.62 1004.74 li
1148.69 994.252 li
1159.88 989.688 li
1270.38 809.525 li
cp
ef
634.298 1020.93 mo
634.298 1020.93 649.823 981.406 662.833 972.838 cv
667.221 969.953 674.538 969.588 676.561 976.755 cv
679.478 987.095 670.037 1004.49 665.801 1015.26 cv
661.564 1026.03 675.314 1055.95 686.11 1056.29 cv
690.552 1056.43 695.528 1046.76 698.226 1030.34 cv
700.229 1018.16 699.381 999.995 704.576 991.226 cv
712.802 977.339 727.456 966.461 737.667 959.613 cv
751.354 950.438 760.109 948.109 763.87 951.784 cv
769.253 957.048 762.889 965.927 754.051 975.577 cv
746.674 983.625 737.485 991.787 732.76 1002.81 cv
728.523 1012.69 730.51 1044.72 735.508 1045.15 cv
741.671 1045.67 750.655 997.558 761.1 980.438 cv
771.636 963.174 784.111 952.98 793.657 946.868 cv
802.171 941.412 808.155 938.934 811.406 941.842 cv
812.104 942.467 816.428 948.292 813.825 954.382 cv
808.512 966.844 792.42 986.656 784.5 1008.98 cv
778.013 1027.25 772.731 1055.96 774.261 1056.69 cv
776.867 1057.93 781.025 1054.99 786.188 1046.43 cv
795.985 1030.19 809.288 999.835 821.741 982.47 cv
838.185 959.545 848.351 968.214 848.565 973.358 cv
849.327 991.705 840.33 996.015 833.063 1016.77 cv
821.243 1050.51 808.476 1097.93 808.476 1097.93 cv
808.476 1097.93 822.854 1082.95 834.213 1077.63 cv
843.799 1073.14 850.733 1077.41 850.071 1084.33 cv
849.236 1093.06 842.073 1101.2 834.063 1114.39 cv
828.762 1123.12 822.038 1137.62 820.294 1143.21 cv
804.229 1194.72 764.249 1213.97 733.961 1243.13 cv
711.615 1264.65 694.962 1303.41 694.962 1303.41 cv
607.985 1251.89 li
607.985 1251.89 625.008 1227.34 636.744 1196.48 cv
643.076 1179.82 645.843 1163.54 648.147 1143.3 cv
650.349 1124 650.38 1102.3 648.313 1084.13 cv
646.039 1064.1 641.008 1051.85 637.845 1040.47 cv
635.293 1031.29 634.298 1020.93 634.298 1020.93 cv
cp
1 .882353 .780392 rgb
ef
928.334 1132.77 mo
928.334 1132.77 928.635 1117.58 922.157 1096.91 cv
915.36 1075.25 902.039 1047.9 914.159 1039.71 cv
917.762 1037.29 922.573 1033.94 929.699 1043.79 cv
938.678 1056.22 950.565 1084.48 959.718 1104.21 cv
966.014 1117.77 966.379 1150.69 972.843 1153.08 cv
982.401 1156.61 972.614 1092.72 964.698 1074.96 cv
956.756 1057.14 946.964 1035.53 950.108 1027.42 cv
957.778 1007.64 984.47 1050.16 984.47 1050.16 cv
984.47 1050.16 1010.12 1058.43 1026.29 1092.45 cv
1036.64 1114.24 1036.57 1165.64 1044.83 1169.7 cv
1048.79 1171.65 1049.44 1156.54 1047.47 1139.62 cv
1045.52 1122.88 1040.98 1104.4 1042.2 1095.04 cv
1043.72 1083.39 1053.96 1086.4 1057.34 1091.66 cv
1061.02 1097.39 1065.06 1106.88 1066.71 1113.75 cv
1069.11 1123.75 1071.44 1137.5 1071.77 1149.05 cv
1073.23 1200.39 1056.2 1260.76 1050.65 1304.13 cv
1047.88 1325.78 1058.11 1356.5 1058.11 1356.5 cv
965.79 1380.93 li
965.79 1380.93 953.532 1338.21 937.783 1299.61 cv
926.641 1272.31 911.512 1252.66 907.632 1226.95 cv
905.029 1209.7 904.495 1184.56 901.163 1159.47 cv
898.516 1139.51 892.247 1118.15 895.055 1111.15 cv
897.611 1104.78 903.884 1102.01 910.02 1107 cv
919.108 1114.39 928.334 1132.77 928.334 1132.77 cv
cp
ef
1601.01 1194.92 mo
1601.01 1194.92 1599.75 1157.28 1602.83 1136.67 cv
1606.24 1113.84 1614.25 1108.05 1619.17 1113.86 cv
1626.95 1123.03 1622.81 1150.98 1626.36 1173.54 cv
1628.81 1189.11 1639.18 1204.87 1642.35 1198.83 cv
1645.92 1192.02 1634.74 1159.33 1634.15 1140.36 cv
1633.56 1121.06 1636.21 1105.28 1638.6 1091.81 cv
1641.07 1077.9 1643.35 1066.59 1647.83 1066.18 cv
1649.92 1065.99 1657.33 1066.46 1659.26 1075.18 cv
1662.5 1089.83 1661.31 1111.22 1663.01 1131.96 cv
1664.83 1154.13 1669.53 1175.09 1672.82 1171.42 cv
1678.91 1164.63 1674.1 1137.42 1676.6 1113.72 cv
1680.71 1074.71 1690.7 1034.77 1699.06 1034.13 cv
1700.83 1034 1708.27 1036.38 1709.08 1048.94 cv
1710.47 1070.88 1704.65 1111.94 1706.48 1139.23 cv
1707.78 1158.64 1710.93 1177.68 1713.44 1178.66 cv
1720.68 1181.45 1723.12 1098.23 1730.91 1063.47 cv
1734.16 1048.96 1745.83 1057.4 1747.21 1060.89 cv
1760.4 1094.12 1753.27 1147.82 1753.27 1147.82 cv
1753.27 1147.82 1763.72 1138.43 1767.58 1144.88 cv
1773.18 1154.24 1772.97 1181.94 1774.12 1194.8 cv
1775.93 1215.05 1781.03 1243.37 1776.8 1272.75 cv
1772.52 1302.51 1760.43 1324.17 1752.05 1349.13 cv
1743.29 1375.22 1738.33 1403.97 1738.33 1403.97 cv
1641.28 1393.95 li
1643.93 1338.72 li
1601.01 1194.92 li
cp
ef
1933.61 1088.56 mo
1933.61 1088.56 1923.41 1063.68 1911.32 1042.76 cv
1898.88 1021.26 1884.66 1003.56 1893.59 992.545 cv
1895.64 990.021 1899.73 987.67 1906.02 992.299 cv
1915.98 999.635 1930.42 1018.63 1943.09 1037.67 cv
1955.34 1056.09 1964.7 1090.13 1973.8 1091.82 cv
1979.13 1092.8 1970.28 1058.47 1957.28 1029.07 cv
1945.82 1003.13 1930.54 982.858 1927.29 967.967 cv
1924.45 954.998 1929.4 948.548 1936.59 951.789 cv
1945.53 955.824 1957.54 971.711 1957.54 971.711 cv
1957.54 971.711 1962.92 969.98 1974.55 977.462 cv
1986.19 984.949 2004.09 1001.65 2004.09 1001.65 cv
2004.09 1001.65 2016.62 1001.21 2031.69 1014.54 cv
2039.77 1021.69 2046.15 1029.62 2057.21 1050.89 cv
2068.21 1072.05 2075.86 1097 2080.34 1121.13 cv
2085.19 1147.26 2086.66 1172.55 2093.86 1194.35 cv
2099.13 1210.34 2130.69 1245.16 2130.69 1245.16 cv
2065.43 1311.9 li
2065.43 1311.9 2048.53 1290.58 2031.73 1274.96 cv
2015.41 1259.79 1999.43 1250.55 1982.73 1234.54 cv
1971.9 1224.17 1958.51 1205.89 1950.32 1193.44 cv
1940.31 1178.23 1933.55 1146.95 1928.18 1133.55 cv
1920.65 1114.73 1905.15 1094.02 1907.19 1083.17 cv
1909.65 1070.1 1933.61 1088.56 1933.61 1088.56 cv
cp
ef
858.402 546.842 mo
918.487 576.747 li
909.124 611.563 li
900.492 626.487 li
890.284 645.619 li
825.735 623.602 li
841.553 592.231 li
858.402 546.842 li
cp
ef
943.882 591.866 mo
976.627 580.608 li
1009.62 591.223 li
1010.65 644.304 li
947.416 642.195 li
941.239 609.935 li
943.882 591.866 li
cp
ef
1522.98 315.304 mo
1539.35 290.973 1568.07 295.04 1568.07 295.04 cv
1568.07 295.04 1579.12 246.161 1600.75 230.393 cv
1612.31 221.966 1627.47 221.282 1638.55 224.067 cv
1648.2 226.494 1656.47 236.355 1656.47 236.355 cv
1656.47 236.355 1629.67 225.164 1611.56 242.626 cv
1597.25 256.421 1588.96 284.055 1584.32 309.688 cv
1579.58 335.861 1596.33 374.941 1604.56 402.267 cv
1613.38 431.527 1615.37 448.763 1615.37 448.763 cv
1622.87 520.04 li
1629.56 539.967 li
1629.56 539.967 1609.94 533.224 1605.82 522.03 cv
1597.88 500.483 1596.68 454.207 1596.68 454.207 cv
1606.33 443.084 li
1605.31 433.653 li
1592 409.964 li
1592 409.964 1582.47 382.037 1576.66 357.693 cv
1570.86 333.351 1568.79 312.593 1568.79 312.593 cv
1568.79 312.593 1547.66 308.312 1533.53 325.722 cv
1517.21 345.848 1502.57 392.367 1502.57 392.367 cv
1502.57 392.367 1500.07 380.479 1503.36 363.553 cv
1506.45 347.665 1515.05 327.086 1522.98 315.304 cv
cp
.803922 .52549 .313726 rgb
ef
900.396 399.87 mo
900.396 399.87 930.84 371.918 969.368 368.8 cv
985.474 367.496 998.754 387.678 998.754 387.678 cv
998.754 387.678 1005.18 383.622 1011.13 386.133 cv
1015.99 388.178 1022.82 394.634 1027.79 400.91 cv
1035.66 410.856 1040.76 424 1040.33 446.131 cv
1039.89 468.89 1030.74 482.036 1024.91 506.938 cv
1017.11 540.272 1012.17 582.695 1012.17 582.695 cv
1012.17 582.695 1007.53 591.897 1001.09 599.11 cv
993.796 607.282 984.109 613.613 974.828 614.139 cv
957.345 615.134 942.243 586.671 942.243 586.671 cv
941.144 537.771 li
925.298 570.767 li
925.298 570.767 898.739 597.755 878.908 588.533 cv
868.943 583.904 865.775 565.22 862.311 553.406 cv
859.827 544.951 855.7 541.747 855.7 541.747 cv
855.7 541.747 869.619 490.23 880.794 454.763 cv
891.969 419.293 900.396 399.87 900.396 399.87 cv
cp
.996078 .819608 .576471 rgb
ef
813.697 631.499 mo
813.697 631.499 845.031 609.286 864.606 615.472 cv
884.186 621.662 892.001 656.246 892.001 656.246 cv
875.302 724.594 li
775.498 707.05 li
813.697 631.499 li
cp
.843137 .85098 .898039 rgb
ef
939.034 653.411 mo
939.034 653.411 958.12 623.474 978.909 625.624 cv
999.698 627.778 1022.18 662.017 1022.18 662.017 cv
1030.85 750.792 li
923.44 731.382 li
939.034 653.411 li
cp
ef
541.578 1337.94 mo
597.787 1253.34 li
597.787 1253.34 625.885 1253.89 650.545 1268.31 cv
683.371 1287.52 696.852 1310.34 696.852 1310.34 cv
685.439 1337.22 li
685.439 1337.22 747.564 1330.47 816.066 1342.97 cv
884.569 1355.48 959.453 1387.22 959.453 1387.22 cv
959.453 1387.22 983.36 1370.43 1010.26 1362.12 cv
1042.82 1352.05 1068.9 1360.75 1068.9 1360.75 cv
1145.75 1593.25 li
1145.75 1593.25 958.641 1605.1 761.784 1590.72 cv
571.291 1576.81 431.181 1506.75 431.181 1506.75 cv
450.467 1477.37 li
450.467 1477.37 456.577 1427.1 464.74 1392.05 cv
472.906 1357.01 483.128 1337.17 483.128 1337.17 cv
541.578 1337.94 li
cp
1 .494118 .286275 rgb
ef
1609.63 1512.1 mo
1609.63 1512.1 1586.44 1466.3 1589.63 1447.41 cv
1590.92 1439.8 1597.32 1439.02 1604.09 1436.01 cv
1614.11 1431.56 1625.35 1427.02 1625.35 1427.02 cv
1625.35 1427.02 1619.25 1409.14 1628.08 1401.57 cv
1636.11 1394.7 1678.85 1387.36 1686.45 1388.16 cv
1692.23 1388.76 1705.52 1389.6 1717.32 1393.34 cv
1728.46 1396.88 1738.29 1403.34 1738.29 1403.34 cv
1741.21 1387.81 li
1741.21 1387.81 1830.29 1364.53 1915.45 1355.34 cv
2000.61 1346.15 2081.85 1351.03 2081.85 1351.03 cv
2081.85 1351.03 2078.22 1344.93 2077.73 1344.59 cv
2067.2 1337.27 2059.66 1332.92 2061.23 1324.94 cv
2064.28 1309.47 2076.26 1286.72 2089.71 1272.68 cv
2106.32 1255.33 2125.08 1248.05 2130.85 1245.69 cv
2145.11 1239.86 2152.77 1248.55 2158.24 1259.39 cv
2161.05 1264.94 2173.6 1272.23 2179.03 1278.56 cv
2184.19 1284.55 2182.3 1289.74 2182.3 1289.74 cv
2320.79 1439.88 li
2320.79 1439.88 2196.25 1522.54 1996.03 1567.73 cv
1784.64 1615.44 1593.39 1591.98 1593.39 1591.98 cv
1609.63 1512.1 li
cp
.92549 .862745 .796078 rgb
ef
1738.96 1405.89 mo
1738.84 1405.89 1738.72 1405.88 1738.6 1405.87 cv
1736.72 1405.67 1735.36 1403.99 1735.55 1402.11 cv
1739.17 1367.52 1751.5 1335.63 1760.51 1312.33 cv
1763.9 1303.57 1766.82 1296 1768.27 1290.7 cv
1775.48 1264.47 1777.03 1240.22 1773.03 1216.55 cv
1770.14 1199.54 1769.08 1181.9 1768.31 1169.02 cv
1767.8 1160.53 1767.27 1151.74 1766.45 1149.86 cv
1765.28 1147.19 1763.93 1145.59 1762.74 1145.45 cv
1761.47 1145.37 1758.99 1146.58 1755.96 1150.65 cv
1754.84 1152.16 1752.69 1152.48 1751.17 1151.35 cv
1749.66 1150.22 1749.34 1148.07 1750.47 1146.56 cv
1754.7 1140.89 1759.25 1138.2 1763.52 1138.65 cv
1767.36 1139.09 1770.46 1141.94 1772.72 1147.12 cv
1773.97 1149.98 1774.39 1156.12 1775.14 1168.61 cv
1775.91 1181.34 1776.95 1198.76 1779.77 1215.41 cv
1783.96 1240.08 1782.35 1265.3 1774.88 1292.51 cv
1773.33 1298.15 1770.35 1305.86 1766.89 1314.8 cv
1758.03 1337.73 1745.88 1369.14 1742.36 1402.82 cv
1742.18 1404.58 1740.69 1405.89 1738.96 1405.89 cv
cp
.356863 .152941 .0784314 rgb
f
1640.61 1397.33 mo
1640.42 1397.33 1640.23 1397.31 1640.03 1397.28 cv
1638.17 1396.96 1636.91 1395.19 1637.23 1393.33 cv
1637.31 1392.92 1644.17 1352.17 1638.55 1331.92 cv
1635.2 1319.84 1632.41 1310.98 1629.71 1302.41 cv
1626.47 1292.14 1623.41 1282.44 1619.61 1268.02 cv
1615.1 1250.88 1611.04 1239.16 1607.78 1229.75 cv
1603.25 1216.7 1599.98 1207.26 1598.41 1192.57 cv
1598.32 1191.77 1593.84 1112.42 1613.34 1109.79 cv
1615.98 1109.43 1618.44 1110.12 1620.44 1111.75 cv
1624.2 1114.79 1626.4 1121.15 1627.17 1131.21 cv
1627.56 1136.3 1627.63 1141.51 1627.7 1146.56 cv
1627.83 1155.62 1627.95 1165 1629.88 1174.61 cv
1632.43 1187.3 1637.52 1195.27 1639.82 1196.95 cv
1640.61 1193.94 1640.01 1184.53 1634.01 1158.26 cv
1630.74 1143.94 1629.5 1130.84 1633.42 1109.75 cv
1633.94 1106.93 1634.4 1102.69 1634.89 1098.21 cv
1637.12 1077.58 1639.36 1062.91 1647.92 1062.1 cv
1651.79 1061.76 1655.06 1062.72 1657.65 1065.01 cv
1662.31 1069.15 1664.54 1077.24 1664.88 1091.25 cv
1665.04 1098.22 1664.96 1103.77 1664.88 1108.66 cv
1664.71 1119.32 1664.58 1127.75 1667.16 1144.18 cv
1668.35 1151.83 1669.61 1157.93 1670.77 1162.59 cv
1670.81 1161.35 1670.84 1160.04 1670.89 1158.69 cv
1671.21 1147.96 1671.66 1133.26 1672.85 1118.77 cv
1674.83 1094.65 1676.17 1087.79 1679.1 1072.79 cv
1679.65 1069.97 li
1686.17 1036.59 1693.03 1031.69 1698.29 1031.15 cv
1702.01 1030.77 1705.17 1031.72 1707.59 1033.98 cv
1713.85 1039.83 1713.91 1053.68 1713.33 1071.17 cv
1713.02 1080.68 1712.08 1088.06 1711.16 1095.19 cv
1709.78 1106.04 1708.46 1116.29 1709.61 1132.86 cv
1709.66 1133.54 1709.7 1134.92 1709.76 1136.78 cv
1710.6 1163.23 1712.67 1171.8 1714.02 1174.55 cv
1715.31 1172.08 1717.55 1164.44 1718.88 1140.93 cv
1718.95 1139.83 1718.99 1139.02 1719.03 1138.56 cv
1719.49 1132.75 1719.84 1128.12 1720.14 1124.18 cv
1721.08 1111.78 1721.5 1106.12 1723.23 1092.57 cv
1723.61 1089.6 1723.94 1086.57 1724.26 1083.57 cv
1726.1 1066.44 1727.7 1051.65 1737.71 1051.14 cv
1741.09 1050.97 1744 1052.02 1746.39 1054.29 cv
1755.36 1062.74 1755.54 1086.93 1755.85 1126.99 cv
1755.91 1134.47 li
1756.29 1181.69 1756.56 1215.81 1761.35 1232.95 cv
1761.86 1234.77 1760.79 1236.66 1758.97 1237.17 cv
1757.15 1237.68 1755.26 1236.61 1754.75 1234.79 cv
1749.72 1216.77 1749.44 1182.27 1749.06 1134.52 cv
1749 1127.05 li
1748.74 1092.78 1748.53 1065.71 1741.69 1059.27 cv
1740.67 1058.31 1739.62 1057.93 1738.06 1057.98 cv
1733.88 1058.19 1732.19 1073.9 1731.07 1084.3 cv
1730.74 1087.34 1730.41 1090.42 1730.03 1093.43 cv
1728.32 1106.81 1727.92 1112.05 1726.97 1124.69 cv
1726.67 1128.64 1726.31 1133.28 1725.86 1139.1 cv
1725.82 1139.53 1725.78 1140.29 1725.72 1141.31 cv
1724.03 1171.07 1720.85 1182.24 1714.02 1182.24 cv
1713.94 1182.24 1713.87 1182.24 1713.8 1182.24 cv
1706.73 1182 1703.98 1170.58 1702.92 1137 cv
1702.86 1135.25 1702.83 1133.97 1702.78 1133.33 cv
1701.59 1116.09 1702.94 1105.52 1704.37 1094.32 cv
1705.26 1087.35 1706.18 1080.14 1706.49 1070.94 cv
1706.95 1056.89 1707.06 1042.85 1702.91 1038.99 cv
1702.32 1038.43 1701.26 1037.74 1698.98 1037.96 cv
1698.73 1037.99 1692.68 1038.97 1686.38 1071.28 cv
1685.82 1074.1 li
1682.85 1089.3 1681.62 1095.59 1679.67 1119.33 cv
1678.5 1133.64 1678.06 1148.24 1677.73 1158.9 cv
1677.46 1167.72 1677.29 1173.55 1676.84 1176.13 cv
1676.18 1180 1673.55 1180.26 1672.71 1180.28 cv
1670.83 1180.26 1665.86 1180.23 1660.39 1145.24 cv
1657.73 1128.22 1657.87 1119.54 1658.04 1108.55 cv
1658.11 1103.72 1658.2 1098.25 1658.03 1091.42 cv
1657.75 1079.95 1656.1 1072.79 1653.11 1070.14 cv
1652.39 1069.49 1651.11 1068.68 1648.56 1068.92 cv
1646.13 1069.15 1643.82 1079.25 1641.69 1098.94 cv
1641.17 1103.76 1640.72 1107.92 1640.15 1110.99 cv
1636.45 1130.93 1637.61 1143.27 1640.69 1156.74 cv
1647.96 1188.59 1648.67 1199.86 1643.61 1203.12 cv
1641.85 1204.26 1639.75 1204.42 1637.7 1203.54 cv
1630.96 1200.71 1625.44 1187.25 1623.17 1175.95 cv
1621.11 1165.73 1620.99 1156.03 1620.86 1146.65 cv
1620.78 1141.49 1620.72 1136.61 1620.34 1131.73 cv
1619.51 1120.9 1617.12 1117.87 1616.13 1117.07 cv
1615.58 1116.63 1615.03 1116.49 1614.25 1116.58 cv
1606.03 1117.69 1602.82 1169.5 1605.22 1191.84 cv
1606.71 1205.76 1609.87 1214.88 1614.25 1227.5 cv
1617.55 1237.03 1621.66 1248.88 1626.24 1266.27 cv
1629.99 1280.53 1633.03 1290.16 1636.24 1300.36 cv
1638.96 1308.98 1641.77 1317.89 1645.15 1330.09 cv
1651.18 1351.82 1644.28 1392.75 1643.98 1394.49 cv
1643.7 1396.16 1642.25 1397.33 1640.61 1397.33 cv
cp
f
2063.91 1313.52 mo
2062.84 1313.52 2061.8 1313.03 2061.12 1312.1 cv
2039.61 1282.31 2017.83 1266.58 2001.93 1255.1 cv
1996.68 1251.31 1992.15 1248.04 1988.54 1244.9 cv
1976.04 1234.03 1962.62 1217.05 1954.22 1204.77 cv
1942.17 1187.14 1939.75 1179.36 1934.45 1162.33 cv
1932.83 1157.11 1930.92 1150.97 1928.36 1143.34 cv
1924.68 1132.34 1919.12 1121.62 1914.22 1112.15 cv
1909.44 1102.9 1905.3 1094.91 1903.93 1088.66 cv
1902.65 1082.87 1904.64 1079.58 1906.52 1077.84 cv
1909.54 1075.07 1914.42 1074.38 1919.55 1075.97 cv
1931.65 1079.73 1937.75 1089.59 1938 1090.01 cv
1938.98 1091.62 1938.47 1093.73 1936.85 1094.71 cv
1935.23 1095.69 1933.13 1095.17 1932.15 1093.56 cv
1932.11 1093.49 1927.08 1085.48 1917.52 1082.51 cv
1914.91 1081.71 1912.29 1081.86 1911.16 1082.89 cv
1910.14 1083.83 1910.3 1085.75 1910.61 1087.19 cv
1911.79 1092.56 1915.74 1100.18 1920.3 1109.01 cv
1925.32 1118.69 1931 1129.67 1934.85 1141.17 cv
1937.43 1148.86 1939.35 1155.04 1940.99 1160.3 cv
1946.23 1177.15 1948.4 1184.12 1959.87 1200.91 cv
1967.65 1212.28 1981.01 1229.28 1993.03 1239.73 cv
1996.41 1242.67 2000.83 1245.86 2005.94 1249.55 cv
2022.21 1261.3 2044.51 1277.4 2066.68 1308.09 cv
2067.78 1309.63 2067.44 1311.76 2065.91 1312.88 cv
2065.3 1313.31 2064.6 1313.52 2063.91 1313.52 cv
cp
f
2129.75 1247.81 mo
2128.86 1247.81 2127.98 1247.47 2127.3 1246.79 cv
2125.84 1245.29 2091.25 1209.77 2087.79 1186.99 cv
2086.27 1176.93 li
2082.87 1154.41 2080.19 1136.62 2075.47 1113 cv
2072.26 1096.87 2070.46 1090.42 2063 1072.5 cv
2055.81 1055.22 2047.9 1037.45 2037.3 1026.51 cv
2019.51 1008.17 2007.96 1002.33 2004.46 1004.68 cv
2002.88 1005.73 2000.76 1005.3 1999.71 1003.72 cv
1998.67 1002.15 1999.1 1000.02 2000.67 998.974 cv
2008.51 993.767 2022.5 1001.42 2042.21 1021.75 cv
2053.66 1033.54 2061.88 1051.98 2069.32 1069.87 cv
2077.01 1088.34 2078.87 1095 2082.19 1111.66 cv
2086.93 1135.44 2089.63 1153.3 2093.04 1175.91 cv
2094.55 1185.96 li
2097.69 1206.57 2131.85 1241.65 2132.2 1242 cv
2133.52 1243.35 2133.5 1245.51 2132.14 1246.84 cv
2131.48 1247.49 2130.62 1247.81 2129.75 1247.81 cv
cp
f
2045.21 1084.09 mo
2043.84 1084.09 2042.54 1083.26 2042.01 1081.9 cv
2041.25 1079.93 2040.4 1077.59 2039.43 1074.93 cv
2035.91 1065.29 2031.09 1052.1 2023.64 1036.59 cv
2017.56 1023.91 2010.43 1014.44 1998.2 1002.79 cv
1995.18 999.896 li
1984.18 989.331 1967.46 973.389 1956.52 974.138 cv
1954.65 974.205 1952.99 972.85 1952.86 970.964 cv
1952.73 969.078 1954.15 967.442 1956.04 967.309 cv
1970.17 966.367 1987.34 982.871 1999.92 994.961 cv
2002.92 997.832 li
2015.63 1009.94 2023.43 1020.31 2029.81 1033.62 cv
2037.41 1049.44 2042.49 1063.37 2045.86 1072.58 cv
2046.81 1075.2 2047.66 1077.5 2048.41 1079.44 cv
2049.08 1081.21 2048.21 1083.19 2046.44 1083.87 cv
2046.03 1084.02 2045.62 1084.09 2045.21 1084.09 cv
cp
f
1953.77 1156.7 mo
1952.3 1156.7 1950.95 1155.76 1950.5 1154.29 cv
1947.37 1144.24 1945.02 1135.72 1942.74 1127.48 cv
1935.93 1102.82 1930.56 1083.35 1910.06 1046.73 cv
1908.28 1043.54 1906.44 1040.36 1904.63 1037.21 cv
1892.13 1015.53 1881.33 996.798 1892.51 987.548 cv
1894.68 985.765 1897.27 984.98 1900.03 985.31 cv
1906.57 986.081 1913.93 992.621 1925.44 1007.89 cv
1928.45 1011.89 1930.91 1014.99 1933.07 1017.71 cv
1939.74 1026.11 1943.77 1031.18 1952.43 1047.89 cv
1954.51 1051.91 1956.76 1056.68 1959.06 1061.56 cv
1963.05 1070.04 1969.4 1083.52 1973.15 1087.58 cv
1973.04 1083.63 1970.85 1073 1959.91 1044.44 cv
1959.34 1042.96 1958.93 1041.89 1958.74 1041.35 cv
1951.81 1021.95 1947.54 1014.3 1940.47 1001.62 cv
1938.02 997.222 1935.26 992.269 1931.97 986.072 cv
1924.14 971.312 1921.62 961.481 1924.04 955.138 cv
1925.22 952.075 1927.56 949.819 1930.83 948.611 cv
1939.04 945.615 1948.27 953.283 1962.72 975.186 cv
1966.26 980.544 1969.41 984.936 1972.45 989.184 cv
1979.94 999.625 1986.41 1008.64 1994.54 1026.43 cv
2005.69 1050.88 2015.81 1077.99 2015.91 1078.26 cv
2016.57 1080.03 2015.67 1082 2013.9 1082.66 cv
2012.14 1083.33 2010.15 1082.42 2009.49 1080.65 cv
2009.39 1080.38 1999.35 1053.5 1988.3 1029.28 cv
1980.46 1012.09 1974.18 1003.32 1966.89 993.179 cv
1963.81 988.876 1960.61 984.427 1957 978.957 cv
1941.89 956.07 1935.58 954.135 1933.2 955.04 cv
1931.76 955.565 1930.91 956.355 1930.44 957.581 cv
1929.33 960.501 1929.74 967.255 1938.02 982.862 cv
1941.28 989.01 1944.02 993.923 1946.45 998.282 cv
1953.45 1010.83 1958.07 1019.11 1965.19 1039.05 cv
1965.38 1039.56 1965.76 1040.58 1966.3 1041.98 cv
1982.08 1083.17 1982.1 1092.39 1976.62 1094.98 cv
1975.26 1095.63 1973.74 1095.69 1972.25 1095.15 cv
1966.58 1093.11 1961.19 1082.17 1952.86 1064.48 cv
1950.6 1059.68 1948.39 1054.99 1946.35 1051.04 cv
1937.99 1034.92 1934.34 1030.32 1927.71 1021.96 cv
1925.52 1019.2 1923.03 1016.07 1919.97 1012.01 cv
1916.4 1007.27 1905.53 992.853 1899.23 992.108 cv
1898.3 992.023 1897.61 992.22 1896.87 992.826 cv
1890.15 998.39 1900.53 1016.39 1910.56 1033.79 cv
1912.39 1036.96 1914.24 1040.17 1916.04 1043.38 cv
1936.94 1080.73 1942.41 1100.55 1949.34 1125.66 cv
1951.6 1133.85 1953.94 1142.31 1957.03 1152.26 cv
1957.6 1154.06 1956.59 1155.98 1954.78 1156.54 cv
1954.44 1156.65 1954.1 1156.7 1953.77 1156.7 cv
cp
f
2140.25 1247 mo
2138.55 1247 2137.07 1245.72 2136.86 1243.98 cv
2136.66 1242.34 2136.4 1241.25 2136.38 1241.15 cv
2083.52 933.329 li
2083.14 931.052 2081.42 924.623 2078.08 922.028 cv
2074.83 919.496 2068.8 919.75 2066.74 920.058 cv
2014.49 929.027 li
2012.67 929.375 2010.86 928.096 2010.54 926.228 cv
2010.23 924.364 2011.48 922.595 2013.34 922.278 cv
2065.64 913.3 li
2066.75 913.13 2076.12 911.833 2082.28 916.621 cv
2088.34 921.324 2090.09 931.096 2090.27 932.197 cv
2143.07 1239.71 li
2143.08 1239.73 2143.41 1241.12 2143.66 1243.17 cv
2143.88 1245.05 2142.54 1246.75 2140.66 1246.98 cv
2140.53 1246.99 2140.39 1247 2140.25 1247 cv
cp
f
1563.06 1365.83 mo
1558.75 1365.83 1553.63 1365.13 1549.72 1362.48 cv
1541.67 1357.01 1540.25 1343.98 1540.19 1343.43 cv
1487.2 1035.36 li
1486.98 1034.45 1484.9 1024.67 1489.38 1018.16 cv
1493.83 1011.71 1503.88 1009.77 1505.01 1009.58 cv
1554.21 1001.13 li
1556.01 1000.79 1557.84 1002.02 1558.19 1003.85 cv
1558.54 1005.68 1557.4 1007.45 1555.57 1007.84 cv
1506.18 1016.32 li
1503.91 1016.73 1497.42 1018.56 1495.02 1022.04 cv
1492.67 1025.47 1493.42 1031.85 1493.91 1034.01 cv
1546.97 1342.5 li
1547.31 1345.62 1549.09 1353.77 1553.57 1356.82 cv
1558.14 1359.92 1567.11 1358.92 1570.18 1358.28 cv
1640.43 1346.07 li
1642.26 1345.78 1644.07 1346.99 1644.39 1348.86 cv
1644.71 1350.72 1643.46 1352.49 1641.6 1352.82 cv
1571.48 1365 li
1570.84 1365.14 1567.36 1365.83 1563.06 1365.83 cv
cp
f
1759.57 1332.42 mo
1757.93 1332.42 1756.48 1331.23 1756.2 1329.56 cv
1755.88 1327.69 1757.14 1325.93 1759 1325.62 cv
2037.36 1278.7 li
2039.28 1278.36 2041 1279.65 2041.31 1281.51 cv
2041.63 1283.38 2040.37 1285.14 2038.5 1285.45 cv
1760.15 1332.37 li
1759.95 1332.4 1759.76 1332.42 1759.57 1332.42 cv
cp
f
1556.32 1238.87 mo
1554.52 1238.87 1552.26 1238.54 1550.46 1237.21 cv
1547.21 1234.79 1546.67 1229.99 1546.6 1229.05 cv
1517.3 1058.51 li
1517.13 1057.77 1516.18 1052.98 1518.26 1049.64 cv
1520.47 1046.11 1525.13 1045.39 1526.04 1045.28 cv
1931.38 975.672 li
1933.24 975.337 1935.14 976.576 1935.46 978.444 cv
1935.78 980.308 1934.66 982.056 1932.8 982.376 cv
1527.03 1052.05 li
1525.86 1052.21 1524.38 1052.77 1524.07 1053.26 cv
1523.69 1053.87 1523.73 1055.9 1524.02 1057.16 cv
1553.39 1228.2 li
1553.54 1229.78 1554.1 1231.38 1554.55 1231.71 cv
1554.99 1232.04 1556.7 1232.11 1557.98 1231.86 cv
1608.5 1223.2 li
1610.37 1222.9 1612.14 1224.13 1612.45 1226 cv
1612.77 1227.86 1611.52 1229.63 1609.66 1229.95 cv
1559.26 1238.58 li
1558.91 1238.66 1557.77 1238.87 1556.32 1238.87 cv
cp
f
2088.29 1147.68 mo
2086.59 1147.68 2085.11 1146.41 2084.9 1144.68 cv
2084.67 1142.81 2086 1141.09 2087.87 1140.86 cv
2089.21 1140.68 2091.02 1140.01 2091.49 1139.32 cv
2091.98 1138.6 2091.97 1136.52 2091.67 1135.09 cv
2062.65 966.113 li
2062.43 964.255 2061.67 961.994 2060.87 961.396 cv
2060.05 960.782 2057.75 960.845 2056.48 961.13 cv
1967.59 976.398 li
1965.75 976.737 1963.89 975.493 1963.56 973.647 cv
1963.23 971.798 1964.36 970.041 1966.21 969.689 cv
1966.37 969.657 li
2055.15 954.416 li
2055.99 954.211 2061.33 953.167 2064.99 955.923 cv
2068.57 958.615 2069.31 964.103 2069.43 965.173 cv
2098.38 1133.77 li
2098.57 1134.58 2099.55 1139.64 2097.16 1143.17 cv
2094.72 1146.75 2089.7 1147.54 2088.72 1147.66 cv
2088.58 1147.67 2088.43 1147.68 2088.29 1147.68 cv
cp
f
1776.2 1201.22 mo
1774.56 1201.22 1773.09 1200.07 1772.79 1198.41 cv
1772.46 1196.57 1773.63 1194.8 1775.47 1194.46 cv
1937.94 1166.57 li
1939.82 1166.29 1941.57 1167.5 1941.89 1169.37 cv
1942.21 1171.23 1940.96 1173 1939.09 1173.32 cv
1776.77 1201.17 li
1776.58 1201.21 1776.39 1201.22 1776.2 1201.22 cv
cp
f
1557.48 1021.28 mo
1555.84 1021.28 1554.4 1020.1 1554.11 1018.43 cv
1550.42 996.949 li
1550.27 996.054 1550.47 995.136 1551 994.396 cv
1551.52 993.65 1552.32 993.151 1553.21 992.995 cv
2010.9 914.4 li
2011.79 914.251 2012.71 914.456 2013.45 914.98 cv
2014.19 915.504 2014.69 916.302 2014.85 917.195 cv
2018.54 938.684 li
2018.86 940.547 2017.61 942.317 2015.74 942.638 cv
1940.69 955.525 li
1938.84 955.864 1936.92 954.625 1936.59 952.767 cv
1936.26 950.907 1937.37 949.16 1939.23 948.83 cv
2011.21 936.468 li
2008.68 921.729 li
1557.75 999.165 li
1560.28 1013.9 li
1926.11 951.081 li
1928 950.801 1929.75 952.013 1930.07 953.876 cv
1930.39 955.74 1929.14 957.51 1927.27 957.831 cv
1558.06 1021.23 li
1557.87 1021.26 1557.67 1021.28 1557.48 1021.28 cv
cp
f
1397.45 829.497 mo
1399.53 824.941 1408.85 823.699 1408.85 823.699 cv
2086.83 706.821 li
2086.83 706.821 2094.08 705.114 2096.5 708.939 cv
2098.92 712.77 2097.56 718.038 2097.56 718.038 cv
2066.11 891.718 li
2066.11 891.718 2064.79 899.556 2060.3 902.897 cv
2055.81 906.244 2049.13 906.883 2049.13 906.883 cv
1513.89 998.676 li
1513.89 998.676 1506.18 1000.27 1501.35 998.461 cv
1496.53 996.649 1494.43 992.673 1494.43 992.673 cv
1399.56 839.736 li
1399.56 839.736 1395.54 833.688 1397.45 829.497 cv
cp
1 1 1 rgb
ef
1397.45 829.498 mo
1397.5 829.498 li
1397.45 829.498 li
cp
2090.36 709.863 mo
2089.41 709.863 2088.41 709.972 2087.6 710.157 cv
1409.43 827.075 li
1406.18 827.521 1401.4 829.088 1400.57 830.918 cv
1400.57 830.92 li
1399.81 832.571 1401.22 836.031 1402.42 837.848 cv
1497.35 990.869 li
1497.47 991.078 1499.08 993.954 1502.55 995.256 cv
1505.73 996.455 1511.32 995.706 1513.2 995.322 cv
2048.55 903.508 li
2048.85 903.47 2054.61 902.868 2058.26 900.15 cv
2061.01 898.104 2062.43 892.953 2062.74 891.144 cv
2094.19 717.428 li
2094.51 716.113 2094.92 712.846 2093.61 710.772 cv
2093.2 710.121 2091.83 709.863 2090.36 709.863 cv
cp
1507.29 1002.75 mo
1504.93 1002.75 1502.36 1002.5 1500.15 1001.67 cv
1494.27 999.464 1491.68 994.792 1491.4 994.266 cv
1396.65 841.541 li
1396.19 840.851 1391.71 833.833 1394.33 828.076 cv
1397.06 822.1 1406.52 820.555 1408.4 820.306 cv
2086.25 703.448 li
2087.02 703.254 2095.76 701.386 2099.39 707.107 cv
2102.52 712.05 2101.05 718.211 2100.87 718.897 cv
2069.48 892.329 li
2069.33 893.228 2067.78 901.597 2062.35 905.644 cv
2057.14 909.517 2049.77 910.262 2049.45 910.29 cv
1514.47 1002.05 li
1514 1002.15 1510.91 1002.75 1507.29 1002.75 cv
cp
.356863 .152941 .0784314 rgb
f
1380.14 831.556 mo
1378.7 831.556 1377.36 830.646 1376.89 829.21 cv
1376.55 828.192 1373.65 819.08 1376.02 813.425 cv
1378.82 806.767 1389.37 805.204 1390.56 805.048 cv
2097.11 683.211 li
2100.62 682.502 2107.59 682.747 2110.83 688.422 cv
2114.22 694.396 2113.97 699.112 2113.8 702.23 cv
2113.7 704.119 2112.05 705.51 2110.2 705.468 cv
2108.31 705.364 2106.86 703.753 2106.97 701.865 cv
2107.11 699.133 2107.28 696.036 2104.88 691.811 cv
2103.31 689.073 2098.42 689.936 2098.36 689.942 cv
1391.59 811.817 li
1388.32 812.259 1383.25 813.899 1382.33 816.079 cv
1381.34 818.442 1382.35 823.919 1383.39 827.055 cv
1383.98 828.85 1383.01 830.786 1381.21 831.379 cv
1380.85 831.497 1380.49 831.556 1380.14 831.556 cv
cp
f
1735.67 1474.34 mo
1734.95 1474.34 1734.23 1474.11 1733.61 1473.65 cv
1732.11 1472.51 1731.81 1470.36 1732.94 1468.85 cv
1739.27 1460.48 1738.46 1455.25 1737.43 1448.63 cv
1737.04 1446.11 1736.63 1443.5 1736.58 1440.55 cv
1736.5 1435.96 1738.09 1431.3 1739.62 1426.8 cv
1742.12 1419.47 1743.44 1414.79 1740.63 1411.48 cv
1734.83 1404.63 1717.71 1392.73 1690.36 1391.58 cv
1661.36 1390.39 1636.35 1399.05 1631.59 1403.85 cv
1626.41 1409.07 1626.95 1412.55 1627.93 1418.88 cv
1628.31 1421.4 1628.76 1424.26 1628.83 1427.55 cv
1628.95 1432.94 1626.59 1437.81 1624.31 1442.52 cv
1621.43 1448.44 1618.95 1453.56 1621.8 1458.61 cv
1622.73 1460.25 1622.15 1462.34 1620.5 1463.28 cv
1618.86 1464.19 1616.77 1463.62 1615.84 1461.98 cv
1611.22 1453.8 1614.9 1446.22 1618.15 1439.53 cv
1620.17 1435.37 1622.07 1431.44 1621.98 1427.71 cv
1621.92 1424.87 1621.53 1422.35 1621.16 1419.93 cv
1620.11 1413.12 1619.11 1406.69 1626.73 1399.02 cv
1634.37 1391.32 1662.46 1383.55 1690.64 1384.74 cv
1718.43 1385.9 1737.75 1397.49 1745.86 1407.05 cv
1751.38 1413.56 1748.57 1421.77 1746.1 1429.02 cv
1744.76 1432.96 1743.37 1437.04 1743.42 1440.43 cv
1743.46 1442.91 1743.82 1445.18 1744.2 1447.58 cv
1745.32 1454.81 1746.49 1462.29 1738.41 1472.98 cv
1737.74 1473.87 1736.71 1474.34 1735.67 1474.34 cv
cp
f
1593.41 1594.92 mo
1593.18 1594.92 1592.94 1594.89 1592.7 1594.84 cv
1590.85 1594.46 1589.67 1592.64 1590.05 1590.79 cv
1618.95 1452.34 li
1619.34 1450.49 1621.14 1449.3 1623 1449.69 cv
1624.85 1450.08 1626.04 1451.89 1625.66 1453.74 cv
1596.76 1592.19 li
1596.42 1593.81 1595 1594.92 1593.41 1594.92 cv
cp
f
1729.34 1601.71 mo
1729.27 1601.71 1729.21 1601.71 1729.15 1601.71 cv
1727.26 1601.61 1725.82 1600 1725.91 1598.11 cv
1725.97 1597 1731.78 1487.21 1730.92 1463.67 cv
1730.84 1461.78 1732.32 1460.19 1734.21 1460.12 cv
1735.89 1459.96 1737.69 1461.52 1737.75 1463.42 cv
1738.63 1487.26 1732.99 1593.94 1732.75 1598.47 cv
1732.65 1600.3 1731.14 1601.71 1729.34 1601.71 cv
cp
f
1737.99 1468.76 mo
1737.21 1468.76 1736.43 1468.5 1735.79 1467.96 cv
1692.24 1431.33 1627.07 1452.48 1621.64 1457.43 cv
1620.25 1458.7 1618.09 1458.62 1616.8 1457.2 cv
1615.53 1455.81 1615.63 1453.64 1617.03 1452.37 cv
1625.7 1444.48 1694.59 1424.36 1740.19 1462.72 cv
1741.64 1463.93 1741.83 1466.1 1740.61 1467.54 cv
1739.93 1468.35 1738.96 1468.76 1737.99 1468.76 cv
cp
f
2098.46 1374.81 mo
2098.22 1374.81 2097.97 1374.79 2097.73 1374.73 cv
2088.55 1372.74 2085.34 1364.95 2082.51 1358.08 cv
2080.75 1353.81 2079.08 1349.77 2076.24 1347.34 cv
2074.07 1345.5 2071.94 1344.12 2069.88 1342.78 cv
2064.1 1339.04 2058.64 1335.51 2057.98 1324.72 cv
2057.32 1313.89 2070.24 1287.73 2089.83 1267.51 cv
2109.19 1247.53 2130.65 1240.92 2143.23 1241.12 cv
2151.76 1241.33 2156.03 1248.88 2159.79 1255.54 cv
2161.84 1259.18 2163.96 1262.93 2166.53 1265.15 cv
2168.41 1266.77 2170.34 1268.01 2172.39 1269.33 cv
2178.54 1273.3 2184.89 1277.41 2187.5 1290.54 cv
2187.87 1292.4 2186.66 1294.2 2184.8 1294.57 cv
2182.97 1294.92 2181.15 1293.73 2180.78 1291.87 cv
2178.74 1281.58 2174.3 1278.72 2168.67 1275.08 cv
2166.52 1273.7 2164.3 1272.26 2162.07 1270.34 cv
2158.58 1267.34 2156.16 1263.06 2153.83 1258.92 cv
2150.02 1252.17 2147.4 1248.07 2143.06 1247.97 cv
2134.23 1247.76 2113.81 1252.61 2094.75 1272.27 cv
2074.59 1293.08 2064.4 1317.55 2064.82 1324.3 cv
2065.26 1331.64 2068.22 1333.56 2073.6 1337.03 cv
2075.74 1338.42 2078.17 1339.99 2080.68 1342.13 cv
2084.79 1345.63 2086.85 1350.63 2088.84 1355.47 cv
2091.35 1361.56 2093.52 1366.81 2099.18 1368.05 cv
2101.03 1368.45 2102.21 1370.27 2101.8 1372.12 cv
2101.45 1373.72 2100.03 1374.81 2098.46 1374.81 cv
cp
f
2190.47 1511.82 mo
2189.35 1511.82 2188.26 1511.28 2187.61 1510.28 cv
2092.5 1365.84 li
2091.46 1364.26 2091.9 1362.14 2093.48 1361.1 cv
2095.06 1360.06 2097.19 1360.49 2098.22 1362.08 cv
2193.32 1506.51 li
2194.37 1508.09 2193.93 1510.21 2192.35 1511.25 cv
2191.77 1511.64 2191.12 1511.82 2190.47 1511.82 cv
cp
f
2321.95 1444.37 mo
2321.06 1444.37 2320.17 1444.03 2319.49 1443.33 cv
2301.1 1424.35 2275.74 1396.64 2251.2 1369.83 cv
2217.69 1333.2 2186.03 1298.61 2175.56 1289.95 cv
2174.1 1288.74 2173.9 1286.58 2175.1 1285.12 cv
2176.31 1283.67 2178.47 1283.47 2179.93 1284.67 cv
2190.76 1293.64 2222.58 1328.4 2256.26 1365.21 cv
2280.76 1391.98 2306.09 1419.66 2324.41 1438.57 cv
2325.73 1439.92 2325.69 1442.09 2324.33 1443.41 cv
2323.67 1444.05 2322.81 1444.37 2321.95 1444.37 cv
cp
f
2094.78 1370.83 mo
2092.91 1370.83 2091.38 1369.33 2091.35 1367.45 cv
2091.22 1355.73 2122.05 1290.91 2181.02 1282.38 cv
2182.87 1282.15 2184.63 1283.41 2184.9 1285.28 cv
2185.17 1287.15 2183.88 1288.89 2182 1289.16 cv
2125.69 1297.3 2098.12 1360.02 2098.2 1367.38 cv
2098.22 1369.26 2096.71 1370.81 2094.81 1370.83 cv
2094.8 1370.83 2094.79 1370.83 2094.78 1370.83 cv
cp
f
1765.86 1315.63 mo
1764.22 1315.63 1762.77 1314.44 1762.49 1312.76 cv
1762.18 1310.9 1763.44 1309.13 1765.3 1308.82 cv
1911.96 1284.57 li
1896.57 1191.44 li
1777.29 1211.17 li
1775.41 1211.49 1773.66 1210.22 1773.35 1208.35 cv
1773.04 1206.48 1774.3 1204.72 1776.16 1204.41 cv
1898.83 1184.12 li
1899.7 1183.97 1900.64 1184.19 1901.38 1184.72 cv
1902.12 1185.25 1902.61 1186.05 1902.76 1186.95 cv
1919.28 1286.83 li
1919.43 1287.73 1919.21 1288.65 1918.68 1289.38 cv
1918.16 1290.12 1917.35 1290.62 1916.46 1290.77 cv
1766.43 1315.58 li
1766.24 1315.61 1766.05 1315.63 1765.86 1315.63 cv
cp
f
1764.14 1315.91 mo
1762.5 1315.91 1761.05 1314.73 1760.77 1313.06 cv
1760.45 1311.19 1761.71 1309.42 1763.57 1309.11 cv
1765.45 1308.78 1767.37 1310.03 1767.68 1311.89 cv
1767.99 1313.75 1766.9 1315.5 1765.03 1315.81 cv
1764.72 1315.86 li
1764.52 1315.9 1764.33 1315.91 1764.14 1315.91 cv
cp
f
2088.29 1147.68 mo
2086.59 1147.68 2085.11 1146.41 2084.9 1144.68 cv
2084.67 1142.81 2086 1141.09 2087.87 1140.86 cv
2089.21 1140.68 2091.02 1140.01 2091.49 1139.32 cv
2091.98 1138.6 2091.97 1136.52 2091.67 1135.09 cv
2062.65 966.113 li
2062.43 964.255 2061.67 961.994 2060.87 961.396 cv
2060.05 960.782 2057.75 960.845 2056.48 961.13 cv
1967.59 976.398 li
1965.75 976.737 1963.89 975.493 1963.56 973.647 cv
1963.23 971.798 1964.36 970.041 1966.21 969.689 cv
1966.37 969.657 li
2055.15 954.416 li
2055.99 954.211 2061.33 953.167 2064.99 955.923 cv
2068.57 958.615 2069.31 964.103 2069.43 965.173 cv
2098.38 1133.77 li
2098.57 1134.58 2099.55 1139.64 2097.16 1143.17 cv
2094.72 1146.75 2089.7 1147.54 2088.72 1147.66 cv
2088.58 1147.67 2088.43 1147.68 2088.29 1147.68 cv
cp
f
945.416 1324.55 mo
945.227 1324.55 945.035 1324.54 944.841 1324.5 cv
707.502 1284.2 li
705.636 1283.89 704.374 1282.13 704.68 1280.26 cv
704.984 1278.4 706.741 1277.13 708.616 1277.44 cv
721.894 1279.69 li
945.982 1317.75 li
947.846 1318.06 949.104 1319.83 948.789 1321.7 cv
948.506 1323.37 947.057 1324.55 945.416 1324.55 cv
cp
f
1093.02 1221.19 mo
1091.54 1221.19 1090.35 1220.97 1089.94 1220.88 cv
1066.49 1216.87 li
1064.62 1216.55 1063.37 1214.79 1063.69 1212.92 cv
1064.01 1211.05 1065.77 1209.79 1067.64 1210.12 cv
1091.23 1214.16 li
1092.63 1214.45 1094.34 1214.38 1094.78 1214.03 cv
1095.23 1213.7 1095.79 1212.11 1095.9 1210.82 cv
1125.28 1039.67 li
1125.6 1038.2 1125.64 1036.2 1125.25 1035.59 cv
1124.94 1035.09 1123.47 1034.53 1122.45 1034.4 cv
848.636 987.383 li
846.77 987.07 845.513 985.306 845.827 983.441 cv
846.141 981.569 847.918 980.285 849.772 980.633 cv
859.854 982.358 li
1123.46 1027.63 li
1124.2 1027.71 1128.86 1028.44 1131.06 1031.96 cv
1133.15 1035.3 1132.2 1040.09 1131.99 1041.01 cv
1102.69 1211.68 li
1102.65 1212.31 1102.12 1217.12 1098.86 1219.53 cv
1097.08 1220.86 1094.83 1221.19 1093.02 1221.19 cv
cp
f
823.06 982.942 mo
822.866 982.942 822.667 982.925 822.469 982.894 cv
802.74 979.501 li
800.877 979.185 799.622 977.419 799.938 975.551 cv
800.257 973.692 802.033 972.417 803.886 972.752 cv
823.642 976.144 li
825.505 976.47 826.751 978.239 826.428 980.103 cv
826.141 981.77 824.693 982.942 823.06 982.942 cv
cp
f
768.413 973.554 mo
768.222 973.554 768.028 973.541 767.832 973.505 cv
762.391 972.573 li
763.517 965.814 li
768.986 966.756 li
770.85 967.072 772.103 968.842 771.783 970.705 cv
771.498 972.377 770.049 973.554 768.413 973.554 cv
cp
f
1504.39 1476.37 mo
1503.61 1476.37 1502.82 1476.1 1502.17 1475.55 cv
1325.56 1324.5 li
1324.87 1323.91 1324.45 1323.07 1324.38 1322.16 cv
1324.3 1321.26 1324.6 1320.36 1325.19 1319.67 cv
1500.62 1114.81 li
1501.86 1113.37 1504.03 1113.21 1505.45 1114.44 cv
1506.89 1115.67 1507.05 1117.84 1505.82 1119.27 cv
1487.5 1140.65 li
1332.62 1321.52 li
1504.02 1468.12 li
1577.75 1382.02 li
1578.97 1380.58 1581.15 1380.42 1582.57 1381.65 cv
1584.01 1382.88 1584.18 1385.04 1582.94 1386.47 cv
1506.99 1475.18 li
1506.32 1475.97 1505.36 1476.37 1504.39 1476.37 cv
cp
.682353 .686275 .737255 rgb
f
647.65 1144.89 mo
647.466 1144.89 647.28 1144.88 647.091 1144.84 cv
560.178 1130.59 li
555.407 1129.19 553.23 1127.05 552.169 1125.49 cv
549.779 1121.97 550.754 1116.91 550.972 1115.93 cv
579.927 947.278 li
580.009 946.427 580.756 940.935 584.34 938.242 cv
588 935.491 593.334 936.535 594.368 936.775 cv
732.232 960.363 li
734.096 960.684 735.349 962.449 735.03 964.317 cv
734.711 966.181 732.947 967.415 731.077 967.112 cv
593.024 943.484 li
591.58 943.173 589.274 943.102 588.455 943.717 cv
587.597 944.358 586.859 946.771 586.707 948.219 cv
557.688 1117.26 li
557.349 1118.84 557.349 1120.92 557.837 1121.64 cv
558.196 1122.17 559.172 1123.17 561.711 1123.93 cv
648.201 1138.09 li
650.066 1138.39 651.33 1140.15 651.025 1142.02 cv
650.749 1143.7 649.298 1144.89 647.65 1144.89 cv
cp
.356863 .152941 .0784314 rgb
f
903.399 1188.69 mo
903.21 1188.69 903.017 1188.68 902.824 1188.64 cv
809.594 1172.67 li
807.73 1172.35 806.48 1170.58 806.799 1168.71 cv
807.118 1166.85 808.886 1165.62 810.754 1165.92 cv
903.966 1181.89 li
905.832 1182.21 907.087 1183.97 906.771 1185.84 cv
906.489 1187.51 905.038 1188.69 903.399 1188.69 cv
cp
f
902.854 1188.69 mo
901.396 1188.43 li
872.635 1183.51 li
870.771 1183.19 869.519 1181.43 869.838 1179.56 cv
870.156 1177.7 871.924 1176.42 873.789 1176.76 cv
903.801 1181.9 li
903.5 1185.33 li
902.854 1188.69 li
cp
f
1091.84 1003.6 mo
1091.65 1003.6 1091.45 1003.58 1091.26 1003.55 cv
814.406 956.008 li
812.543 955.687 811.293 953.917 811.613 952.053 cv
811.937 950.189 813.731 948.981 815.57 949.258 cv
1089.05 996.224 li
1091.58 981.489 li
640.645 904.054 li
638.115 918.783 li
790.296 944.786 li
792.156 945.103 793.519 946.886 793.204 948.749 cv
792.891 950.608 791.254 951.901 789.373 951.576 cv
633.583 924.957 li
632.689 924.806 631.892 924.302 631.365 923.563 cv
630.842 922.817 630.632 921.899 630.786 921.003 cv
634.475 899.521 li
634.629 898.626 635.133 897.828 635.872 897.304 cv
636.615 896.78 637.547 896.568 638.429 896.725 cv
1096.11 975.319 li
1097.97 975.641 1099.22 977.41 1098.91 979.273 cv
1095.22 1000.76 li
1095.06 1001.65 1094.56 1002.45 1093.82 1002.97 cv
1093.24 1003.38 1092.54 1003.6 1091.84 1003.6 cv
cp
f
1251.87 811.821 mo
1249.8 807.266 1240.48 806.023 1240.48 806.023 cv
562.499 689.146 li
562.499 689.146 555.25 687.435 552.826 691.265 cv
550.402 695.09 551.771 700.362 551.771 700.362 cv
583.211 874.042 li
583.211 874.042 584.53 881.876 589.026 885.222 cv
593.519 888.568 600.201 889.203 600.201 889.203 cv
1135.43 981 li
1135.43 981 1143.15 982.598 1147.97 980.786 cv
1152.8 978.974 1154.89 974.997 1154.89 974.997 cv
1249.77 822.061 li
1249.77 822.061 1253.79 816.012 1251.87 811.821 cv
cp
1 1 1 rgb
ef
558.925 692.193 mo
557.447 692.193 556.125 692.454 555.72 693.094 cv
554.159 695.558 555.075 699.462 555.087 699.502 cv
586.578 873.432 li
586.898 875.277 588.314 880.424 591.071 882.478 cv
594.694 885.177 600.467 885.787 600.524 885.794 cv
1136.01 977.624 li
1138.01 978.034 1143.6 978.77 1146.77 977.58 cv
1150.22 976.287 1151.85 973.43 1151.86 973.402 cv
1246.86 820.254 li
1248.1 818.357 1249.51 814.897 1248.76 813.244 cv
1248.76 813.244 1248.76 813.242 1248.76 813.242 cv
1247.92 811.412 1243.15 809.845 1240.02 809.417 cv
561.919 692.521 li
561.009 692.313 559.933 692.193 558.925 692.193 cv
cp
1142.04 985.078 mo
1138.41 985.078 1135.28 984.463 1134.74 984.352 cv
599.622 892.577 li
599.622 892.577 li
599.521 892.577 592.166 891.83 586.981 887.969 cv
581.538 883.917 579.991 875.552 579.833 874.61 cv
548.404 700.974 li
548.279 700.537 546.804 694.369 549.936 689.432 cv
553.562 683.705 562.3 685.585 563.287 685.814 cv
1241.06 802.649 li
1242.8 802.879 1252.26 804.424 1254.99 810.399 cv
1254.99 810.399 li
1257.62 816.155 1253.14 823.172 1252.62 823.954 cv
1157.8 976.804 li
1157.65 977.12 1155.05 981.788 1149.18 983.99 cv
1146.98 984.819 1144.4 985.078 1142.04 985.078 cv
cp
.356863 .152941 .0784314 rgb
f
866.849 1295.81 mo
866.652 1295.81 866.454 1295.8 866.256 1295.77 cv
716.446 1269.6 li
714.583 1269.28 713.339 1267.5 713.667 1265.64 cv
713.995 1263.77 715.793 1262.54 717.632 1262.86 cv
864.06 1288.43 li
880.303 1195.44 li
803.596 1182.05 li
801.732 1181.73 800.486 1179.95 800.812 1178.09 cv
801.138 1176.22 802.935 1175.01 804.773 1175.3 cv
884.853 1189.29 li
885.748 1189.44 886.544 1189.95 887.065 1190.69 cv
887.587 1191.43 887.792 1192.35 887.636 1193.25 cv
870.217 1292.98 li
869.927 1294.64 868.48 1295.81 866.849 1295.81 cv
cp
f
965.152 1383.95 mo
963.661 1383.95 962.288 1382.97 961.859 1381.46 cv
961.73 1381 948.735 1335.32 939.086 1310.33 cv
933.839 1296.75 927.99 1286.23 922.827 1276.94 cv
918.374 1268.93 914.168 1261.36 910.98 1253.05 cv
902.86 1231.86 902.031 1209.44 901.229 1187.76 cv
901.146 1185.55 li
900.302 1162.88 896.692 1147.61 893.202 1132.86 cv
890.162 1120 890.559 1110.87 894.377 1105.72 cv
896.499 1102.86 899.659 1101.22 903.52 1100.98 cv
913.815 1100.17 927.104 1119.4 934.188 1145.34 cv
934.686 1147.17 933.611 1149.05 931.788 1149.55 cv
929.965 1150.04 928.081 1148.97 927.582 1147.14 cv
920.461 1121.07 908.616 1107.81 904.084 1107.81 cv
904.037 1107.81 903.993 1107.81 903.945 1107.82 cv
901.507 1107.97 900.455 1109.02 899.878 1109.8 cv
898.436 1111.75 896.517 1117.12 899.866 1131.28 cv
903.266 1145.66 907.117 1161.95 907.989 1185.29 cv
908.071 1187.5 li
908.852 1208.63 909.661 1230.47 917.373 1250.6 cv
920.387 1258.46 924.479 1265.82 928.813 1273.62 cv
934.082 1283.1 940.054 1293.84 945.475 1307.86 cv
955.237 1333.15 968.317 1379.13 968.449 1379.59 cv
968.964 1381.41 967.907 1383.3 966.088 1383.82 cv
965.776 1383.91 965.462 1383.95 965.152 1383.95 cv
cp
f
971.093 1152.49 mo
971.093 1152.49 li
971.093 1152.49 li
cp
926.223 1206 mo
926.155 1206 926.089 1206 926.02 1205.99 cv
924.132 1205.88 922.691 1204.26 922.804 1202.37 cv
923.392 1192.33 924.377 1183.5 925.331 1174.96 cv
927.041 1159.64 928.519 1146.4 926.617 1133.25 cv
926.18 1130.19 li
924.729 1120.01 922.926 1107.34 919.478 1098.34 cv
918.905 1096.85 li
915.214 1087.27 906.564 1064.83 906.783 1050.25 cv
906.886 1043.41 909.904 1037.54 914.665 1034.93 cv
918.481 1032.83 922.844 1033.07 926.944 1035.6 cv
931.185 1038.22 934.826 1045.07 938.348 1051.68 cv
939.561 1053.95 li
954.564 1081.81 962.761 1100.72 966.135 1115.26 cv
966.487 1116.78 966.982 1119.74 967.591 1123.4 cv
968.417 1128.38 970.203 1139.14 972.028 1146.04 cv
972.63 1130.81 969.273 1094.68 963.975 1081.84 cv
962.896 1079.23 961.521 1076.11 960.021 1072.71 cv
948.937 1047.56 941.181 1027.86 950.27 1021.97 cv
953.835 1019.66 957.491 1018.92 961.117 1019.74 cv
967.669 1021.23 974.06 1027.74 982.487 1041.5 cv
983.97 1043.92 985.467 1046.33 986.951 1048.72 cv
996.412 1063.97 1005.35 1078.38 1008.1 1090.5 cv
1009.17 1095.16 1015.36 1147.53 1015.12 1157.23 cv
1015.08 1159.12 1013.41 1160.66 1011.62 1160.57 cv
1009.73 1160.52 1008.23 1158.95 1008.28 1157.06 cv
1008.5 1148.04 1002.43 1096.42 1001.43 1092.02 cv
998.924 1081.01 990.282 1067.08 981.132 1052.34 cv
979.641 1049.93 978.138 1047.51 976.647 1045.07 cv
972.133 1037.7 965.455 1027.75 959.602 1026.42 cv
957.794 1026 956.002 1026.42 953.991 1027.72 cv
949.076 1030.9 961.579 1059.26 966.287 1069.94 cv
967.811 1073.4 969.209 1076.57 970.306 1079.23 cv
975.247 1091.21 984.036 1152.69 975.207 1157.79 cv
973.883 1158.55 972.354 1158.61 970.992 1157.97 cv
967.068 1156.11 964.887 1148.92 960.834 1124.52 cv
960.259 1121.06 959.798 1118.25 959.466 1116.82 cv
955.275 1098.76 942.659 1074.14 933.533 1057.2 cv
932.306 1054.9 li
929.648 1049.91 926.011 1043.07 923.35 1041.43 cv
921.388 1040.22 919.566 1040.05 917.957 1040.93 cv
915.392 1042.34 913.695 1046.04 913.631 1050.36 cv
913.433 1063.6 921.744 1085.18 925.295 1094.39 cv
925.87 1095.89 li
929.597 1105.61 931.46 1118.71 932.959 1129.23 cv
933.394 1132.27 li
935.422 1146.29 933.899 1159.93 932.136 1175.72 cv
931.193 1184.17 930.217 1192.91 929.637 1202.78 cv
929.53 1204.59 928.023 1206 926.223 1206 cv
cp
f
1057.68 1359.75 mo
1056.27 1359.75 1054.95 1358.87 1054.46 1357.47 cv
1046.33 1334.54 1044.64 1310.67 1049.59 1288.46 cv
1052.87 1273.76 1055.6 1255.46 1057.6 1242.11 cv
1058.37 1236.96 1059.05 1232.42 1059.63 1228.89 cv
1063.34 1206.49 1068.93 1165.49 1069.32 1149.94 cv
1069.79 1131.14 1057.39 1093.4 1051.74 1091.92 cv
1050.42 1091.58 1048.03 1091.14 1046.92 1092.07 cv
1045.22 1093.51 1045.63 1098.1 1045.76 1099.61 cv
1045.81 1100.09 1045.83 1100.46 1045.84 1100.7 cv
1045.87 1103.63 1047.01 1110.51 1048.22 1117.8 cv
1049.55 1125.82 1051.06 1134.91 1051.64 1141.84 cv
1052.56 1152.82 1053.24 1171.68 1047.51 1174.69 cv
1046.13 1175.42 1044.46 1175.26 1043.29 1174.29 cv
1038.95 1170.74 1036.46 1158.86 1031.83 1132.61 cv
1029.1 1117.17 1026.28 1101.2 1023.15 1094.31 cv
1016.01 1078.63 998.023 1060.07 982.192 1052.05 cv
980.505 1051.19 979.83 1049.13 980.686 1047.45 cv
981.537 1045.76 983.602 1045.1 985.287 1045.94 cv
1002.32 1054.56 1021.69 1074.56 1029.38 1091.47 cv
1032.88 1099.16 1035.64 1114.83 1038.57 1131.42 cv
1040.34 1141.41 1042.75 1155.07 1045.03 1162.95 cv
1045.47 1158.89 1045.65 1152.43 1044.82 1142.41 cv
1044.26 1135.75 1042.78 1126.81 1041.47 1118.92 cv
1040.16 1111.04 1039.03 1104.24 1038.99 1100.8 cv
1038.94 1100.21 li
1038.68 1097.33 1038.08 1090.58 1042.5 1086.85 cv
1045.14 1084.61 1048.84 1084.09 1053.47 1085.29 cv
1066.48 1088.7 1076.51 1136.2 1076.17 1150.11 cv
1075.77 1165.97 1070.13 1207.42 1066.39 1230.01 cv
1065.81 1233.51 1065.13 1238.02 1064.37 1243.12 cv
1062.36 1256.58 1059.6 1275.01 1056.27 1289.95 cv
1051.61 1310.9 1053.21 1333.46 1060.91 1355.18 cv
1061.54 1356.96 1060.61 1358.92 1058.83 1359.55 cv
1058.45 1359.68 1058.06 1359.75 1057.68 1359.75 cv
cp
f
694.183 1307.25 mo
693.708 1307.25 693.225 1307.15 692.766 1306.94 cv
691.045 1306.15 690.284 1304.12 691.069 1302.4 cv
698.922 1285.18 716.933 1254.17 732.384 1239.17 cv
741.255 1230.55 749.853 1223.67 758.169 1217.01 cv
766.934 1209.99 775.994 1202.74 785.209 1193.54 cv
800.464 1178.3 808.716 1160.81 814.197 1147.28 cv
820.329 1132.14 824.943 1123.08 830.4 1113.35 cv
831.777 1110.89 833.734 1108.01 835.805 1104.95 cv
840.687 1097.75 847.376 1087.89 846.371 1082.82 cv
846.179 1081.85 845.695 1081.16 844.801 1080.57 cv
838.246 1076.23 827.378 1083.16 810.575 1102.34 cv
809.331 1103.76 807.165 1103.91 805.745 1102.66 cv
804.323 1101.41 804.18 1099.25 805.426 1097.83 cv
819.554 1081.7 835.736 1066.38 848.577 1074.86 cv
850.984 1076.45 852.545 1078.74 853.087 1081.48 cv
854.646 1089.37 847.647 1099.69 841.472 1108.8 cv
839.485 1111.73 837.608 1114.49 836.374 1116.7 cv
831.046 1126.19 826.539 1135.05 820.546 1149.85 cv
814.819 1163.98 806.177 1182.27 790.048 1198.38 cv
780.566 1207.85 771.355 1215.22 762.448 1222.36 cv
754.26 1228.91 745.791 1235.69 737.154 1244.08 cv
723.889 1256.96 706.138 1285.86 697.302 1305.24 cv
696.727 1306.5 695.482 1307.25 694.183 1307.25 cv
cp
f
608.137 1255.18 mo
607.56 1255.18 606.974 1255.03 606.437 1254.72 cv
604.796 1253.79 604.229 1251.69 605.168 1250.05 cv
607.52 1245.95 609.748 1242.1 611.854 1238.47 cv
625.249 1215.35 633.333 1201.39 637.359 1183.24 cv
641.967 1162.46 650.172 1111.48 646.144 1086.5 cv
644.574 1076.78 641.503 1065.87 638.534 1055.31 cv
632.879 1035.21 629.575 1022.55 632.796 1015.75 cv
637.636 1005.53 646.522 989.059 653.021 979.188 cv
657.679 972.118 664.395 964.749 674.976 970.531 cv
677.525 971.927 685.275 976.176 669.535 1013.39 cv
666.392 1020.82 668.618 1025.27 673.055 1034.13 cv
673.881 1035.78 674.655 1037.54 675.426 1039.3 cv
679.47 1048.51 681.818 1052.41 687.242 1051.14 cv
694.368 1049.48 697.693 1014.75 698.786 1003.34 cv
698.982 1001.3 699.156 999.469 699.323 997.903 cv
700.91 982.862 715.827 971.998 728.986 962.413 cv
734.216 958.548 li
742.141 952.521 756.885 941.318 766.443 951.607 cv
772.407 958.035 764.274 969.805 760.501 974.565 cv
757.543 978.293 754.281 981.729 751.127 985.051 cv
745.214 991.283 739.628 997.168 736.041 1004.69 cv
734.294 1008.35 734.051 1030.77 735.754 1039.84 cv
737.838 1035.86 741.592 1026.75 748.092 1005.93 cv
748.46 1004.75 li
756.024 980.575 759.363 972.109 779.161 954.893 cv
779.979 954.185 780.913 953.332 781.941 952.392 cv
788.947 946.013 799.504 936.356 808.667 938.135 cv
814.199 939.214 816.504 942.214 817.465 944.541 cv
819.747 950.064 817.262 958.063 809.868 968.989 cv
806.59 973.839 803.968 977.441 801.775 980.455 cv
795.197 989.5 792.734 992.879 787.567 1009.39 cv
786.807 1011.75 li
777.383 1040.71 776.901 1049.93 777.43 1052.85 cv
780.162 1050.41 786.433 1041.48 796.271 1019.55 cv
804.65 1000.87 808.943 992.206 817.781 981.605 cv
826.929 970.639 837.356 960.073 845.374 964.834 cv
857.776 972.203 851.17 985.635 843.52 1001.18 cv
841.552 1005.19 839.435 1009.49 837.407 1014.08 cv
830.835 1028.97 825.112 1049.73 819.578 1069.81 cv
816.941 1079.37 814.451 1088.41 811.858 1096.91 cv
805.393 1118.14 799.765 1134.45 796.403 1144.19 cv
794.975 1148.33 793.911 1151.41 793.3 1153.36 cv
792.731 1155.16 790.809 1156.17 789.01 1155.61 cv
787.206 1155.04 786.201 1153.12 786.765 1151.32 cv
787.389 1149.32 788.473 1146.18 789.93 1141.96 cv
793.275 1132.26 798.88 1116.02 805.311 1094.91 cv
807.876 1086.5 810.353 1077.51 812.979 1067.99 cv
818.577 1047.67 824.366 1026.66 831.145 1011.31 cv
833.211 1006.63 835.368 1002.25 837.374 998.162 cv
845.695 981.249 848.241 974.499 841.877 970.719 cv
840.928 970.161 836.726 969.582 823.042 985.991 cv
814.75 995.934 810.624 1004.28 802.518 1022.35 cv
783.979 1063.68 777.777 1061.18 774.784 1059.97 cv
768.859 1057.56 767.713 1048.3 780.296 1009.63 cv
781.032 1007.35 li
786.538 989.764 789.377 985.857 796.238 976.43 cv
798.396 973.46 800.973 969.921 804.198 965.155 cv
812.251 953.248 811.734 948.598 811.137 947.153 cv
810.963 946.734 810.437 945.459 807.354 944.857 cv
801.595 943.712 791.813 952.659 786.558 957.452 cv
785.485 958.433 784.507 959.319 783.653 960.064 cv
765.197 976.108 762.274 983.531 754.995 1006.79 cv
754.627 1007.96 li
744.746 1039.63 740.556 1047.05 737 1048.75 cv
735.844 1049.3 734.573 1049.36 733.434 1048.91 cv
731.352 1048.09 730.503 1045.92 730.222 1045.22 cv
727.195 1037.5 726.949 1007.84 729.862 1001.74 cv
733.915 993.24 740.141 986.683 746.161 980.339 cv
749.213 977.125 752.367 973.799 755.136 970.313 cv
760.38 963.693 762.66 957.599 761.426 956.266 cv
756.087 950.537 744.559 959.293 738.36 964.001 cv
733.019 967.95 li
720.425 977.125 707.401 986.607 706.133 998.626 cv
705.968 1000.17 705.797 1001.98 705.603 1003.99 cv
703.027 1030.89 699.805 1055.25 688.793 1057.81 cv
677.263 1060.51 672.573 1049.83 669.156 1042.05 cv
668.432 1040.4 667.709 1038.75 666.934 1037.2 cv
662.42 1028.18 658.855 1021.06 663.227 1010.72 cv
672.027 989.919 673.474 978.025 671.682 976.532 cv
668.684 974.892 665.273 973.028 658.739 982.951 cv
652.407 992.571 643.723 1008.67 638.984 1018.68 cv
636.699 1023.51 641.175 1039.42 645.125 1053.46 cv
648.147 1064.2 651.272 1075.31 652.901 1085.41 cv
657.427 1113.45 647.78 1167.87 644.046 1184.72 cv
639.789 1203.91 631.033 1219.03 617.779 1241.9 cv
615.678 1245.53 613.455 1249.36 611.11 1253.46 cv
610.478 1254.56 609.323 1255.18 608.137 1255.18 cv
cp
f
570.806 1564.29 mo
570.267 1564.29 569.72 1564.16 569.209 1563.89 cv
567.538 1563.01 566.898 1560.94 567.778 1559.27 cv
580.82 1534.58 li
619.933 1460.57 692.736 1322.82 692.234 1310.8 cv
690.581 1301.65 675.399 1289.92 668.104 1284.29 cv
667.09 1283.5 666.187 1282.81 665.432 1282.2 cv
646.618 1267.23 615.711 1254.4 603.042 1256.34 cv
601.815 1256.52 600.215 1256.95 599.564 1257.89 cv
559.139 1317.03 440.11 1498.33 434.159 1509.83 cv
433.289 1511.51 431.228 1512.16 429.545 1511.29 cv
427.866 1510.42 427.209 1508.36 428.078 1506.68 cv
434.083 1495.08 553.421 1313.27 593.911 1254.03 cv
595.55 1251.64 598.278 1250.13 602.021 1249.57 cv
618.063 1247.1 650.998 1261.96 669.693 1276.85 cv
670.427 1277.43 671.305 1278.11 672.29 1278.87 cv
680.874 1285.5 696.854 1297.84 698.988 1309.7 cv
700.792 1319.69 660.978 1397.56 586.875 1537.77 cv
573.837 1562.46 li
573.222 1563.63 572.034 1564.29 570.806 1564.29 cv
cp
f
995.031 1600.78 mo
993.48 1600.78 992.076 1599.72 991.701 1598.15 cv
976.844 1535.5 951.127 1398.5 956.414 1387.6 cv
961.657 1376.78 980.35 1369.2 990.391 1365.13 cv
991.56 1364.66 992.6 1364.23 993.474 1363.86 cv
1015.48 1354.58 1051.18 1349.18 1066 1355.84 cv
1069.45 1357.39 1071.68 1359.57 1072.61 1362.33 cv
1075.31 1370.29 li
1093.03 1422.64 1134.55 1545.2 1149.14 1591.21 cv
1149.71 1593.02 1148.71 1594.94 1146.91 1595.51 cv
1145.1 1596.1 1143.18 1595.08 1142.61 1593.28 cv
1128.05 1547.34 1086.54 1424.81 1068.82 1372.49 cv
1066.12 1364.52 li
1065.75 1363.43 1064.32 1362.59 1063.19 1362.08 cv
1051.49 1356.82 1018.27 1360.83 996.135 1370.17 cv
995.236 1370.55 994.167 1370.99 992.963 1371.48 cv
984.429 1374.94 966.672 1382.13 962.575 1390.59 cv
959.794 1399.56 979.297 1516.18 998.366 1596.57 cv
998.801 1598.41 997.664 1600.25 995.825 1600.69 cv
995.558 1600.75 995.293 1600.78 995.031 1600.78 cv
cp
f
490.075 1338.25 mo
489.741 1338.25 489.4 1338.2 489.062 1338.09 cv
487.256 1337.53 486.246 1335.62 486.806 1333.81 cv
502.448 1283.35 526.535 1250.54 527.552 1249.17 cv
528.682 1247.65 530.819 1247.33 532.34 1248.46 cv
533.859 1249.58 534.179 1251.73 533.053 1253.25 cv
532.81 1253.58 508.623 1286.56 493.346 1335.83 cv
492.891 1337.3 491.538 1338.25 490.075 1338.25 cv
cp
f
1078.71 1393.66 mo
1078.66 1393.66 1078.62 1393.66 1078.57 1393.65 cv
1076.68 1393.58 1075.21 1391.99 1075.29 1390.1 cv
1076.11 1369.9 1072.72 1346.6 1072.69 1346.37 cv
1072.41 1344.5 1073.71 1342.76 1075.58 1342.49 cv
1077.46 1342.23 1079.19 1343.5 1079.46 1345.37 cv
1079.61 1346.35 1082.97 1369.52 1082.13 1390.37 cv
1082.05 1392.21 1080.54 1393.66 1078.71 1393.66 cv
cp
f
958.612 1391.41 mo
958.112 1391.41 957.609 1391.31 957.13 1391.07 cv
918.1 1372.28 813.669 1329.77 687.043 1340.9 cv
685.198 1341.07 683.5 1339.68 683.334 1337.79 cv
683.17 1335.91 684.561 1334.25 686.446 1334.08 cv
814.752 1322.8 920.563 1365.87 960.099 1384.9 cv
961.804 1385.72 962.52 1387.77 961.699 1389.47 cv
961.108 1390.7 959.885 1391.41 958.612 1391.41 cv
cp
f
875.132 727.826 mo
875.096 727.826 875.063 727.826 875.026 727.824 cv
873.137 727.769 871.649 726.19 871.708 724.3 cv
871.804 721.07 874.512 710.565 878.921 693.689 cv
882.378 680.46 886.297 665.466 887.474 658.479 cv
888.699 651.231 884.547 639.281 877.602 630.06 cv
872.39 623.144 866.333 618.832 860.986 618.229 cv
843.921 616.327 818.054 630.435 815.188 636.016 cv
811.057 644.064 806.599 653.014 802.178 661.888 cv
792.681 680.955 783.709 698.966 778.038 708.033 cv
777.033 709.64 774.918 710.126 773.321 709.121 cv
771.717 708.12 771.23 706.007 772.234 704.404 cv
777.729 695.615 787.041 676.916 796.049 658.834 cv
800.482 649.936 804.953 640.96 809.098 632.889 cv
813.714 623.891 843.226 609.295 861.753 611.426 cv
869.068 612.248 876.639 617.404 883.069 625.941 cv
891.172 636.695 895.759 650.545 894.228 659.619 cv
892.999 666.903 889.21 681.4 885.548 695.421 cv
882.305 707.825 878.629 721.888 878.551 724.505 cv
878.495 726.359 876.975 727.826 875.132 727.826 cv
cp
f
1029.01 753.326 mo
1027.36 753.326 1025.91 752.134 1025.63 750.453 cv
1023.42 736.85 1020.76 702.168 1018.63 674.299 cv
1017.79 663.323 li
1017.3 657.066 998.888 634.029 982.429 629.206 cv
977.262 627.688 970.018 629.324 962.542 633.687 cv
952.567 639.502 944.11 648.922 942.436 656.081 cv
941.052 661.984 938.413 675.489 935.615 689.788 cv
930.806 714.398 927.558 730.773 926.303 734.039 cv
925.623 735.809 923.637 736.676 921.878 736.007 cv
920.112 735.327 919.232 733.346 919.91 731.582 cv
921.047 728.629 925.397 706.363 928.897 688.474 cv
931.704 674.111 934.356 660.544 935.77 654.521 cv
937.867 645.556 947.458 634.556 959.092 627.771 cv
968.322 622.388 977.298 620.569 984.355 622.635 cv
1002.24 627.876 1023.84 652.709 1024.61 662.795 cv
1025.46 673.777 li
1027.58 701.515 1030.22 736.036 1032.39 749.353 cv
1032.69 751.218 1031.43 752.979 1029.56 753.281 cv
1029.37 753.313 1029.19 753.326 1029.01 753.326 cv
cp
f
890.604 649.6 mo
890.262 649.6 889.912 649.549 889.568 649.438 cv
887.766 648.868 886.767 646.944 887.34 645.142 cv
890.705 634.521 895.507 627.661 899.363 622.149 cv
901.826 618.63 903.952 615.59 905.228 612.326 cv
907.002 607.79 908.179 602.701 909.317 597.779 cv
910.236 593.81 911.186 589.704 912.46 585.785 cv
913.441 582.78 915.567 577.036 916.742 574.099 cv
917.444 572.343 919.444 571.493 921.191 572.19 cv
922.948 572.893 923.802 574.886 923.1 576.64 cv
921.963 579.483 919.912 585.023 918.972 587.905 cv
917.79 591.538 916.916 595.319 915.989 599.322 cv
914.797 604.482 913.562 609.818 911.604 614.818 cv
910.033 618.844 907.574 622.356 904.974 626.075 cv
901.197 631.471 896.918 637.587 893.866 647.21 cv
893.404 648.668 892.057 649.6 890.604 649.6 cv
cp
f
828.271 624.688 mo
827.846 624.688 827.413 624.61 826.994 624.44 cv
825.239 623.734 824.391 621.739 825.097 619.985 cv
828.008 612.756 831.352 606.869 834.584 601.175 cv
836.771 597.325 838.834 593.687 840.591 589.922 cv
847.574 574.931 851.228 561.436 855.18 543.195 cv
855.581 541.348 857.399 540.173 859.25 540.574 cv
861.098 540.974 862.272 542.797 861.871 544.645 cv
857.818 563.359 854.052 577.241 846.797 592.815 cv
844.926 596.83 842.795 600.584 840.54 604.556 cv
837.417 610.055 834.188 615.738 831.449 622.544 cv
830.913 623.879 829.629 624.688 828.271 624.688 cv
cp
f
945.535 646.185 mo
945.423 646.185 945.31 646.181 945.198 646.169 cv
943.314 645.984 941.939 644.311 942.122 642.429 cv
943.104 632.387 941.573 625.078 940.221 618.632 cv
939.291 614.188 938.41 609.992 938.549 605.67 cv
938.719 600.287 939.688 594.882 940.624 589.653 cv
940.958 587.794 942.746 586.523 944.603 586.871 cv
946.464 587.203 947.705 588.966 947.371 590.827 cv
946.471 595.847 945.548 601.005 945.392 605.889 cv
945.28 609.391 946.043 613.021 946.924 617.228 cv
948.303 623.813 950.021 632.009 948.938 643.093 cv
948.765 644.863 947.275 646.185 945.535 646.185 cv
cp
f
1011.52 649.226 mo
1011.49 649.226 1011.47 649.226 1011.44 649.226 cv
1009.55 649.183 1008.05 647.618 1008.09 645.728 cv
1008.25 638.392 1007.52 631.895 1006.81 625.608 cv
1006.3 621.07 1005.82 616.784 1005.68 612.357 cv
1005.43 604.634 1005.73 596.741 1006.65 586.764 cv
1006.82 584.88 1008.44 583.505 1010.37 583.668 cv
1012.25 583.842 1013.64 585.509 1013.47 587.393 cv
1012.58 597.077 1012.28 604.71 1012.52 612.141 cv
1012.65 616.289 1013.12 620.444 1013.62 624.842 cv
1014.35 631.351 1015.11 638.082 1014.94 645.875 cv
1014.9 647.74 1013.37 649.226 1011.52 649.226 cv
cp
f
858.376 537.855 mo
858.387 537.859 858.398 537.866 858.409 537.871 cv
858.398 537.866 858.387 537.859 858.376 537.855 cv
cp
855.757 544.184 mo
855.759 544.184 li
855.757 544.184 li
cp
855.762 544.186 mo
855.764 544.186 855.764 544.186 855.766 544.188 cv
855.764 544.186 855.764 544.186 855.762 544.186 cv
cp
921.936 568.66 mo
921.936 568.66 li
921.936 568.66 li
cp
924.189 571.236 mo
924.234 571.236 li
924.189 571.236 li
cp
924.189 571.236 mo
924.234 571.236 li
924.189 571.236 li
cp
860.295 539.264 mo
861.996 541.143 864.563 545.644 867.796 557.02 cv
868.524 559.588 868.971 562.388 869.405 565.096 cv
870.789 573.755 872.098 581.938 881.89 585.48 cv
893.534 589.697 903.159 583.39 909.394 578.284 cv
913.562 574.863 916.907 572.414 919.121 570.791 cv
920.324 569.91 921.231 569.253 921.815 568.763 cv
922.749 567.498 925.547 561.338 928.505 554.824 cv
938.217 533.444 956.294 493.647 982.583 455.941 cv
992.573 441.613 994.16 434.02 993.799 423.36 cv
993.307 408.869 987.163 393.455 978.856 385.88 cv
976.643 383.857 973.337 381.56 969.588 381.695 cv
945.325 383.1 910.992 398.761 898.556 419.838 cv
886.424 440.395 861.303 527.066 860.295 539.264 cv
cp
889.568 593.709 mo
886.419 593.709 883.066 593.188 879.561 591.917 cv
865.975 587.005 864.127 575.456 862.643 566.177 cv
862.224 563.551 861.826 561.067 861.207 558.893 cv
858.334 548.769 856.058 544.773 855.322 543.956 cv
854.587 543.492 853.942 542.691 853.68 541.91 cv
850.938 533.763 881.537 435.198 892.658 416.356 cv
906.647 392.651 943.276 376.359 969.193 374.861 cv
973.985 374.547 978.896 376.646 983.472 380.819 cv
993.184 389.682 1000.08 406.683 1000.64 423.128 cv
1001.1 436.761 998.081 445.686 988.199 459.857 cv
962.268 497.051 944.359 536.476 934.739 557.657 cv
929.532 569.119 927.966 572.482 926.443 573.813 cv
926.44 573.815 926.44 573.817 926.438 573.817 cv
925.771 574.401 924.673 575.213 923.169 576.314 cv
920.886 577.986 917.759 580.277 913.733 583.579 cv
910.31 586.385 901.369 593.709 889.568 593.709 cv
cp
f
991.256 452.58 mo
990.531 452.58 989.803 452.353 989.183 451.88 cv
987.679 450.732 987.389 448.583 988.534 447.081 cv
996.699 436.373 1001.21 425.364 1000.93 416.878 cv
1000.17 394.562 984.99 372.254 974.218 371.893 cv
945.8 370.864 910.711 392.943 903.244 404.762 cv
896.69 415.135 891.802 431.561 888.882 441.372 cv
888.095 444.021 887.422 446.274 886.867 447.941 cv
886.27 449.733 884.319 450.706 882.538 450.108 cv
880.744 449.511 879.774 447.573 880.372 445.779 cv
880.909 444.165 881.558 441.983 882.32 439.42 cv
885.536 428.611 890.396 412.275 897.457 401.104 cv
906.899 386.162 945.16 364.048 974.445 365.05 cv
989.805 365.564 1006.93 392.085 1007.77 416.646 cv
1008.24 430.389 999.331 444.215 993.981 451.231 cv
993.307 452.116 992.288 452.58 991.256 452.58 cv
cp
f
943.78 583.032 mo
943.782 583.032 943.785 583.032 943.789 583.034 cv
943.785 583.032 943.782 583.032 943.78 583.032 cv
cp
973.763 616.904 mo
954.221 616.907 944.522 597.115 941.236 590.411 cv
940.977 589.88 940.76 589.428 940.582 589.075 cv
938.709 587.881 938.698 584.742 938.653 571.189 cv
938.625 562.525 938.587 550.656 938.014 536.154 cv
937.94 534.265 939.411 532.673 941.3 532.597 cv
943.301 532.523 944.781 533.994 944.856 535.882 cv
945.435 550.511 945.473 562.45 945.501 571.167 cv
945.521 577.005 945.539 582.551 945.771 584.45 cv
946.279 585.144 946.747 586.098 947.385 587.396 cv
950.619 593.995 959.245 611.517 975.92 609.954 cv
988.595 608.765 999.684 599.367 1007.99 582.778 cv
1008.28 582.198 1008.49 581.802 1008.6 581.617 cv
1008.89 580.819 1009.38 576.428 1009.88 571.778 cv
1011.67 555.462 1015.39 521.512 1029.86 476.745 cv
1034.76 461.554 1035.37 453.032 1032.46 440.265 cv
1028.7 423.739 1019.04 407.193 1009.99 401.776 cv
1008.38 400.812 1006.02 399.786 1003.99 400.341 cv
1002.23 400.874 li
1000.44 401.423 998.516 400.401 997.965 398.589 cv
997.417 396.781 998.439 394.869 1000.25 394.32 cv
1002.09 393.764 li
1005.63 392.785 1009.55 393.533 1013.5 395.898 cv
1024.33 402.378 1034.88 419.996 1039.14 438.744 cv
1042.33 452.745 1041.66 462.49 1036.37 478.849 cv
1022.12 522.952 1018.45 556.434 1016.69 572.525 cv
1015.78 580.826 1015.45 583.531 1014.45 585.165 cv
1014.11 585.844 li
1002.21 609.608 987.123 615.781 976.56 616.771 cv
975.606 616.859 974.672 616.904 973.763 616.904 cv
cp
f
1036.21 471.076 mo
1035.82 471.076 1035.42 471.01 1035.03 470.867 cv
1033.26 470.216 1032.35 468.25 1033 466.474 cv
1037.65 453.771 1039.14 441.309 1037.09 432.282 cv
1031.49 407.668 1013.56 388.037 1005.7 389.321 cv
1003.36 389.687 1000.9 390.331 998.396 391.233 cv
996.621 391.869 994.65 390.952 994.014 389.174 cv
993.371 387.396 994.294 385.432 996.073 384.792 cv
998.99 383.739 1001.88 382.988 1004.65 382.554 cv
1019.23 380.277 1038.39 407.153 1043.77 430.763 cv
1046.14 441.194 1044.6 454.713 1039.42 468.832 cv
1038.92 470.219 1037.61 471.076 1036.21 471.076 cv
cp
f
1591.92 1446.62 mo
1590.43 1446.62 1589.06 1445.64 1588.63 1444.13 cv
1581.63 1419.44 1578.59 1397.44 1575.14 1363 cv
1574.95 1361.12 1576.32 1359.44 1578.2 1359.25 cv
1580.06 1359.05 1581.76 1360.43 1581.95 1362.31 cv
1585.37 1396.36 1588.36 1418.07 1595.22 1442.26 cv
1595.74 1444.08 1594.68 1445.97 1592.86 1446.49 cv
1592.55 1446.58 1592.23 1446.62 1591.92 1446.62 cv
cp
f
1608.93 1517.15 mo
1607.6 1517.15 1606.34 1516.37 1605.78 1515.08 cv
1595.44 1491.04 1583.67 1459.84 1586.35 1447.72 cv
1587.34 1443.22 1592.53 1436.38 1624.04 1423.38 cv
1625.79 1422.67 1627.79 1423.49 1628.51 1425.24 cv
1629.23 1426.98 1628.4 1428.98 1626.65 1429.71 cv
1595.96 1442.38 1593.26 1448.17 1593.03 1449.2 cv
1591.3 1457.03 1598.42 1480.65 1612.07 1512.37 cv
1612.82 1514.11 1612.02 1516.13 1610.28 1516.87 cv
1609.84 1517.06 1609.38 1517.15 1608.93 1517.15 cv
cp
f
1742.35 1391.24 mo
1740.85 1391.24 1739.47 1390.25 1739.06 1388.73 cv
1738.55 1386.91 1739.62 1385.02 1741.44 1384.52 cv
1794.37 1369.96 1933.54 1337.14 2082.27 1346.9 cv
2084.16 1347.02 2085.59 1348.65 2085.46 1350.54 cv
2085.34 1352.42 2083.69 1353.82 2081.83 1353.73 cv
1934.12 1344.06 1795.85 1376.65 1743.26 1391.12 cv
1742.96 1391.2 1742.65 1391.24 1742.35 1391.24 cv
cp
f
1681.14 760.379 mo
1679.62 760.379 1678.23 759.36 1677.83 757.819 cv
1653.73 665.628 1650.69 657.073 1640.31 631.846 cv
1636.68 623.034 1636.8 615.008 1636.91 607.248 cv
1637.06 597.356 1637.18 588.813 1629.32 580.088 cv
1625.9 576.285 1620.45 572.978 1613.55 570.523 cv
1611.78 569.889 1610.84 567.932 1611.48 566.15 cv
1612.12 564.367 1614.08 563.443 1615.85 564.072 cv
1623.81 566.908 1630.23 570.862 1634.41 575.505 cv
1644.07 586.225 1643.91 596.962 1643.76 607.347 cv
1643.66 614.417 1643.55 621.728 1646.64 629.237 cv
1657.17 654.819 1660.24 663.464 1684.45 756.09 cv
1684.93 757.918 1683.84 759.79 1682.01 760.268 cv
1681.72 760.343 1681.43 760.379 1681.14 760.379 cv
cp
f
1748.9 749.984 mo
1747.66 749.984 1746.46 749.31 1745.85 748.131 cv
1725.17 708.026 1699.94 647.003 1696.91 636.571 cv
1695.34 631.152 1694.16 625.598 1693.03 620.224 cv
1691.72 614.026 1690.36 607.621 1688.42 601.632 cv
1687.18 597.8 1685.22 594.388 1683.15 590.774 cv
1681.12 587.229 1679.02 583.565 1677.55 579.365 cv
1675.06 572.225 1670.78 552.812 1684.97 526.891 cv
1690.2 517.371 1699.88 506.58 1711.54 497.283 cv
1713.02 496.105 1715.17 496.349 1716.35 497.824 cv
1717.53 499.305 1717.28 501.458 1715.81 502.637 cv
1704.99 511.261 1695.71 521.559 1690.98 530.183 cv
1677.74 554.348 1682.3 572.206 1684.02 577.105 cv
1685.27 580.71 1687.13 583.944 1689.09 587.368 cv
1691.24 591.128 1693.47 595.014 1694.93 599.522 cv
1696.98 605.854 1698.38 612.438 1699.73 618.806 cv
1700.84 624.058 1701.99 629.487 1703.49 634.663 cv
1706.15 643.838 1731.26 704.899 1751.94 744.992 cv
1752.81 746.673 1752.15 748.736 1750.47 749.604 cv
1749.96 749.862 1749.43 749.984 1748.9 749.984 cv
cp
f
1931.16 717.731 mo
1929.84 717.731 1928.59 716.974 1928.03 715.696 cv
1901.81 656.574 1854.53 599.534 1823.24 561.788 cv
1811.5 547.634 1802.23 536.455 1797.23 528.93 cv
1791.56 520.42 1787.83 512.821 1784.53 506.116 cv
1777.79 492.403 1774.09 484.852 1761.31 483.654 cv
1759.42 483.479 1758.04 481.812 1758.21 479.928 cv
1758.39 478.044 1760.07 476.645 1761.94 476.839 cv
1778.54 478.39 1783.64 488.755 1790.68 503.099 cv
1793.88 509.613 1797.5 516.996 1802.92 525.136 cv
1807.74 532.36 1816.9 543.419 1828.5 557.417 cv
1860.04 595.453 1907.69 652.935 1934.29 712.919 cv
1935.05 714.648 1934.27 716.67 1932.54 717.437 cv
1932.09 717.638 1931.62 717.731 1931.16 717.731 cv
cp
f
1676.12 563.395 mo
1675.8 563.395 1675.48 563.351 1675.16 563.257 cv
1653.78 557.016 1621.47 547.58 1617.57 514.183 cv
1616.62 506.014 1616.05 497.664 1615.46 488.821 cv
1614.09 468.528 1612.55 445.53 1605.6 417.561 cv
1601.97 402.949 1597.74 390.448 1593.65 378.358 cv
1586.61 357.526 1580.53 339.534 1580.82 319.391 cv
1581.3 286.582 1593.89 245.249 1620.45 232.022 cv
1643.36 220.601 1670.85 240.428 1686.7 263.668 cv
1697.09 278.916 1699.38 296.661 1701.8 315.447 cv
1702.92 324.21 1704.09 333.271 1706.12 342.672 cv
1712.37 371.776 1718.15 385.87 1731.27 410.98 cv
1735.45 418.984 1744.42 431.053 1752.33 441.698 cv
1756.07 446.733 1759.51 451.374 1762.01 455.003 cv
1762.84 456.195 1763.87 457.459 1764.95 458.779 cv
1769.57 464.442 1776.56 473.004 1769.58 481.236 cv
1768.36 482.679 1766.2 482.858 1764.76 481.635 cv
1763.32 480.414 1763.14 478.254 1764.36 476.81 cv
1767.19 473.461 1765.29 470.029 1759.65 463.107 cv
1758.44 461.637 1757.3 460.221 1756.38 458.891 cv
1753.91 455.315 1750.51 450.743 1746.83 445.781 cv
1738.77 434.931 1729.64 422.633 1725.2 414.152 cv
1712.36 389.577 1705.94 374.413 1699.42 344.112 cv
1697.34 334.43 1696.15 325.224 1695.01 316.323 cv
1692.59 297.593 1690.5 281.417 1681.03 267.523 cv
1666.36 245.994 1641.88 228.995 1623.5 238.152 cv
1599.52 250.1 1588.11 288.69 1587.67 319.488 cv
1587.39 338.455 1593.3 355.931 1600.14 376.165 cv
1604.08 387.816 1608.54 401.023 1612.24 415.908 cv
1619.34 444.467 1620.91 467.786 1622.29 488.362 cv
1622.88 497.117 1623.44 505.388 1624.37 513.39 cv
1627.49 540.07 1651.08 549.094 1677.08 556.686 cv
1678.89 557.214 1679.94 559.115 1679.41 560.93 cv
1678.97 562.426 1677.61 563.395 1676.12 563.395 cv
cp
f
1700.23 474.309 mo
1709.22 488.289 1718.12 496.964 1721.72 497.35 cv
1735.77 498.839 1751.01 488.133 1756.59 479.816 cv
1758.87 476.422 1758.82 474.618 1758.62 474.255 cv
1753.55 464.868 1744.17 452.186 1735.1 439.92 cv
1727.97 430.278 1721.24 421.171 1717.46 414.749 cv
1707.48 397.771 1703.44 386.767 1699.52 376.125 cv
1697.89 371.707 1696.35 367.532 1694.41 362.985 cv
1692.27 357.963 1684.85 358.144 1679.14 359.813 cv
1667.83 363.13 1656.88 373.033 1658.89 384.854 cv
1661.51 400.341 1672.39 426.195 1681.3 442.656 cv
1683.06 445.92 1685.64 450.048 1688.62 454.827 cv
1692.44 460.937 1696.63 467.657 1700.23 474.309 cv
cp
1681.46 546.459 mo
1681.41 546.459 1681.37 546.459 1681.32 546.457 cv
1679.43 546.381 1677.96 544.787 1678.04 542.897 cv
1678.72 526.055 1687.18 518.541 1693.98 512.504 cv
1699.11 507.941 1702.03 505.129 1702.23 500.41 cv
1702.47 494.661 1698.92 486.303 1694.27 477.698 cv
1693.92 477.157 1693.64 476.702 1693.42 476.356 cv
1693.23 476.049 1693.09 475.724 1693 475.392 cv
1689.72 469.512 1686.04 463.616 1682.81 458.453 cv
1679.77 453.576 1677.14 449.366 1675.27 445.915 cv
1667.67 431.863 1655.24 404.313 1652.14 386 cv
1649.47 370.281 1663.07 357.391 1677.21 353.242 cv
1688.3 349.994 1697.51 352.77 1700.72 360.304 cv
1702.72 365.007 1704.36 369.456 1705.94 373.761 cv
1709.76 384.118 1713.7 394.831 1723.37 411.281 cv
1726.96 417.391 1733.59 426.356 1740.61 435.85 cv
1749.82 448.308 1759.35 461.188 1764.65 471.001 cv
1765.89 473.301 1766.49 477.357 1762.28 483.63 cv
1755.79 493.288 1738.71 506.05 1720.99 504.157 cv
1717.22 503.756 1712.91 500.555 1708.82 496.434 cv
1709.04 497.923 1709.13 499.347 1709.07 500.697 cv
1708.74 508.55 1703.55 513.162 1698.52 517.624 cv
1692.09 523.335 1685.44 529.24 1684.88 543.174 cv
1684.81 545.015 1683.29 546.459 1681.46 546.459 cv
cp
f
1642.19 550.027 mo
1641.66 550.027 1641.11 549.902 1640.61 549.638 cv
1637.15 547.823 1633.84 546.196 1630.72 544.665 cv
1615.43 537.146 1603.35 531.206 1600.74 515.786 cv
1599.95 511.183 li
1595.73 486.802 1592.12 462.998 1594.27 453.969 cv
1595.35 449.422 1597.91 446.923 1599.97 444.917 cv
1602.38 442.561 1603.59 441.377 1602.97 437.378 cv
1602.43 433.901 1600.08 429.854 1597.1 424.729 cv
1593.6 418.704 1589.24 411.205 1585.66 400.983 cv
1580.73 386.873 1565.71 343.938 1566.19 310.735 cv
1566.67 277.924 1579.27 236.59 1605.82 223.365 cv
1617.48 217.561 1647.84 208.685 1677.72 251.763 cv
1678.8 253.316 1678.41 255.449 1676.86 256.525 cv
1675.3 257.609 1673.17 257.222 1672.1 255.663 cv
1646.23 218.381 1621.38 223.256 1608.87 229.494 cv
1584.89 241.439 1573.49 280.032 1573.04 310.833 cv
1572.58 342.824 1587.29 384.896 1592.13 398.723 cv
1595.49 408.327 1599.66 415.514 1603.02 421.287 cv
1606.36 427.036 1609 431.574 1609.74 436.328 cv
1610.9 443.815 1607.49 447.144 1604.74 449.818 cv
1602.96 451.56 1601.55 452.937 1600.93 455.552 cv
1598.82 464.458 1604.34 496.382 1606.7 510.015 cv
1607.49 514.646 li
1609.51 526.607 1619.15 531.347 1633.74 538.52 cv
1636.91 540.077 1640.27 541.729 1643.78 543.57 cv
1645.46 544.448 1646.11 546.517 1645.23 548.193 cv
1644.62 549.361 1643.43 550.027 1642.19 550.027 cv
cp
f
1646.14 390.85 mo
1645.71 390.85 1645.29 390.846 1644.86 390.837 cv
1642.97 390.79 1641.48 389.221 1641.52 387.33 cv
1641.57 385.442 1642.95 384.067 1645.03 383.989 cv
1645.4 383.998 1645.77 384.002 1646.14 384.002 cv
1665.61 384.002 1691.15 372.013 1704 360.625 cv
1705.41 359.368 1707.57 359.501 1708.83 360.919 cv
1710.09 362.335 1709.96 364.496 1708.54 365.752 cv
1694.44 378.238 1667.49 390.85 1646.14 390.85 cv
cp
f
1658.27 431.279 mo
1657.14 431.279 1656.03 430.718 1655.38 429.692 cv
1654.36 428.097 1654.83 425.981 1656.43 424.968 cv
1676.04 412.505 1695.96 388.942 1703.8 368.937 cv
1704.49 367.176 1706.48 366.313 1708.24 366.997 cv
1710 367.687 1710.87 369.673 1710.18 371.433 cv
1701.87 392.645 1680.81 417.589 1660.1 430.745 cv
1659.53 431.108 1658.9 431.279 1658.27 431.279 cv
cp
f
1677.51 434.077 mo
1669.04 434.077 1661.5 433.277 1656.5 431.121 cv
1654.76 430.374 1653.96 428.359 1654.71 426.623 cv
1655.46 424.883 1657.48 424.084 1659.21 424.836 cv
1671.33 430.063 1705.53 426.035 1731.14 420.991 cv
1733 420.627 1734.79 421.833 1735.16 423.688 cv
1735.52 425.542 1734.32 427.344 1732.46 427.709 cv
1725.59 429.062 1698.69 434.077 1677.51 434.077 cv
cp
f
1695.6 404.215 mo
1680.95 404.215 1661.95 401.317 1643.84 390.879 cv
1642.2 389.935 1641.64 387.841 1642.58 386.203 cv
1643.53 384.566 1645.62 384.002 1647.26 384.945 cv
1681.22 404.519 1715.78 395.104 1716.13 395 cv
1717.95 394.466 1719.85 395.5 1720.38 397.313 cv
1720.92 399.124 1719.89 401.03 1718.07 401.567 cv
1713.87 402.811 1705.79 404.215 1695.6 404.215 cv
cp
f
1678.39 468.894 mo
1677.62 468.894 1676.84 468.634 1676.2 468.101 cv
1674.74 466.891 1674.55 464.73 1675.76 463.277 cv
1693.45 442.068 1708.77 422.662 1717.22 399.938 cv
1717.88 398.161 1719.83 397.263 1721.62 397.921 cv
1723.39 398.58 1724.29 400.551 1723.64 402.322 cv
1714.81 426.063 1699.12 445.96 1681.02 467.664 cv
1680.34 468.475 1679.37 468.894 1678.39 468.894 cv
cp
f
1683.99 470.746 mo
1682.24 470.746 1680.65 470.688 1679.21 470.572 cv
1677.32 470.421 1675.92 468.77 1676.07 466.884 cv
1676.22 465 1677.92 463.606 1679.76 463.747 cv
1691.88 464.722 1717.45 460.999 1755.76 452.674 cv
1757.62 452.274 1759.43 453.447 1759.83 455.293 cv
1760.24 457.141 1759.07 458.964 1757.22 459.365 cv
1722.08 467.002 1698.01 470.746 1683.99 470.746 cv
cp
f
1696.92 502.231 mo
1696.04 502.231 1695.15 501.891 1694.48 501.208 cv
1693.16 499.859 1693.17 497.692 1694.52 496.366 cv
1694.87 496.021 1729.77 461.534 1738.32 438.526 cv
1738.98 436.752 1740.93 435.858 1742.72 436.509 cv
1744.49 437.169 1745.4 439.14 1744.74 440.911 cv
1735.66 465.351 1700.8 499.795 1699.32 501.248 cv
1698.66 501.903 1697.79 502.231 1696.92 502.231 cv
cp
f
1646.33 386.646 mo
1646.22 386.646 1646.14 386.7 1646.07 386.739 cv
1645.39 387.188 1644.78 388.67 1645.58 390.566 cv
1645.69 390.83 1645.8 391.046 1645.89 391.227 cv
1646 390.995 1646.1 390.726 1646.15 390.436 cv
1646.35 389.263 1647.12 388.334 1648.13 387.883 cv
1647.76 387.705 1647.4 387.455 1647.1 387.135 cv
1646.73 386.751 1646.5 386.646 1646.33 386.646 cv
cp
1645.88 398.683 mo
1644.22 398.683 1641.26 397.947 1639.27 393.224 cv
1637.05 387.966 1639.13 383.096 1642.33 381.005 cv
1645.5 378.947 1649.32 379.505 1652.08 382.431 cv
1653.38 383.807 1653.31 385.973 1651.94 387.272 cv
1651.65 387.547 1651.32 387.761 1650.98 387.912 cv
1652.34 388.552 1653.16 390.039 1652.9 391.59 cv
1652.35 394.795 1649.97 398.248 1646.49 398.646 cv
1646.32 398.667 1646.11 398.683 1645.88 398.683 cv
cp
f
1656.4 424.41 mo
1656.4 424.412 1656.4 424.417 1656.4 424.419 cv
1656.4 424.417 1656.4 424.412 1656.4 424.41 cv
cp
1659.02 438.738 mo
1657.13 438.738 1653.19 437.692 1650.66 429.762 cv
1649.03 424.659 1651.07 422.076 1652.44 420.991 cv
1654.9 419.024 1658.42 419.297 1660.61 420.592 cv
1662.51 421.715 1663.48 423.625 1663.15 425.573 cv
1662.83 427.435 1661.08 428.688 1659.2 428.366 cv
1658.27 428.208 1657.5 427.695 1657 426.993 cv
1657.04 427.188 1657.1 427.415 1657.18 427.68 cv
1657.59 428.975 1658.03 429.927 1658.42 430.604 cv
1658.98 429.093 1660.57 428.15 1662.21 428.425 cv
1664.07 428.745 1665.32 430.518 1665 432.381 cv
1664.04 437.974 1660.44 438.65 1659.36 438.727 cv
1659.26 438.733 1659.15 438.738 1659.02 438.738 cv
cp
f
1676.64 463.957 mo
1676.46 464.369 1676.36 465.158 1676.77 466.311 cv
1677.1 467.223 1677.42 467.934 1677.72 468.479 cv
1677.79 467.525 1677.53 466.571 1677 464.826 cv
1680.28 463.839 li
1677 464.821 li
1676.88 464.42 1676.75 464.142 1676.64 463.957 cv
cp
1678.25 476.733 mo
1678.22 476.733 1678.19 476.731 1678.15 476.731 cv
1675.9 476.691 1672.72 475.254 1670.33 468.634 cv
1669.06 465.118 1669.55 461.585 1671.65 459.189 cv
1673.3 457.301 1675.66 456.47 1677.97 456.971 cv
1680.56 457.533 1682.6 459.673 1683.55 462.842 cv
1683.55 462.845 1683.56 462.852 1683.56 462.852 cv
1684.45 465.82 1685.3 468.624 1683.74 472.496 cv
1682.67 475.153 1680.63 476.733 1678.25 476.733 cv
cp
f
1692.01 498.672 mo
1692.01 498.672 li
1692.01 498.672 li
cp
1695.79 502.724 mo
1695.79 502.724 li
1695.79 502.724 li
cp
1694.79 509.266 mo
1693.35 509.266 1691.32 508.64 1689.58 505.779 cv
1688.27 503.636 1685.64 496.698 1688.78 493.34 cv
1689.54 492.513 1691.74 490.794 1695.46 492.725 cv
1695.46 492.725 li
1699.25 494.699 1700.69 497.18 1701.22 498.917 cv
1701.83 500.869 1701.64 502.978 1700.71 504.698 cv
1700.12 505.8 1698.32 509.168 1694.93 509.264 cv
1694.88 509.264 1694.83 509.266 1694.79 509.266 cv
cp
f
1628.68 576.377 mo
1628.28 576.377 1627.88 576.308 1627.48 576.158 cv
1625.71 575.494 1624.81 573.521 1625.48 571.752 cv
1627.08 567.472 1625.96 562.233 1624.52 555.598 cv
1623.57 551.145 1622.48 546.096 1621.97 540.265 cv
1621.81 538.381 1623.21 536.723 1625.09 536.561 cv
1626.96 536.393 1628.63 537.795 1628.8 539.676 cv
1629.26 545.077 1630.3 549.9 1631.22 554.156 cv
1632.82 561.583 1634.2 567.995 1631.89 574.154 cv
1631.37 575.529 1630.07 576.377 1628.68 576.377 cv
cp
f
1527.84 592.843 mo
1526.76 592.843 1525.7 592.334 1525.03 591.383 cv
1521.18 585.881 1521.45 578.866 1521.79 569.984 cv
1521.85 568.341 1521.92 566.616 1521.96 564.802 cv
1522.24 553.237 1520.92 537.866 1518.76 527.423 cv
1516.43 516.145 1504.59 458.317 1500.46 427.143 cv
1496.83 399.788 1505.64 364.138 1524.04 331.777 cv
1535.5 311.625 1548.14 307.965 1567.69 308.239 cv
1569.58 308.266 1571.09 309.821 1571.06 311.712 cv
1571.03 313.605 1569.48 315.131 1567.59 315.086 cv
1547.39 314.819 1539.02 319.297 1530 335.16 cv
1512.31 366.267 1503.81 400.316 1507.24 426.242 cv
1510.43 450.237 1519.05 494.996 1525.46 526.034 cv
1527.76 537.102 1529.1 552.749 1528.81 564.969 cv
1528.77 566.816 1528.7 568.575 1528.63 570.247 cv
1528.33 578.14 1528.11 583.842 1530.64 587.455 cv
1531.72 589.004 1531.35 591.14 1529.8 592.223 cv
1529.2 592.642 1528.52 592.843 1527.84 592.843 cv
cp
f
1547.74 575.4 mo
1547.57 575.4 1547.4 575.389 1547.23 575.362 cv
1545.36 575.082 1544.07 573.339 1544.35 571.469 cv
1548.46 544.116 1546.36 461.59 1544.91 439.219 cv
1544.52 433.159 1547.43 427.769 1553.11 424.044 cv
1563.08 417.5 1580.01 417.041 1591.64 423.004 cv
1598.14 426.34 1600.36 444.667 1601.01 452.391 cv
1601.17 454.274 1599.77 455.931 1597.89 456.089 cv
1596.05 456.247 1594.35 454.852 1594.19 452.966 cv
1593.23 441.662 1590.57 430.5 1588.49 429.077 cv
1579.04 424.238 1564.84 424.534 1556.87 429.771 cv
1553.24 432.151 1551.52 435.183 1551.74 438.778 cv
1553.2 461.331 1555.3 544.665 1551.12 572.484 cv
1550.87 574.184 1549.41 575.4 1547.74 575.4 cv
cp
f
1615.33 570.766 mo
1613.69 570.766 1612.24 569.589 1611.96 567.92 cv
1611.01 562.392 1608.53 547.478 1605.89 528.455 cv
1605.64 526.583 1606.95 524.855 1608.82 524.595 cv
1610.66 524.352 1612.42 525.645 1612.68 527.52 cv
1615.3 546.441 1617.77 561.269 1618.71 566.766 cv
1619.03 568.629 1617.78 570.398 1615.91 570.717 cv
1615.72 570.751 1615.52 570.766 1615.33 570.766 cv
cp
f
1583.6 583.654 mo
1575.44 583.654 1566.77 582.7 1560.26 580.084 cv
1547.83 575.102 1546.83 562.176 1546.03 551.788 cv
1545.89 549.902 1547.3 548.258 1549.18 548.112 cv
1551.05 547.93 1552.72 549.374 1552.86 551.263 cv
1553.75 562.779 1554.92 570.565 1562.81 573.729 cv
1576.11 579.076 1599.95 576.174 1603.65 574.368 cv
1609.93 571.299 1610.36 568.415 1610.58 563.577 cv
1610.57 562.68 1609.81 556.628 1609.08 551.338 cv
1608.82 549.466 1610.13 547.738 1612.01 547.48 cv
1613.9 547.253 1615.61 548.532 1615.87 550.406 cv
1616.61 555.827 1617.49 562.567 1617.42 563.9 cv
1617.14 570.022 1616.1 575.901 1606.66 580.521 cv
1603.35 582.137 1593.88 583.654 1583.6 583.654 cv
cp
f
1504.02 432.247 mo
1502.35 432.247 1500.9 431.03 1500.64 429.331 cv
1491.5 368.542 1503.13 343.462 1519.28 316.994 cv
1529.56 300.137 1544.67 292.82 1568.43 293.11 cv
1570.32 293.138 1571.83 294.693 1571.81 296.583 cv
1571.78 298.478 1570.42 300.045 1568.34 299.958 cv
1547.12 299.646 1534.13 305.813 1525.13 320.561 cv
1509.71 345.826 1498.61 369.804 1507.41 428.315 cv
1507.69 430.183 1506.41 431.929 1504.53 432.209 cv
1504.36 432.236 1504.19 432.247 1504.02 432.247 cv
cp
f
1534.28 439.999 mo
1534.22 439.999 1534.17 440.011 1534.13 440.021 cv
1533.33 440.216 1532.27 441.415 1532.39 443.47 cv
1532.4 443.756 1532.43 443.996 1532.46 444.197 cv
1532.65 444.014 1532.83 443.789 1532.97 443.528 cv
1533.55 442.494 1534.58 441.877 1535.69 441.785 cv
1535.38 441.491 1535.13 441.137 1534.95 440.73 cv
1534.68 440.111 1534.45 439.999 1534.28 439.999 cv
cp
1531.86 451.537 mo
1531.43 451.537 1531 451.492 1530.56 451.392 cv
1529.18 451.075 1525.9 449.709 1525.55 443.885 cv
1525.21 438.176 1528.79 434.275 1532.51 433.368 cv
1536.19 432.465 1539.58 434.277 1541.21 437.953 cv
1541.98 439.683 1541.2 441.705 1539.47 442.472 cv
1539.11 442.632 1538.74 442.726 1538.37 442.755 cv
1539.43 443.809 1539.72 445.489 1538.95 446.867 cv
1537.57 449.344 1534.81 451.537 1531.86 451.537 cv
cp
f
1531.37 478.991 mo
1531.36 478.993 1531.36 478.996 1531.36 478.998 cv
1531.36 478.996 1531.36 478.993 1531.37 478.991 cv
cp
1530.78 493.651 mo
1530.18 493.651 1529.69 493.552 1529.41 493.474 cv
1527.75 493.014 1523.91 490.99 1524.17 482.121 cv
1524.33 476.773 1527.11 475.015 1528.75 474.442 cv
1531.75 473.403 1534.97 474.827 1536.6 476.776 cv
1538.03 478.466 1538.31 480.588 1537.35 482.317 cv
1536.43 483.967 1534.34 484.566 1532.69 483.648 cv
1531.87 483.191 1531.31 482.446 1531.07 481.61 cv
1531.04 481.809 1531.03 482.045 1531.02 482.324 cv
1530.98 483.686 1531.07 484.731 1531.21 485.498 cv
1532.24 484.252 1534.05 483.88 1535.51 484.697 cv
1537.16 485.621 1537.75 487.704 1536.84 489.356 cv
1534.83 492.956 1532.37 493.651 1530.78 493.651 cv
cp
f
1537.04 523.194 mo
1536.76 523.556 1536.47 524.301 1536.61 525.524 cv
1536.72 526.482 1536.86 527.247 1537.02 527.845 cv
1537.32 526.922 1537.28 525.916 1537.18 524.126 cv
1537.16 523.705 1537.1 523.404 1537.04 523.194 cv
cp
1536.83 536.144 mo
1536.39 536.144 1535.95 536.088 1535.52 535.974 cv
1533.33 535.405 1530.57 533.261 1529.81 526.269 cv
1529.4 522.551 1530.71 519.231 1533.3 517.393 cv
1535.35 515.953 1537.84 515.696 1539.96 516.718 cv
1542.35 517.869 1543.83 520.427 1544.02 523.734 cv
1544.02 523.736 1544.02 523.747 1544.02 523.75 cv
1544.19 526.842 1544.35 529.762 1541.94 533.161 cv
1540.57 535.089 1538.73 536.144 1536.83 536.144 cv
cp
f
1540.31 560.858 mo
1540.31 560.858 li
1540.31 560.858 li
cp
1541.09 572.055 mo
1540.59 572.055 1540.07 571.981 1539.55 571.812 cv
1538.16 571.37 1536.37 570.134 1535.65 566.752 cv
1535.13 564.289 1534.97 556.875 1539.03 554.753 cv
1540.02 554.231 1542.67 553.336 1545.53 556.392 cv
1548.46 559.508 1548.99 562.322 1548.92 564.135 cv
1548.85 566.175 1547.97 568.103 1546.53 569.422 cv
1545.75 570.131 1543.65 572.055 1541.09 572.055 cv
cp
f
1544.09 565.887 mo
1542.77 565.887 1541.52 565.125 1540.96 563.845 cv
1540.19 562.113 1540.98 560.094 1542.71 559.332 cv
1565.56 549.259 1592.27 529.115 1602.69 520.921 cv
1604.19 519.753 1606.33 520.015 1607.5 521.499 cv
1608.67 522.985 1608.41 525.139 1606.93 526.307 cv
1596.3 534.659 1569.03 555.208 1545.47 565.595 cv
1545.02 565.793 1544.55 565.887 1544.09 565.887 cv
cp
f
1618.11 564.017 mo
1617.62 564.017 1617.1 563.943 1616.57 563.773 cv
1615.19 563.332 1613.4 562.096 1612.68 558.721 cv
1612.16 556.253 1611.99 548.835 1616.06 546.713 cv
1617.07 546.189 1619.7 545.312 1622.56 548.352 cv
1625.48 551.468 1626.02 554.285 1625.95 556.098 cv
1625.87 558.142 1625 560.069 1623.55 561.389 cv
1622.78 562.098 1620.67 564.017 1618.11 564.017 cv
cp
f
1538.06 529.271 mo
1536.74 529.271 1535.49 528.509 1534.92 527.227 cv
1534.16 525.497 1534.95 523.479 1536.67 522.714 cv
1559.53 512.643 1586.24 492.499 1596.67 484.306 cv
1598.16 483.138 1600.31 483.398 1601.48 484.883 cv
1602.64 486.37 1602.39 488.522 1600.9 489.69 cv
1590.27 498.043 1563 518.594 1539.44 528.981 cv
1538.99 529.178 1538.52 529.271 1538.06 529.271 cv
cp
f
1530.25 489.31 mo
1528.93 489.31 1527.68 488.547 1527.11 487.268 cv
1526.35 485.538 1527.14 483.517 1528.87 482.754 cv
1552.5 472.331 1596.03 438.361 1600.91 434.521 cv
1602.4 433.349 1604.55 433.608 1605.72 435.098 cv
1606.89 436.585 1606.63 438.738 1605.15 439.906 cv
1600.19 443.8 1556.03 478.258 1531.63 489.018 cv
1531.18 489.216 1530.71 489.31 1530.25 489.31 cv
cp
f
1618.65 559.117 mo
1606.22 559.117 1547.6 534.986 1537.04 524.987 cv
1535.67 523.688 1535.61 521.519 1536.91 520.148 cv
1538.21 518.772 1540.38 518.722 1541.75 520.017 cv
1553.5 531.144 1611.52 551.974 1618.18 552.415 cv
1619.67 552.096 1621.24 552.816 1621.94 554.238 cv
1622.79 555.93 1622.1 557.985 1620.41 558.83 cv
1620.02 559.024 1619.42 559.117 1618.65 559.117 cv
cp
f
1602.57 514.725 mo
1590.35 514.725 1539.06 493.863 1528.79 484.129 cv
1527.41 482.83 1527.35 480.663 1528.65 479.29 cv
1529.95 477.91 1532.12 477.861 1533.49 479.159 cv
1544.81 489.876 1595.53 507.779 1602.23 508.004 cv
1603.75 507.635 1605.36 508.352 1606.09 509.801 cv
1606.94 511.493 1606.25 513.55 1604.56 514.395 cv
1604.12 514.617 1603.44 514.725 1602.57 514.725 cv
cp
f
1595.94 469.479 mo
1583.38 469.479 1537.78 449.782 1528.79 441.261 cv
1527.41 439.962 1527.35 437.795 1528.65 436.422 cv
1529.95 435.042 1532.12 434.993 1533.49 436.29 cv
1545.16 447.347 1590.19 462.56 1595.93 462.697 cv
1597.46 462.292 1599.1 463.014 1599.84 464.482 cv
1600.69 466.175 1600 468.229 1598.31 469.077 cv
1597.76 469.351 1596.96 469.479 1595.94 469.479 cv
cp
f
1547.63 445.055 mo
1542.13 445.055 1536.38 444.884 1530.46 444.482 cv
1528.57 444.354 1527.14 442.724 1527.27 440.835 cv
1527.4 438.945 1529.03 437.539 1530.92 437.65 cv
1570.15 440.303 1602.32 432.409 1602.64 432.33 cv
1604.49 431.877 1606.34 432.987 1606.79 434.819 cv
1607.25 436.653 1606.14 438.513 1604.31 438.972 cv
1603.16 439.26 1579.6 445.055 1547.63 445.055 cv
cp
f
1281.47 1482.13 mo
1280.88 1482.13 1280.28 1481.98 1279.75 1481.67 cv
1278.97 1481.21 1278.4 1480.46 1278.16 1479.59 cv
1196.69 1172.8 li
1196.21 1170.97 1197.29 1169.1 1199.12 1168.61 cv
1423.69 1108.83 li
1424.57 1108.6 1425.51 1108.72 1426.29 1109.18 cv
1427.08 1109.63 1427.65 1110.38 1427.88 1111.26 cv
1446.82 1182.6 li
1447.31 1184.43 1446.22 1186.3 1444.39 1186.79 cv
1442.58 1187.3 1440.69 1186.18 1440.21 1184.36 cv
1422.14 1116.33 li
1204.19 1174.35 li
1283.9 1474.52 li
1454.74 1429.04 li
1456.55 1428.55 1458.44 1429.64 1458.93 1431.47 cv
1459.41 1433.3 1458.33 1435.17 1456.5 1435.66 cv
1282.35 1482.02 li
1282.06 1482.09 1281.77 1482.13 1281.47 1482.13 cv
cp
.682353 .686275 .737255 rgb
f
1231.21 1393.68 mo
1230.79 1393.68 1230.35 1393.6 1229.92 1393.43 cv
1102.97 1341.69 li
1101.22 1340.97 1100.38 1338.98 1101.09 1337.22 cv
1101.8 1335.47 1103.8 1334.63 1105.56 1335.35 cv
1229.35 1385.8 li
1243.51 1351.35 li
1244.23 1349.6 1246.22 1348.75 1247.98 1349.47 cv
1249.73 1350.18 1250.57 1352.18 1249.85 1353.93 cv
1234.38 1391.56 li
1233.84 1392.88 1232.56 1393.68 1231.21 1393.68 cv
cp
f
1336.38 1137.88 mo
1335.94 1137.88 1335.49 1137.8 1335.06 1137.61 cv
1333.31 1136.89 1332.49 1134.88 1333.22 1133.14 cv
1347.43 1098.57 li
1158.69 1022.99 li
1156.94 1022.28 1156.08 1020.29 1156.78 1018.54 cv
1157.49 1016.77 1159.49 1015.94 1161.24 1016.63 cv
1353.18 1093.49 li
1354.03 1093.83 1354.71 1094.5 1355.07 1095.34 cv
1355.42 1096.18 1355.42 1097.13 1355.08 1097.97 cv
1339.54 1135.78 li
1338.99 1137.09 1337.71 1137.88 1336.38 1137.88 cv
cp
f
1486.29 1009.82 mo
1486 1009.82 1485.7 1009.79 1485.4 1009.71 cv
1260.96 949.468 li
1260.08 949.231 1259.34 948.656 1258.88 947.872 cv
1258.43 947.082 1258.31 946.146 1258.54 945.268 cv
1341.01 638.744 li
1341.5 636.921 1343.4 635.836 1345.2 636.328 cv
1532.52 686.607 li
1534.35 687.098 1535.43 688.978 1534.94 690.803 cv
1534.45 692.631 1532.57 693.721 1530.74 693.219 cv
1346.73 643.826 li
1266.04 943.739 li
1484.12 1002.27 li
1484.94 1001.19 1486.35 1000.65 1487.74 1001.03 cv
1489.57 1001.52 1490.65 1003.41 1490.15 1005.23 cv
1489.59 1007.29 li
1489.18 1008.82 1487.8 1009.82 1486.29 1009.82 cv
cp
f
1100.59 765.527 mo
1099.14 765.527 1097.79 764.603 1097.33 763.149 cv
1051.54 620.353 li
1050.96 618.554 1051.96 616.626 1053.75 616.049 cv
1275.01 544.961 li
1275.87 544.674 1276.81 544.756 1277.62 545.175 cv
1278.43 545.59 1279.04 546.31 1279.31 547.175 cv
1329.79 704.589 li
1330.36 706.39 1329.37 708.318 1327.57 708.896 cv
1325.77 709.479 1323.84 708.48 1323.26 706.68 cv
1273.84 552.528 li
1059.11 621.521 li
1103.85 761.059 li
1104.43 762.859 1103.43 764.788 1101.63 765.365 cv
1101.29 765.477 1100.93 765.527 1100.59 765.527 cv
cp
f
1214.75 904.747 mo
1213.3 904.747 1211.96 903.826 1211.49 902.38 cv
1210.91 900.581 1211.89 898.65 1213.69 898.066 cv
1277.08 877.7 li
1278.9 877.136 1280.93 878.086 1281.5 879.882 cv
1282.07 881.681 1281.21 883.566 1279.41 884.145 cv
1215.8 904.58 li
1215.45 904.693 1215.1 904.747 1214.75 904.747 cv
cp
f
348.677 1090.64 mo
348.137 1090.64 347.6 1090.51 347.111 1090.26 cv
346.303 1089.85 345.694 1089.13 345.415 1088.26 cv
248.5 785.997 li
247.923 784.196 248.916 782.27 250.714 781.692 cv
471.965 710.611 li
472.827 710.326 473.768 710.409 474.577 710.826 cv
475.387 711.24 475.995 711.96 476.273 712.825 cv
556.645 963.501 li
557.22 965.298 556.279 967.362 554.482 967.941 cv
552.663 968.534 550.803 967.674 550.219 965.886 cv
470.799 718.177 li
256.066 787.165 li
350.89 1082.91 li
541.369 1021.72 li
543.182 1021.14 545.099 1022.14 545.674 1023.93 cv
546.249 1025.74 545.257 1027.66 543.455 1028.24 cv
541.142 1028.98 li
349.725 1090.48 li
349.383 1090.59 349.028 1090.64 348.677 1090.64 cv
cp
f
467.266 1096.8 mo
466.13 1096.8 465.013 1096.27 464.37 1095.27 cv
463.353 1093.68 463.704 1091.64 465.289 1090.62 cv
501.278 1067.71 li
487.169 1045.51 li
486.144 1043.93 486.599 1041.81 488.186 1040.78 cv
489.777 1039.76 491.89 1040.21 492.92 1041.8 cv
508.893 1066.92 li
509.907 1068.52 509.437 1070.63 507.843 1071.65 cv
469.198 1096.24 li
468.61 1096.62 467.935 1096.8 467.266 1096.8 cv
cp
f
309.958 1196.97 mo
309.711 1196.97 309.461 1196.94 309.216 1196.89 cv
308.329 1196.69 307.556 1196.15 307.069 1195.38 cv
136.785 927.494 li
135.771 925.898 136.241 923.785 137.834 922.769 cv
267.2 840.427 li
268.792 839.415 270.909 839.892 271.925 841.488 cv
272.937 843.086 272.46 845.201 270.864 846.213 cv
270.354 846.536 li
144.399 926.709 li
311.011 1188.81 li
392.02 1137.25 li
393.615 1136.24 395.727 1136.7 396.747 1138.3 cv
397.762 1139.9 397.291 1142.01 395.697 1143.03 cv
311.798 1196.43 li
311.242 1196.78 310.604 1196.97 309.958 1196.97 cv
cp
f
410.112 1473.31 mo
409.299 1473.31 408.482 1473.02 407.83 1472.44 cv
234.785 1317.32 li
234.108 1316.72 233.7 1315.87 233.651 1314.96 cv
233.602 1314.05 233.916 1313.17 234.522 1312.49 cv
446.536 1076.25 li
447.796 1074.84 449.958 1074.72 451.369 1075.99 cv
524.585 1141.62 li
525.996 1142.88 526.118 1145.04 524.859 1146.45 cv
523.598 1147.85 521.438 1147.99 520.024 1146.73 cv
449.347 1083.37 li
241.907 1314.51 li
409.852 1465.06 li
455.076 1414.67 li
456.335 1413.26 458.502 1413.14 459.91 1414.41 cv
461.317 1415.67 461.436 1417.83 460.171 1419.24 cv
412.662 1472.18 li
411.986 1472.93 411.053 1473.31 410.112 1473.31 cv
cp
f
2259.28 1296.5 mo
2258.67 1296.5 2258.05 1296.34 2257.49 1295.99 cv
2134.04 1220.01 li
2132.42 1219.03 2131.91 1216.92 2132.89 1215.3 cv
2133.88 1213.69 2135.98 1213.18 2137.6 1214.16 cv
2143.7 1217.91 li
2258.16 1288.37 li
2421.11 1023.97 li
2229.04 905.755 li
2116.74 1087.97 li
2115.75 1089.58 2113.65 1090.08 2112.03 1089.09 cv
2110.42 1088.1 2109.92 1085.99 2110.91 1084.38 cv
2225.01 899.248 li
2226 897.641 2228.1 897.133 2229.72 898.129 cv
2427.62 1019.94 li
2428.39 1020.42 2428.95 1021.18 2429.16 1022.06 cv
2429.36 1022.95 2429.22 1023.88 2428.74 1024.65 cv
2262.2 1294.87 li
2261.55 1295.92 2260.43 1296.5 2259.28 1296.5 cv
cp
.752941 .760784 .811765 rgb
f
2331.12 1359.43 mo
2330.65 1359.43 2330.17 1359.33 2329.73 1359.13 cv
2328.9 1358.76 2328.25 1358.08 2327.92 1357.23 cv
2286.08 1248.34 li
2285.4 1246.58 2286.21 1244.47 2287.97 1243.78 cv
2289.73 1243.09 2291.64 1243.81 2292.33 1245.55 cv
2333.08 1351.58 li
2543.57 1270.54 li
2432.15 980.638 li
2385.87 998.452 li
2384.11 999.13 2382.13 998.251 2381.45 996.486 cv
2380.77 994.721 2381.65 992.741 2383.41 992.059 cv
2432.88 973.015 li
2433.73 972.693 2434.68 972.712 2435.5 973.081 cv
2436.33 973.451 2436.98 974.134 2437.31 974.98 cv
2551.18 1271.27 li
2551.86 1273.04 2550.98 1275.02 2549.22 1275.7 cv
2332.35 1359.2 li
2331.95 1359.35 2331.53 1359.43 2331.12 1359.43 cv
cp
f
2166.8 1003.12 mo
2165.1 1003.12 2163.62 1001.85 2163.4 1000.12 cv
2134.18 770.095 li
2133.95 768.219 2135.27 766.507 2137.15 766.266 cv
2367.67 736.845 li
2368.57 736.738 2369.48 736.98 2370.19 737.534 cv
2370.91 738.091 2371.38 738.909 2371.5 739.81 cv
2403 987.793 li
2403.24 989.661 2401.93 991.476 2400.07 991.721 cv
2398.17 991.966 2396.49 990.753 2396.24 988.89 cv
2393.29 965.752 li
2365.13 744.071 li
2141.41 772.625 li
2170.2 999.259 li
2170.43 1001.14 2169.11 1002.85 2167.23 1003.09 cv
2167.09 1003.11 2166.94 1003.12 2166.8 1003.12 cv
cp
f
2140.25 1247 mo
2138.55 1247 2137.07 1245.72 2136.86 1243.98 cv
2136.66 1242.34 2136.4 1241.25 2136.38 1241.15 cv
2083.52 933.329 li
2083.14 931.052 2081.42 924.623 2078.08 922.028 cv
2074.83 919.496 2068.8 919.75 2066.74 920.058 cv
2014.49 929.027 li
2012.67 929.375 2010.86 928.096 2010.54 926.228 cv
2010.23 924.364 2011.48 922.595 2013.34 922.278 cv
2065.64 913.3 li
2066.75 913.13 2076.12 911.833 2082.28 916.621 cv
2088.34 921.324 2090.09 931.096 2090.27 932.197 cv
2143.07 1239.71 li
2143.08 1239.73 2143.41 1241.12 2143.66 1243.17 cv
2143.88 1245.05 2142.54 1246.75 2140.66 1246.98 cv
2140.53 1246.99 2140.39 1247 2140.25 1247 cv
cp
.356863 .152941 .0784314 rgb
f
1563.04 1365.83 mo
1558.73 1365.83 1553.62 1365.13 1549.72 1362.48 cv
1541.67 1357.01 1540.25 1343.98 1540.19 1343.43 cv
1487.2 1035.36 li
1486.98 1034.45 1484.9 1024.67 1489.38 1018.16 cv
1493.83 1011.71 1503.88 1009.77 1505.01 1009.58 cv
1554.21 1001.13 li
1556.01 1000.79 1557.84 1002.02 1558.19 1003.85 cv
1558.54 1005.68 1557.4 1007.45 1555.57 1007.84 cv
1506.18 1016.32 li
1503.91 1016.73 1497.42 1018.56 1495.02 1022.04 cv
1492.67 1025.47 1493.42 1031.85 1493.91 1034.01 cv
1546.97 1342.5 li
1547.31 1345.62 1549.09 1353.77 1553.57 1356.82 cv
1558.14 1359.92 1567.11 1358.92 1570.18 1358.28 cv
1572.02 1357.86 1573.85 1359.06 1574.24 1360.92 cv
1574.63 1362.76 1573.46 1364.58 1571.61 1364.97 cv
1570.9 1365.12 1567.37 1365.83 1563.04 1365.83 cv
cp
f
1502.6 1014.83 mo
1499.74 1014.83 1496.21 1014.52 1493.25 1013.32 cv
1487.01 1010.76 1484.08 1004.53 1483.96 1004.27 cv
1379.5 835.044 li
1378.99 834.224 1374.37 826.618 1376.94 820.515 cv
1379.74 813.853 1390.29 812.294 1391.48 812.139 cv
2098.02 690.299 li
2098.84 690.099 2107.91 688.132 2111.66 694.38 cv
2114.87 699.696 2113.45 706.312 2113.28 707.048 cv
2077.88 902.858 li
2077.85 903.063 2076.71 910.196 2071.05 914.65 cv
2065.84 918.752 2057.36 920.147 2056.41 920.294 cv
2014.36 927.512 li
2012.48 927.833 2010.65 926.598 2010.32 924.743 cv
2010 922.889 2011.15 921.132 2013 920.798 cv
2055.32 913.533 li
2057.47 913.199 2063.6 911.802 2066.82 909.271 cv
2070.31 906.52 2071.11 901.785 2071.12 901.737 cv
2106.58 705.661 li
2106.89 704.239 2107.3 700.405 2105.8 697.911 cv
2104.91 696.431 2101.19 696.589 2099.39 697.006 cv
1392.51 818.908 li
1389.24 819.349 1384.17 820.987 1383.25 823.168 cv
1382.31 825.4 1384.23 829.694 1385.32 831.426 cv
1489.98 1001.03 li
1490.19 1001.42 1492.14 1005.46 1495.84 1006.98 cv
1499.29 1008.38 1504.93 1007.99 1506.82 1007.72 cv
1553.68 999.674 li
1554.96 1006.41 li
1507.89 1014.49 li
1507.41 1014.55 1505.3 1014.83 1502.6 1014.83 cv
cp
f
1537.99 783.71 mo
1536.41 783.71 1534.99 782.611 1534.65 781.004 cv
1530.04 759.498 1530.97 740.719 1531.72 725.633 cv
1532.07 718.484 1532.38 712.313 1532.1 706.809 cv
1531.7 699.173 1530.3 687.934 1527.61 681.396 cv
1524.83 674.669 1522.21 667.315 1521.79 659.129 cv
1521.52 653.866 1522.2 648.944 1522.86 644.184 cv
1523.52 639.368 1524.14 634.819 1523.82 630.082 cv
1523.61 627.073 1523.1 623.984 1522.56 620.714 cv
1521.11 611.97 1519.61 602.927 1523.81 594.265 cv
1529.54 582.406 1538.69 573.408 1550.99 567.519 cv
1552.7 566.7 1554.75 567.425 1555.56 569.128 cv
1556.38 570.833 1555.65 572.877 1553.95 573.693 cv
1543.08 578.897 1535.01 586.821 1529.97 597.247 cv
1526.72 603.952 1527.98 611.55 1529.32 619.597 cv
1529.86 622.881 1530.42 626.277 1530.65 629.612 cv
1531.03 635.053 1530.32 640.169 1529.64 645.117 cv
1529 649.769 1528.39 654.162 1528.63 658.776 cv
1528.98 665.534 1531 671.664 1533.94 678.79 cv
1536.95 686.122 1538.5 697.891 1538.94 706.459 cv
1539.23 712.308 1538.9 718.943 1538.56 725.972 cv
1537.83 740.659 1536.92 758.938 1541.34 779.568 cv
1541.74 781.416 1540.56 783.237 1538.71 783.634 cv
1538.47 783.685 1538.23 783.71 1537.99 783.71 cv
cp
f
1146.7 997.159 mo
1144.03 997.159 1141.96 996.888 1141.53 996.825 cv
1094.49 988.747 li
1095.59 981.984 li
1097.43 982.305 li
1142.6 990.062 li
1144.39 990.316 1150.06 990.695 1153.49 989.295 cv
1157.18 987.784 1159.14 983.74 1159.16 983.7 cv
1264 813.771 li
1265.09 812.019 1267.01 807.723 1266.08 805.489 cv
1265.16 803.312 1260.09 801.674 1256.95 801.252 cv
550.141 679.374 li
548.139 678.913 544.416 678.748 543.527 680.232 cv
542.024 682.729 542.431 686.561 542.713 687.827 cv
578.184 883.966 li
578.206 884.086 579.021 888.846 582.51 891.596 cv
585.746 894.139 591.869 895.527 593.956 895.849 cv
636.124 903.089 li
637.977 903.407 639.314 905.173 639.009 907.029 cv
638.708 908.886 637.074 910.166 635.188 909.873 cv
592.857 902.606 li
591.968 902.471 583.488 901.073 578.275 896.977 cv
572.622 892.521 571.477 885.393 571.432 885.092 cv
536.009 689.197 li
535.87 688.629 534.459 682.022 537.658 676.706 cv
541.419 670.445 550.506 672.432 551.522 672.672 cv
1257.98 794.482 li
1259.04 794.618 1269.59 796.177 1272.39 802.837 cv
1274.95 808.942 1270.34 816.548 1269.81 817.395 cv
1165.17 986.95 li
1165.17 986.95 li
1165.2 986.95 1162.26 993.103 1156.08 995.635 cv
1153.1 996.848 1149.56 997.159 1146.7 997.159 cv
cp
f
1086.28 1348.15 mo
1081.95 1348.15 1078.43 1347.45 1077.72 1347.3 cv
1053.57 1343.11 li
1051.7 1342.78 1050.46 1341 1050.78 1339.14 cv
1051.1 1337.28 1052.88 1336.06 1054.74 1336.36 cv
1079.02 1340.58 li
1082.22 1341.25 1091.18 1342.25 1095.76 1339.14 cv
1100.24 1336.09 1102.02 1327.94 1102.32 1325.05 cv
1155.38 1016.52 li
1155.91 1014.17 1156.66 1007.8 1154.3 1004.36 cv
1151.9 1000.89 1145.42 999.054 1143.13 998.639 cv
1093.96 990.195 li
1092.1 989.875 1090.81 988.104 1091.12 986.246 cv
1091.44 984.392 1093.16 983.135 1095.01 983.429 cv
1144.31 991.895 li
1145.45 992.095 1155.5 994.029 1159.94 1000.48 cv
1164.42 1007 1162.35 1016.77 1162.09 1017.87 cv
1109.1 1325.99 li
1109.07 1326.31 1107.66 1339.33 1099.61 1344.8 cv
1095.7 1347.45 1090.59 1348.15 1086.28 1348.15 cv
cp
f
1269.19 813.879 mo
1268.83 813.879 1268.47 813.821 1268.11 813.703 cv
1266.32 813.11 1265.35 811.173 1265.94 809.379 cv
1266.97 806.243 1267.98 800.766 1266.99 798.405 cv
1266.08 796.221 1261.01 794.583 1257.86 794.162 cv
551.052 672.284 li
550.911 672.253 546.017 671.395 544.452 674.139 cv
542.045 678.358 542.212 681.452 542.359 684.183 cv
542.459 686.072 541.013 687.685 539.125 687.787 cv
537.128 687.885 535.623 686.438 535.521 684.553 cv
535.354 681.43 535.1 676.713 538.505 670.746 cv
541.742 665.066 548.723 664.813 552.325 665.557 cv
1258.9 787.393 li
1259.95 787.527 1270.51 789.091 1273.3 795.753 cv
1275.68 801.403 1272.78 810.516 1272.44 811.536 cv
1271.96 812.973 1270.62 813.879 1269.19 813.879 cv
cp
f
592.543 1263.5 mo
592.277 1263.5 592.01 1263.47 591.747 1263.41 cv
527.821 1252.13 li
526.522 1251.96 513.757 1250.04 508.199 1242.41 cv
502.469 1234.54 505.531 1221.8 505.665 1221.27 cv
559.79 913.389 li
559.895 912.464 561.243 902.551 567.665 897.939 cv
574.02 893.363 584.131 894.938 585.261 895.131 cv
634.424 903.788 li
636.28 904.114 637.566 905.886 637.247 907.745 cv
636.932 909.602 635.22 910.854 633.349 910.552 cv
584.088 901.878 li
581.811 901.492 575.09 901.033 571.662 903.498 cv
568.277 905.929 566.833 912.188 566.562 914.392 cv
512.361 1222.68 li
511.626 1225.73 510.542 1234 513.734 1238.38 cv
516.991 1242.85 525.771 1244.94 528.878 1245.36 cv
592.955 1256.67 li
593.343 1256.74 593.894 1256.9 594.234 1257.1 cv
595.877 1258.04 596.455 1260.13 595.516 1261.77 cv
594.884 1262.88 593.73 1263.5 592.543 1263.5 cv
cp
f
450.397 1480.4 mo
450.279 1480.4 450.158 1480.4 450.038 1480.38 cv
448.157 1480.19 446.793 1478.5 446.986 1476.63 cv
455.323 1396.44 472.473 1352.73 479.461 1337.67 cv
482.838 1330.4 493.883 1331.33 513.935 1333 cv
521.77 1333.66 530.647 1334.41 540.915 1334.86 cv
542.805 1334.94 544.27 1336.54 544.187 1338.43 cv
544.104 1340.31 542.589 1341.83 540.616 1341.7 cv
530.213 1341.24 521.259 1340.49 513.362 1339.83 cv
499.816 1338.69 487.035 1337.62 485.671 1340.55 cv
478.83 1355.31 462.025 1398.17 453.799 1477.33 cv
453.616 1479.09 452.129 1480.4 450.397 1480.4 cv
cp
f
565.11 567.334 mo
566.394 565.261 567.206 562.919 567.548 560.317 cv
567.891 557.72 567.79 554.784 567.252 551.512 cv
566.571 547.403 565.315 543.947 563.49 541.158 cv
561.664 538.364 559.391 536.396 556.67 535.26 cv
553.949 534.123 550.991 533.817 547.8 534.347 cv
545.526 534.722 543.5 535.497 541.71 536.675 cv
539.926 537.849 538.469 539.368 537.351 541.231 cv
536.228 543.098 535.475 545.367 535.091 548.042 cv
534.708 550.717 534.78 553.634 535.301 556.802 cv
536.374 563.262 538.702 567.986 542.295 570.977 cv
545.883 573.962 549.978 575.076 554.574 574.313 cv
556.465 573.998 558.341 573.282 560.198 572.163 cv
558.852 571.465 557.204 570.821 555.255 570.228 cv
553.306 569.63 551.959 569.146 551.215 568.767 cv
550.471 568.393 550.027 567.758 549.877 566.863 cv
549.749 566.102 549.959 565.371 550.498 564.677 cv
551.041 563.983 551.694 563.572 552.461 563.449 cv
554.784 563.061 559.003 564.357 565.11 567.334 cv
cp
575.063 572.063 mo
576.906 572.912 578.901 573.702 581.042 574.437 cv
583.184 575.172 584.626 575.797 585.37 576.317 cv
586.109 576.838 586.575 577.674 586.767 578.824 cv
586.903 579.641 586.662 580.521 586.041 581.462 cv
585.425 582.402 584.58 582.964 583.508 583.143 cv
582.64 583.284 581.54 583.179 580.207 582.822 cv
578.874 582.467 577.285 581.887 575.432 581.093 cv
573.583 580.298 571.543 579.349 569.314 578.249 cv
565.928 580.75 561.536 582.448 556.149 583.343 cv
551.78 584.064 547.754 584.014 544.062 583.197 cv
540.373 582.38 537.136 580.855 534.352 578.628 cv
531.566 576.396 529.284 573.583 527.499 570.178 cv
525.719 566.772 524.473 562.951 523.774 558.71 cv
523.058 554.396 523.021 550.334 523.665 546.531 cv
524.309 542.724 525.596 539.359 527.526 536.442 cv
529.458 533.525 531.996 531.119 535.146 529.221 cv
538.296 527.321 542.012 526.016 546.303 525.309 cv
552.128 524.341 557.322 524.696 561.888 526.367 cv
566.452 528.038 570.169 530.873 573.035 534.872 cv
575.902 538.871 577.819 543.806 578.792 549.681 cv
580.271 558.592 579.024 566.056 575.063 572.063 cv
cp
ef
1358.48 523.066 mo
1368.74 513.457 li
1337.15 479.75 li
1335.33 477.81 1334.41 475.961 1334.4 474.212 cv
1334.38 472.464 1335.06 470.943 1336.43 469.661 cv
1337.82 468.355 1339.4 467.767 1341.17 467.895 cv
1342.94 468.022 1344.72 469.049 1346.52 470.967 cv
1378.11 504.679 li
1388.36 495.065 li
1389.97 493.563 1391.49 492.801 1392.94 492.773 cv
1394.38 492.751 1395.64 493.316 1396.73 494.477 cv
1397.86 495.682 1398.34 497.01 1398.18 498.466 cv
1398.02 499.927 1397.17 501.379 1395.63 502.821 cv
1365.75 530.823 li
1364.13 532.348 1362.58 533.119 1361.12 533.142 cv
1359.66 533.169 1358.38 532.599 1357.29 531.439 cv
1356.21 530.279 1355.73 528.97 1355.87 527.509 cv
1356.01 526.053 1356.88 524.573 1358.48 523.066 cv
cp
ef
1806.25 300.3 mo
1799.52 277.984 li
1798.95 276.085 1798.95 274.532 1799.52 273.325 cv
1800.09 272.118 1801.07 271.305 1802.46 270.885 cv
1803.92 270.446 1805.22 270.573 1806.36 271.266 cv
1807.5 271.958 1808.35 273.254 1808.93 275.152 cv
1815.8 297.975 li
1816.58 300.57 1817.52 302.65 1818.63 304.217 cv
1819.73 305.783 1821.17 306.824 1822.94 307.339 cv
1824.7 307.854 1826.91 307.712 1829.57 306.911 cv
1833.25 305.805 1835.55 304.047 1836.48 301.638 cv
1837.41 299.229 1837.28 296.04 1836.08 292.072 cv
1829.15 269.061 li
1828.57 267.141 1828.57 265.584 1829.13 264.391 cv
1829.69 263.197 1830.67 262.388 1832.09 261.962 cv
1833.5 261.536 1834.79 261.66 1835.95 262.336 cv
1837.11 263.011 1837.97 264.309 1838.55 266.229 cv
1845.27 288.545 li
1846.37 292.174 1846.93 295.309 1846.95 297.948 cv
1846.98 300.588 1846.28 303.121 1844.87 305.548 cv
1843.65 307.618 1842.03 309.349 1840.01 310.74 cv
1837.99 312.132 1835.49 313.278 1832.49 314.181 cv
1828.92 315.255 1825.74 315.794 1822.93 315.8 cv
1820.12 315.805 1817.66 315.245 1815.55 314.12 cv
1813.44 312.995 1811.63 311.286 1810.11 308.993 cv
1808.59 306.7 1807.3 303.803 1806.25 300.3 cv
cp
ef
1416.56 1059.63 mo
1398.43 1034.58 li
1384.3 1044.81 li
1383.17 1045.62 1382.11 1045.97 1381.11 1045.86 cv
1380.11 1045.75 1379.31 1045.28 1378.71 1044.44 cv
1378.1 1043.6 1377.9 1042.7 1378.11 1041.75 cv
1378.33 1040.79 1379.01 1039.9 1380.15 1039.08 cv
1396.99 1026.89 li
1398.51 1025.8 1399.84 1025.34 1400.99 1025.53 cv
1402.14 1025.72 1403.27 1026.57 1404.35 1028.07 cv
1423.53 1054.58 li
1424.55 1055.99 1425 1057.28 1424.87 1058.44 cv
1424.75 1059.6 1424.17 1060.56 1423.14 1061.31 cv
1422.09 1062.07 1420.99 1062.33 1419.83 1062.11 cv
1418.68 1061.88 1417.59 1061.05 1416.56 1059.63 cv
cp
ef
751.736 317.027 mo
750.304 308.021 li
750.116 306.825 750.08 305.851 750.203 305.098 cv
750.321 304.344 750.65 303.629 751.189 302.952 cv
751.728 302.275 752.449 301.591 753.344 300.901 cv
755.941 298.911 758.498 297.354 761.013 296.232 cv
763.533 295.109 766.336 294.302 769.436 293.81 cv
773.046 293.235 776.425 293.268 779.569 293.907 cv
782.72 294.546 785.504 295.756 787.938 297.539 cv
790.366 299.321 792.384 301.63 793.981 304.464 cv
795.584 307.298 796.68 310.574 797.269 314.292 cv
797.848 317.945 797.834 321.375 797.227 324.582 cv
796.62 327.789 795.429 330.619 793.648 333.07 cv
791.872 335.521 789.554 337.549 786.695 339.153 cv
783.843 340.757 780.492 341.864 776.644 342.476 cv
773.484 342.979 770.617 343.001 768.048 342.544 cv
765.478 342.088 763.332 341.339 761.611 340.298 cv
759.89 339.257 758.534 338.082 757.534 336.772 cv
756.539 335.464 755.95 334.254 755.776 333.143 cv
755.585 331.946 755.868 330.855 756.621 329.87 cv
757.37 328.886 758.37 328.295 759.606 328.098 cv
760.292 327.989 760.972 328.045 761.652 328.265 cv
762.337 328.485 762.935 328.85 763.455 329.358 cv
764.921 331.01 766.135 332.24 767.098 333.052 cv
768.057 333.862 769.28 334.479 770.759 334.901 cv
772.238 335.323 774.046 335.364 776.183 335.024 cv
778.383 334.675 780.291 333.983 781.897 332.949 cv
783.509 331.916 784.814 330.58 785.814 328.943 cv
786.814 327.306 787.472 325.389 787.791 323.191 cv
788.11 320.993 788.065 318.624 787.663 316.081 cv
786.787 310.569 784.847 306.529 781.843 303.962 cv
778.839 301.395 775.073 300.471 770.545 301.19 cv
768.345 301.54 766.322 302.157 764.478 303.042 cv
762.638 303.926 760.808 305.06 758.99 306.444 cv
760.205 314.071 li
767.573 312.899 li
769.349 312.617 770.731 312.672 771.723 313.062 cv
772.718 313.451 773.315 314.287 773.521 315.569 cv
773.686 316.616 773.443 317.541 772.795 318.346 cv
772.143 319.15 771.165 319.656 769.864 319.863 cv
759.063 321.58 li
757.74 321.79 756.599 321.851 755.645 321.762 cv
754.686 321.673 753.859 321.268 753.166 320.546 cv
752.472 319.824 751.992 318.65 751.736 317.027 cv
cp
ef
1981.45 578.258 mo
1962.71 597.987 li
1975.35 609.998 li
1991.02 593.51 li
1992.47 591.98 1993.9 591.163 1995.3 591.063 cv
1996.7 590.957 1997.97 591.455 1999.12 592.542 cv
2000.27 593.633 2000.81 594.879 2000.76 596.285 cv
2000.71 597.69 1999.97 599.147 1998.54 600.653 cv
1982.87 617.143 li
1999.16 632.618 li
2001.23 634.581 2002.32 636.503 2002.44 638.388 cv
2002.55 640.273 2001.91 641.944 2000.52 643.405 cv
1999.11 644.889 1997.46 645.619 1995.56 645.587 cv
1993.67 645.56 1991.7 644.573 1989.65 642.634 cv
1951.61 606.497 li
1950.17 605.127 1949.2 603.799 1948.69 602.507 cv
1948.19 601.215 1948.16 599.914 1948.61 598.608 cv
1949.06 597.303 1949.95 595.942 1951.3 594.527 cv
1973.72 570.922 li
1975.24 569.324 1976.72 568.475 1978.17 568.37 cv
1979.61 568.27 1980.91 568.763 1982.05 569.849 cv
1983.22 570.963 1983.79 572.241 1983.77 573.688 cv
1983.73 575.14 1982.96 576.66 1981.45 578.258 cv
cp
ef
490.901 369.035 mo
492.746 371.245 493.833 373.705 494.166 376.414 cv
494.494 379.125 493.979 381.893 492.618 384.719 cv
491.258 387.545 489.076 390.213 486.067 392.721 cv
482.461 395.729 478.919 397.528 475.44 398.12 cv
472.961 398.526 470.523 398.344 468.118 397.574 cv
465.717 396.804 463.868 395.646 462.581 394.102 cv
461.832 393.205 461.503 392.177 461.59 391.018 cv
461.682 389.858 462.206 388.876 463.17 388.073 cv
463.95 387.422 464.822 387.12 465.776 387.168 cv
466.73 387.216 467.808 387.57 469.008 388.231 cv
470.446 389.006 471.756 389.559 472.947 389.889 cv
474.139 390.219 475.436 390.229 476.842 389.918 cv
478.243 389.606 479.74 388.786 481.334 387.455 cv
483.529 385.626 484.885 383.629 485.401 381.464 cv
485.922 379.299 485.543 377.452 484.265 375.924 cv
483.256 374.711 482.064 374.035 480.694 373.896 cv
479.325 373.758 477.887 373.978 476.385 374.556 cv
474.879 375.134 472.961 376.017 470.629 377.203 cv
467.488 378.778 464.694 379.893 462.238 380.547 cv
459.782 381.2 457.445 381.251 455.221 380.696 cv
452.998 380.143 451.006 378.811 449.246 376.701 cv
447.568 374.691 446.627 372.448 446.421 369.972 cv
446.214 367.496 446.8 364.972 448.176 362.4 cv
449.552 359.829 451.645 357.372 454.451 355.03 cv
456.691 353.159 458.864 351.819 460.965 351.011 cv
463.064 350.202 465.041 349.809 466.89 349.829 cv
468.738 349.851 470.337 350.16 471.679 350.757 cv
473.021 351.354 474.098 352.135 474.901 353.099 cv
475.637 353.979 475.983 355.032 475.951 356.258 cv
475.92 357.483 475.436 358.484 474.504 359.261 cv
473.66 359.968 472.838 360.293 472.044 360.236 cv
471.25 360.18 470.195 359.885 468.876 359.352 cv
467.059 358.527 465.365 358.116 463.79 358.12 cv
462.216 358.124 460.398 358.984 458.34 360.703 cv
456.43 362.297 455.238 364.002 454.768 365.818 cv
454.296 367.634 454.553 369.132 455.536 370.311 cv
456.146 371.042 456.874 371.507 457.714 371.706 cv
458.559 371.905 459.485 371.904 460.504 371.704 cv
461.517 371.504 462.476 371.215 463.37 370.834 cv
464.265 370.454 465.708 369.786 467.698 368.829 cv
470.158 367.592 472.469 366.568 474.623 365.757 cv
476.777 364.945 478.786 364.466 480.648 364.319 cv
482.512 364.173 484.306 364.461 486.021 365.185 cv
487.738 365.908 489.363 367.191 490.901 369.035 cv
cp
ef
2320.21 604.698 mo
2333.82 569.104 li
2313.96 575.93 li
2312.57 576.409 2311.42 576.459 2310.5 576.089 cv
2309.58 575.72 2308.95 575.03 2308.61 574.03 cv
2308.25 572.985 2308.31 572.021 2308.79 571.132 cv
2309.28 570.246 2310.22 569.566 2311.61 569.087 cv
2337.2 560.29 li
2340.52 559.148 2342.7 560.126 2343.77 563.216 cv
2344.27 564.686 2344.4 565.96 2344.15 567.027 cv
2343.9 568.096 2343.27 569.903 2342.27 572.441 cv
2329.51 605.584 li
2353.32 597.398 li
2354.73 596.915 2355.89 596.847 2356.78 597.188 cv
2357.68 597.531 2358.31 598.225 2358.66 599.271 cv
2359.04 600.353 2358.99 601.334 2358.51 602.206 cv
2358.03 603.077 2357.08 603.758 2355.67 604.241 cv
2326.46 614.284 li
2324.48 614.97 2322.83 615.038 2321.52 614.49 cv
2320.21 613.947 2319.3 612.924 2318.79 611.432 cv
2318.61 610.92 2318.53 610.423 2318.54 609.935 cv
2318.56 609.45 2318.64 608.971 2318.79 608.496 cv
2318.93 608.026 2319.15 607.41 2319.44 606.661 cv
2319.74 605.908 2319.99 605.255 2320.21 604.698 cv
cp
ef
185.01 1184.38 mo
199.082 1178.61 li
199.165 1165.31 li
199.19 1164.03 199.273 1162.97 199.416 1162.13 cv
199.558 1161.3 199.825 1160.58 200.219 1159.98 cv
200.621 1159.37 201.257 1159 202.125 1158.87 cv
202.994 1158.74 203.823 1158.93 204.611 1159.45 cv
205.516 1160.04 206.046 1160.77 206.2 1161.64 cv
206.353 1162.5 206.4 1163.95 206.342 1165.98 cv
206.04 1176.94 li
216.306 1172.52 li
217.161 1172.15 217.892 1171.82 218.498 1171.55 cv
219.104 1171.28 219.646 1171.08 220.125 1170.95 cv
220.604 1170.83 221.065 1170.8 221.509 1170.88 cv
221.953 1170.95 222.401 1171.13 222.853 1171.43 cv
223.671 1171.97 224.178 1172.65 224.375 1173.48 cv
224.572 1174.31 224.45 1175.06 224.009 1175.73 cv
223.367 1176.71 221.932 1177.67 219.705 1178.61 cv
207.163 1183.91 li
207.084 1198.88 li
207.094 1200.2 207.038 1201.26 206.917 1202.04 cv
206.797 1202.83 206.559 1203.49 206.204 1204.04 cv
205.869 1204.55 205.438 1204.93 204.912 1205.19 cv
204.385 1205.45 203.814 1205.56 203.199 1205.51 cv
202.583 1205.46 201.991 1205.25 201.421 1204.88 cv
200.808 1204.47 200.374 1204 200.118 1203.47 cv
199.862 1202.94 199.728 1202.39 199.715 1201.84 cv
199.701 1201.29 199.696 1200.23 199.7 1198.67 cv
199.89 1186.06 li
187.876 1191.28 li
186.93 1191.7 186.263 1191.99 185.874 1192.16 cv
185.485 1192.32 185.061 1192.45 184.601 1192.54 cv
184.142 1192.64 183.669 1192.64 183.184 1192.55 cv
182.699 1192.46 182.201 1192.25 181.69 1191.92 cv
180.902 1191.4 180.407 1190.73 180.205 1189.91 cv
180.003 1189.09 180.204 1188.21 180.808 1187.29 cv
181.518 1186.21 182.918 1185.24 185.01 1184.38 cv
cp
ef
1290.74 304.336 mo
1290.74 306.184 1290.28 308.185 1289.37 310.336 cv
1288.46 312.488 1287.02 314.601 1285.07 316.674 cv
1283.12 318.746 1280.62 320.43 1277.59 321.724 cv
1274.55 323.018 1271.01 323.664 1266.97 323.664 cv
1263.91 323.664 1261.12 323.374 1258.61 322.793 cv
1256.11 322.212 1253.83 321.308 1251.78 320.079 cv
1249.74 318.852 1247.85 317.234 1246.14 315.228 cv
1244.61 313.406 1243.3 311.366 1242.21 309.108 cv
1241.13 306.851 1240.32 304.441 1239.78 301.88 cv
1239.24 299.318 1238.97 296.599 1238.97 293.721 cv
1238.97 289.047 1239.65 284.861 1241.01 281.165 cv
1242.37 277.468 1244.31 274.306 1246.85 271.679 cv
1249.39 269.051 1252.36 267.051 1255.76 265.678 cv
1259.17 264.305 1262.8 263.618 1266.66 263.618 cv
1271.35 263.618 1275.54 264.556 1279.21 266.431 cv
1282.88 268.306 1285.69 270.622 1287.64 273.382 cv
1289.6 276.141 1290.58 278.748 1290.58 281.204 cv
1290.58 282.551 1290.1 283.739 1289.15 284.77 cv
1288.2 285.799 1287.05 286.314 1285.71 286.314 cv
1284.2 286.314 1283.07 285.958 1282.32 285.244 cv
1281.56 284.531 1280.73 283.304 1279.8 281.561 cv
1278.27 278.683 1276.47 276.531 1274.4 275.104 cv
1272.33 273.679 1269.77 272.966 1266.73 272.966 cv
1261.9 272.966 1258.05 274.801 1255.19 278.472 cv
1252.32 282.142 1250.89 287.356 1250.89 294.116 cv
1250.89 298.632 1251.52 302.388 1252.79 305.386 cv
1254.06 308.382 1255.85 310.62 1258.18 312.099 cv
1260.5 313.578 1263.22 314.316 1266.34 314.316 cv
1269.72 314.316 1272.58 313.479 1274.91 311.802 cv
1277.25 310.125 1279.01 307.663 1280.2 304.415 cv
1280.7 302.883 1281.32 301.636 1282.06 300.672 cv
1282.8 299.708 1283.99 299.227 1285.63 299.227 cv
1287.02 299.227 1288.23 299.715 1289.23 300.691 cv
1290.23 301.669 1290.74 302.883 1290.74 304.336 cv
cp
ef
1264.25 1540.35 mo
1264.25 1550.28 li
1271.37 1550.28 li
1273.31 1550.28 1274.81 1550.1 1275.86 1549.74 cv
1276.92 1549.37 1277.73 1548.67 1278.29 1547.64 cv
1278.72 1546.91 1278.94 1546.08 1278.94 1545.17 cv
1278.94 1543.24 1278.25 1541.95 1276.87 1541.31 cv
1275.49 1540.67 1273.39 1540.35 1270.56 1540.35 cv
1264.25 1540.35 li
cp
1272.34 1555.87 mo
1264.25 1555.87 li
1264.25 1567.08 li
1272.6 1567.08 li
1277.86 1567.08 1280.49 1565.18 1280.49 1561.39 cv
1280.49 1559.45 1279.81 1558.05 1278.44 1557.18 cv
1277.08 1556.3 1275.05 1555.87 1272.34 1555.87 cv
cp
1272.91 1572.92 mo
1261.18 1572.92 li
1259.48 1572.92 1258.27 1572.54 1257.55 1571.78 cv
1256.83 1571.02 1256.46 1569.81 1256.46 1568.16 cv
1256.46 1539.28 li
1256.46 1537.59 1256.83 1536.37 1257.58 1535.63 cv
1258.32 1534.89 1259.52 1534.51 1261.18 1534.51 cv
1273.62 1534.51 li
1275.46 1534.51 1277.04 1534.63 1278.39 1534.85 cv
1279.74 1535.08 1280.94 1535.52 1282.01 1536.16 cv
1282.92 1536.7 1283.72 1537.39 1284.42 1538.22 cv
1285.12 1539.05 1285.65 1539.97 1286.02 1540.97 cv
1286.38 1541.97 1286.57 1543.04 1286.57 1544.15 cv
1286.57 1548 1284.65 1550.81 1280.8 1552.59 cv
1285.85 1554.2 1288.38 1557.32 1288.38 1561.97 cv
1288.38 1564.12 1287.82 1566.06 1286.72 1567.77 cv
1285.62 1569.49 1284.14 1570.77 1282.27 1571.58 cv
1281.1 1572.08 1279.75 1572.42 1278.23 1572.62 cv
1276.72 1572.82 1274.94 1572.92 1272.91 1572.92 cv
cp
ef
1282.41 994.782 mo
1255.36 1000.82 li
1277.16 1009.14 li
1278.58 1009.68 1279.52 1010.39 1280 1011.27 cv
1280.48 1012.15 1280.52 1013.11 1280.13 1014.14 cv
1279.72 1015.21 1279.04 1015.91 1278.1 1016.26 cv
1277.15 1016.6 1275.97 1016.51 1274.56 1015.96 cv
1245.72 1004.96 li
1242.51 1003.73 1241.41 1001.79 1242.42 999.119 cv
1242.68 998.452 1243 997.886 1243.4 997.425 cv
1243.79 996.969 1244.29 996.581 1244.88 996.274 cv
1245.48 995.969 1246.13 995.718 1246.84 995.535 cv
1247.55 995.348 1248.28 995.165 1249.02 994.987 cv
1275.69 989.208 li
1254.21 981.01 li
1252.8 980.476 1251.87 979.745 1251.4 978.822 cv
1250.93 977.9 1250.89 976.929 1251.28 975.91 cv
1251.68 974.86 1252.37 974.157 1253.33 973.801 cv
1254.3 973.445 1255.48 973.532 1256.86 974.057 cv
1285.14 984.854 li
1286.34 985.31 1287.23 985.803 1287.81 986.332 cv
1288.44 986.935 1288.85 987.692 1289.05 988.61 cv
1289.25 989.523 1289.18 990.409 1288.86 991.258 cv
1288.6 991.924 1288.28 992.454 1287.88 992.847 cv
1287.48 993.239 1287.03 993.545 1286.53 993.764 cv
1286.02 993.979 1285.41 994.166 1284.68 994.316 cv
1283.96 994.472 1283.2 994.627 1282.41 994.782 cv
cp
ef
1186.6 1449.79 mo
1162.73 1457.97 li
1189.15 1455.76 li
1190.61 1455.64 1191.73 1455.87 1192.52 1456.46 cv
1193.31 1457.06 1193.75 1457.89 1193.83 1458.97 cv
1193.92 1460.01 1193.63 1460.9 1192.97 1461.62 cv
1192.3 1462.34 1191.23 1462.76 1189.74 1462.89 cv
1159.46 1465.42 li
1157.79 1465.56 1156.63 1465.22 1155.97 1464.4 cv
1155.31 1463.58 1154.92 1462.42 1154.8 1460.95 cv
1154.6 1458.54 li
1154.48 1457.1 1154.52 1456.04 1154.73 1455.36 cv
1154.94 1454.69 1155.37 1454.17 1156.02 1453.8 cv
1156.67 1453.43 1157.74 1452.98 1159.25 1452.45 cv
1179.75 1445.14 li
1158.31 1441.33 li
1156.75 1441.05 1155.62 1440.79 1154.91 1440.53 cv
1154.21 1440.28 1153.69 1439.83 1153.38 1439.2 cv
1153.06 1438.57 1152.84 1437.53 1152.72 1436.09 cv
1152.52 1433.69 li
1152.4 1432.21 1152.59 1431.01 1153.11 1430.09 cv
1153.61 1429.17 1154.7 1428.64 1156.37 1428.5 cv
1186.66 1425.97 li
1188.12 1425.85 1189.25 1426.08 1190.03 1426.68 cv
1190.82 1427.27 1191.26 1428.11 1191.35 1429.21 cv
1191.43 1430.23 1191.14 1431.11 1190.46 1431.83 cv
1189.79 1432.55 1188.72 1432.98 1187.26 1433.1 cv
1160.83 1435.3 li
1185.73 1439.4 li
1187.35 1439.67 1188.54 1439.9 1189.3 1440.09 cv
1190.06 1440.28 1190.78 1440.69 1191.44 1441.32 cv
1192.11 1441.95 1192.49 1442.86 1192.59 1444.06 cv
1192.67 1444.97 1192.53 1445.75 1192.2 1446.41 cv
1191.86 1447.07 1191.4 1447.6 1190.82 1448 cv
1190.24 1448.4 1189.58 1448.73 1188.86 1448.99 cv
1188.14 1449.25 1187.38 1449.52 1186.6 1449.79 cv
cp
ef
1485.69 1559.55 mo
1486.14 1560.69 1486.36 1562.02 1486.34 1563.57 cv
1486.31 1565.12 1485.96 1566.77 1485.28 1568.52 cv
1484.59 1570.28 1483.48 1571.93 1481.94 1573.48 cv
1480.4 1575.03 1478.39 1576.3 1475.92 1577.3 cv
1474.03 1578.06 1472.25 1578.58 1470.57 1578.84 cv
1468.89 1579.11 1467.27 1579.12 1465.71 1578.87 cv
1464.15 1578.63 1462.59 1578.11 1461.05 1577.3 cv
1459.65 1576.56 1458.34 1575.64 1457.12 1574.52 cv
1455.9 1573.41 1454.8 1572.13 1453.83 1570.69 cv
1452.87 1569.26 1452.03 1567.66 1451.31 1565.9 cv
1450.15 1563.03 1449.53 1560.29 1449.44 1557.69 cv
1449.36 1555.09 1449.77 1552.66 1450.67 1550.42 cv
1451.57 1548.18 1452.9 1546.22 1454.65 1544.53 cv
1456.39 1542.84 1458.45 1541.52 1460.81 1540.56 cv
1463.69 1539.4 1466.5 1538.93 1469.21 1539.17 cv
1471.92 1539.41 1474.23 1540.13 1476.11 1541.34 cv
1477.99 1542.55 1479.24 1543.91 1479.85 1545.41 cv
1480.18 1546.23 1480.19 1547.08 1479.86 1547.95 cv
1479.53 1548.82 1478.96 1549.42 1478.13 1549.75 cv
1477.21 1550.12 1476.43 1550.19 1475.79 1549.94 cv
1475.15 1549.69 1474.33 1549.14 1473.33 1548.3 cv
1471.68 1546.92 1470.04 1546.05 1468.41 1545.69 cv
1466.79 1545.33 1465.05 1545.52 1463.18 1546.28 cv
1460.22 1547.48 1458.32 1549.56 1457.47 1552.52 cv
1456.62 1555.48 1457.04 1559.03 1458.72 1563.18 cv
1459.84 1565.95 1461.16 1568.09 1462.68 1569.62 cv
1464.2 1571.14 1465.86 1572.06 1467.65 1572.4 cv
1469.44 1572.72 1471.29 1572.5 1473.2 1571.73 cv
1475.28 1570.89 1476.82 1569.67 1477.84 1568.06 cv
1478.85 1566.45 1479.33 1564.5 1479.25 1562.22 cv
1479.17 1561.15 1479.24 1560.23 1479.46 1559.46 cv
1479.67 1558.69 1480.28 1558.09 1481.28 1557.69 cv
1482.14 1557.34 1483 1557.34 1483.86 1557.69 cv
1484.72 1558.04 1485.33 1558.66 1485.69 1559.55 cv
cp
ef
300.985 609.583 mo
277.742 608.318 li
276.932 623.219 li
296.36 624.277 li
298.162 624.373 299.484 624.848 300.327 625.706 cv
301.171 626.564 301.556 627.665 301.482 629.016 cv
301.408 630.367 300.9 631.417 299.957 632.161 cv
299.013 632.905 297.653 633.234 295.878 633.134 cv
276.45 632.079 li
275.406 651.271 li
275.273 653.703 274.626 655.483 273.463 656.603 cv
272.299 657.721 270.857 658.231 269.135 658.141 cv
267.387 658.045 265.996 657.374 264.961 656.118 cv
263.927 654.867 263.476 653.037 263.606 650.627 cv
266.044 605.813 li
266.136 604.114 266.463 602.744 267.024 601.699 cv
267.586 600.653 268.417 599.914 269.516 599.485 cv
270.616 599.051 272 598.883 273.668 598.974 cv
301.479 600.484 li
303.36 600.59 304.735 601.083 305.604 601.964 cv
306.472 602.85 306.869 603.968 306.796 605.319 cv
306.721 606.693 306.204 607.775 305.245 608.561 cv
304.285 609.346 302.866 609.688 300.985 609.583 cv
cp
ef
747.464 507.51 mo
746.61 506.633 745.902 505.474 745.346 504.031 cv
744.784 502.593 744.492 500.927 744.465 499.046 cv
744.438 497.16 744.844 495.211 745.688 493.198 cv
746.532 491.185 747.911 489.245 749.829 487.387 cv
751.285 485.972 752.736 484.826 754.197 483.944 cv
755.653 483.063 757.151 482.443 758.689 482.082 cv
760.228 481.722 761.862 481.626 763.602 481.785 cv
765.172 481.945 766.729 482.311 768.285 482.881 cv
769.837 483.452 771.334 484.224 772.772 485.187 cv
774.21 486.154 775.589 487.318 776.917 488.684 cv
779.072 490.901 780.679 493.202 781.738 495.581 cv
782.797 497.964 783.326 500.36 783.336 502.775 cv
783.345 505.19 782.856 507.51 781.875 509.732 cv
780.889 511.951 779.482 513.95 777.657 515.727 cv
775.425 517.895 773.01 519.378 770.403 520.182 cv
767.797 520.985 765.396 521.182 763.195 520.771 cv
760.995 520.364 759.333 519.574 758.201 518.41 cv
757.58 517.771 757.256 516.991 757.233 516.064 cv
757.21 515.138 757.516 514.361 758.155 513.74 cv
758.872 513.047 759.57 512.695 760.255 512.686 cv
760.939 512.677 761.903 512.873 763.145 513.275 cv
765.199 513.937 767.048 514.129 768.687 513.846 cv
770.33 513.567 771.868 512.731 773.311 511.33 cv
775.603 509.103 776.584 506.459 776.251 503.396 cv
775.918 500.333 774.192 497.201 771.079 493.992 cv
768.997 491.852 766.966 490.358 764.984 489.523 cv
762.999 488.684 761.118 488.45 759.333 488.82 cv
757.548 489.19 755.918 490.094 754.439 491.527 cv
752.837 493.084 751.864 494.801 751.531 496.672 cv
751.193 498.548 751.49 500.524 752.426 502.615 cv
752.892 503.574 753.175 504.451 753.266 505.25 cv
753.362 506.049 753.02 506.824 752.243 507.578 cv
751.577 508.222 750.783 508.546 749.856 508.546 cv
748.93 508.541 748.131 508.198 747.464 507.51 cv
cp
ef
1150.31 438.698 mo
1174.71 445.11 li
1151.48 432.319 li
1150.2 431.611 1149.39 430.794 1149.07 429.866 cv
1148.74 428.938 1148.84 428 1149.36 427.052 cv
1149.87 426.134 1150.6 425.559 1151.55 425.327 cv
1152.51 425.096 1153.63 425.338 1154.94 426.054 cv
1181.56 440.716 li
1183.03 441.525 1183.81 442.453 1183.9 443.5 cv
1183.99 444.548 1183.68 445.722 1182.96 447.022 cv
1181.8 449.134 li
1181.1 450.403 1180.48 451.262 1179.93 451.709 cv
1179.39 452.156 1178.74 452.354 1177.99 452.3 cv
1177.24 452.247 1176.1 452.025 1174.56 451.636 cv
1153.44 446.374 li
1169.17 461.412 li
1170.32 462.508 1171.12 463.356 1171.57 463.959 cv
1172.01 464.562 1172.19 465.215 1172.1 465.913 cv
1172.02 466.616 1171.63 467.603 1170.93 468.871 cv
1169.77 470.98 li
1169.05 472.281 1168.22 473.171 1167.29 473.655 cv
1166.36 474.139 1165.16 473.975 1163.69 473.167 cv
1137.06 458.504 li
1135.78 457.797 1134.97 456.979 1134.65 456.052 cv
1134.32 455.124 1134.42 454.178 1134.96 453.214 cv
1135.45 452.312 1136.18 451.746 1137.14 451.519 cv
1138.1 451.291 1139.23 451.531 1140.51 452.239 cv
1163.74 465.032 li
1145.28 447.832 li
1144.08 446.713 1143.21 445.864 1142.69 445.284 cv
1142.16 444.704 1141.79 443.968 1141.58 443.076 cv
1141.38 442.186 1141.57 441.211 1142.14 440.155 cv
1142.58 439.36 1143.13 438.782 1143.77 438.42 cv
1144.42 438.06 1145.1 437.873 1145.8 437.862 cv
1146.5 437.852 1147.23 437.937 1147.98 438.119 cv
1148.73 438.301 1149.5 438.494 1150.31 438.698 cv
cp
ef
1914.6 414.024 mo
1912.65 401.783 li
1912.4 400.157 1912.35 398.832 1912.51 397.809 cv
1912.68 396.784 1913.13 395.813 1913.86 394.893 cv
1914.59 393.972 1915.57 393.042 1916.79 392.104 cv
1920.32 389.399 1923.79 387.283 1927.21 385.758 cv
1930.63 384.231 1934.45 383.134 1938.66 382.464 cv
1943.57 381.684 1948.16 381.729 1952.44 382.597 cv
1956.71 383.466 1960.5 385.111 1963.81 387.534 cv
1967.11 389.957 1969.85 393.095 1972.03 396.947 cv
1974.2 400.8 1975.69 405.253 1976.49 410.307 cv
1977.28 415.272 1977.27 419.936 1976.44 424.295 cv
1975.61 428.654 1973.99 432.5 1971.57 435.832 cv
1969.15 439.164 1966 441.92 1962.12 444.101 cv
1958.24 446.281 1953.69 447.786 1948.46 448.617 cv
1944.16 449.301 1940.27 449.332 1936.77 448.711 cv
1933.28 448.09 1930.37 447.072 1928.02 445.657 cv
1925.69 444.242 1923.84 442.645 1922.48 440.865 cv
1921.13 439.086 1920.33 437.44 1920.09 435.931 cv
1919.83 434.304 1920.21 432.821 1921.24 431.483 cv
1922.26 430.144 1923.61 429.341 1925.3 429.073 cv
1926.23 428.926 1927.16 429.001 1928.08 429.301 cv
1929.01 429.601 1929.82 430.096 1930.53 430.788 cv
1932.52 433.031 1934.17 434.704 1935.48 435.807 cv
1936.79 436.909 1938.45 437.747 1940.46 438.321 cv
1942.47 438.895 1944.93 438.951 1947.83 438.489 cv
1950.83 438.014 1953.41 437.073 1955.6 435.669 cv
1957.79 434.264 1959.56 432.448 1960.92 430.223 cv
1962.28 427.997 1963.18 425.39 1963.61 422.403 cv
1964.05 419.416 1963.99 416.194 1963.43 412.738 cv
1962.25 405.246 1959.61 399.754 1955.52 396.265 cv
1951.44 392.775 1946.32 391.52 1940.17 392.497 cv
1937.17 392.973 1934.43 393.812 1931.92 395.014 cv
1929.42 396.216 1926.93 397.757 1924.46 399.639 cv
1926.11 410.007 li
1936.13 408.414 li
1938.54 408.031 1940.42 408.104 1941.77 408.634 cv
1943.12 409.164 1943.93 410.301 1944.21 412.043 cv
1944.43 413.466 1944.11 414.724 1943.22 415.817 cv
1942.34 416.91 1941.01 417.598 1939.24 417.88 cv
1924.56 420.213 li
1922.76 420.499 1921.21 420.582 1919.91 420.461 cv
1918.61 420.34 1917.49 419.789 1916.54 418.808 cv
1915.6 417.826 1914.95 416.231 1914.6 414.024 cv
cp
ef
2171.42 330.738 mo
2170.18 329.469 2169.17 327.791 2168.35 325.705 cv
2167.54 323.62 2167.12 321.214 2167.07 318.486 cv
2167.04 315.76 2167.63 312.939 2168.85 310.024 cv
2170.07 307.11 2172.07 304.306 2174.84 301.61 cv
2176.95 299.567 2179.05 297.908 2181.16 296.634 cv
2183.28 295.358 2185.44 294.461 2187.67 293.939 cv
2189.89 293.417 2192.26 293.272 2194.78 293.506 cv
2197.05 293.735 2199.3 294.264 2201.55 295.092 cv
2203.8 295.921 2205.97 297.033 2208.05 298.432 cv
2210.13 299.829 2212.13 301.517 2214.05 303.492 cv
2217.17 306.702 2219.49 310.03 2221.02 313.477 cv
2222.56 316.922 2223.33 320.393 2223.34 323.888 cv
2223.35 327.384 2222.65 330.739 2221.22 333.954 cv
2219.8 337.17 2217.76 340.063 2215.12 342.635 cv
2211.89 345.771 2208.39 347.919 2204.62 349.08 cv
2200.85 350.241 2197.37 350.525 2194.19 349.935 cv
2191 349.343 2188.59 348.204 2186.96 346.518 cv
2186.06 345.593 2185.59 344.459 2185.56 343.118 cv
2185.53 341.777 2185.97 340.657 2186.9 339.759 cv
2187.93 338.755 2188.94 338.246 2189.94 338.233 cv
2190.93 338.222 2192.32 338.505 2194.12 339.086 cv
2197.09 340.04 2199.76 340.316 2202.14 339.913 cv
2204.51 339.509 2206.74 338.294 2208.83 336.269 cv
2212.14 333.045 2213.56 329.217 2213.08 324.785 cv
2212.6 320.354 2210.11 315.816 2205.6 311.174 cv
2202.58 308.073 2199.65 305.917 2196.77 304.704 cv
2193.91 303.491 2191.18 303.152 2188.6 303.688 cv
2186.01 304.222 2183.65 305.528 2181.51 307.607 cv
2179.19 309.861 2177.79 312.344 2177.3 315.055 cv
2176.82 317.765 2177.25 320.632 2178.6 323.655 cv
2179.28 325.042 2179.68 326.313 2179.82 327.468 cv
2179.95 328.622 2179.46 329.746 2178.34 330.838 cv
2177.37 331.771 2176.22 332.238 2174.88 332.236 cv
2173.54 332.234 2172.39 331.735 2171.42 330.738 cv
cp
ef
2443.48 809.908 mo
2457.55 804.139 li
2457.64 790.841 li
2457.66 789.563 2457.75 788.503 2457.89 787.668 cv
2458.03 786.828 2458.29 786.111 2458.69 785.514 cv
2459.09 784.901 2459.73 784.527 2460.59 784.399 cv
2461.47 784.271 2462.29 784.463 2463.08 784.983 cv
2463.99 785.577 2464.52 786.303 2464.67 787.17 cv
2464.82 788.033 2464.87 789.48 2464.81 791.512 cv
2464.51 802.473 li
2474.78 798.054 li
2475.63 797.675 2476.36 797.351 2476.97 797.081 cv
2477.58 796.807 2478.12 796.61 2478.59 796.487 cv
2479.07 796.364 2479.53 796.337 2479.98 796.41 cv
2480.42 796.479 2480.87 796.666 2481.32 796.962 cv
2482.14 797.501 2482.65 798.181 2482.84 799.012 cv
2483.04 799.843 2482.92 800.592 2482.48 801.263 cv
2481.83 802.244 2480.4 803.202 2478.17 804.143 cv
2465.63 809.447 li
2465.56 824.407 li
2465.57 825.73 2465.51 826.785 2465.39 827.575 cv
2465.27 828.36 2465.03 829.026 2464.68 829.565 cv
2464.34 830.077 2463.91 830.465 2463.38 830.725 cv
2462.85 830.985 2462.28 831.09 2461.67 831.04 cv
2461.06 830.99 2460.46 830.779 2459.89 830.405 cv
2459.28 830.004 2458.85 829.533 2458.59 829.004 cv
2458.33 828.47 2458.2 827.927 2458.18 827.374 cv
2458.17 826.822 2458.17 825.763 2458.17 824.197 cv
2458.36 811.598 li
2446.35 816.811 li
2445.4 817.23 2444.73 817.523 2444.34 817.688 cv
2443.96 817.852 2443.53 817.979 2443.07 818.075 cv
2442.61 818.171 2442.14 818.171 2441.65 818.085 cv
2441.17 817.993 2440.67 817.783 2440.16 817.445 cv
2439.37 816.93 2438.88 816.259 2438.67 815.437 cv
2438.47 814.615 2438.67 813.743 2439.28 812.825 cv
2439.99 811.744 2441.39 810.771 2443.48 809.908 cv
cp
ef
2187.42 489.605 mo
2168.46 488.573 li
2167.8 500.726 li
2183.64 501.584 li
2185.12 501.666 2186.19 502.054 2186.88 502.753 cv
2187.57 503.451 2187.88 504.351 2187.82 505.45 cv
2187.76 506.556 2187.35 507.409 2186.58 508.016 cv
2185.81 508.623 2184.7 508.888 2183.25 508.811 cv
2167.41 507.947 li
2166.55 523.601 li
2166.45 525.587 2165.92 527.038 2164.97 527.951 cv
2164.02 528.859 2162.85 529.28 2161.44 529.202 cv
2160.02 529.125 2158.88 528.577 2158.04 527.555 cv
2157.2 526.536 2156.83 525.044 2156.93 523.076 cv
2158.92 486.528 li
2158.99 485.146 2159.26 484.027 2159.72 483.173 cv
2160.18 482.319 2160.86 481.717 2161.75 481.365 cv
2162.65 481.014 2163.78 480.877 2165.14 480.95 cv
2187.82 482.183 li
2189.35 482.265 2190.47 482.671 2191.18 483.393 cv
2191.89 484.109 2192.21 485.022 2192.15 486.122 cv
2192.09 487.245 2191.67 488.131 2190.89 488.77 cv
2190.11 489.409 2188.95 489.688 2187.42 489.605 cv
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 25.2.3%%For: (Denis) ()%%Title: (Pol_Jul21_061-temp_01.eps)%%CreationDate: 10.09.2021 16:29%%Canvassize: 16383%AI9_DataStream%Gb"-6qa28pncsL@!WNDOBJ`2Km[8N_Gp6p2i[`EDQ\e!s-)(sdZfdi#mb`KZ;q1uF,'pP-GOsY&-49D;Zee\fh+UQr[P#i9)s>8"%Xksp%;.34FD%#(:Bd"CaS:'"7>ORTT;JdFZSCPr4S"8+r^"]ZrR]T>/ThtQ[G$\:O*Rg3UiFBRSD#L-5fW6*`N_Pg@bhdB8=^Q&h%c>(%E/O_(GpUKJ"0"%D8GV@#dk6K7i_tk];Xrjg:dGli#\35;U<U]ToDD\)^ah3&,R%FV\Mgs3JGHFoXcIcEhBR3D:ea,>pjON0I%_YYuBe4Y)+b%.sGm96F=CUDB$(`Iu):".!H[=2)eB_Gu&Kg@;:gRBWg&$ptL2@@%NaO1b:s,4`Yq4rDQ+T"*qn:+:%qE)@AKt*66%0UnP3%&)dnN=(N9V`N=/2tT=o8HQ?Tos8hJeuLTA<G^-I.EnV<VO'rJ6>]%-f1[3"bUK[BJo]H#K8lDN)A#=8[mp<<$\ar?g0qZ>%GV=8e>E(iR_+[(d,Un4idB%QKSMtkHaRVqQ(g(Poesi@h>;%pN5^"1up_t]!f/gtF*mnf)Gld[n'RUV:U\0POe_2,<c<u0^G5Zg#%[DR'UMbV<.:S9M?`%"]A8sit[IDL21crT'4n.+q(H:C-_-0q/\0Y'cN\^>+22pN3r_+$p@mo(l]qkDP!*0@;O"YY@M2'nml9s\2p%0Wi%?X.P.N.(r\b)tXe4V6qlm@/K$ED#_0!!8qMkT)R3'(@*fHC9:R4;O7ro]WD->=T"p!G)GK2Nq(_)r(U,fX]2US36#_Rj(TLn%BcP=Fj^kfb<n="2[J48aC0?Hueh/UgIASIYUabT)oRk_/MHX_O>'Ph;W)]gi<i(D6PmX*^.]B\dN2OkBetVj.17g-P9,j;(bZEpO%,K`rlbaulFfHgHj(=n/RW.d*?/!XaL&cSL7<eS4iG6S@fM`'HH5%-nTMk1&HdPFpW^K<F$;2R5>9S'("O'5X%rh@^/1<MBM@-.N#%JYGC9J#0!C>\5X1Qat6%R!FF]XG6YG(=n8UkXdHVX-RCM0ta4resBfITH\6X55`AIXA88G^G9kpi%JhRIJ><p'Ij^)b4lf.UB/S$%URqs-1-^=NC'iZN\B)g(p6`D79?*6g1OMcRlj%[;\r8DL3jb2Qb>YJQIo/l&)s\0)86c!\*NX-p18F2pG6DqAJl$Y\_\oRee:sA!%V$JY`I$*Aei%D>LW6;[P2p=D%8@CFE4)/?%9CL;8T$*2=>W>Z\=`?!tOWKha8*G04mF#T_1?6pdB4Z$#d(W>#7e[#]6gFa^AXks"%EX(V+*\a>tP%["/7Q/k7^=g$EYI%7YiZGgj<)hgHCO%[[Q(K=ac\#<p)4NHP8d;Kij.(K<]ZQ<0o%EnVC`e,KAU-%UQ(Q#aq)ine%T<ZLQ<D!J!o!>\KT*MRj'D6iCSca33.sR?*fdD'Ap$&98R,t?GP-QJ!/`-Gko[I5aOae[7r5k9)ij#OjdJHm,%ssSH8(AIL9!*TK%jaUZSL;bg,Z%(BX65dNr`r97RpL3S"@]W2Mchs8GXdY=uEn4BP)sdMH`g0,SNO^BocB+Boar(q@d/s=lC8o2]-!+BT7TG%;eX:GW%8^!6s:^LiPRR^AEs$dJm#OAt'"o\Q9JAmVT\L0WMo7b"\G2.hp?%l<W*CVOt9XE>4ds4q@9M6,5=#&%;\gfm4ANWNiLGU)[8a0;<%U2tXD!0TfmXX/_."b`/U%<&JPmY##;KhtLXS6Omt!Y?8VSs09+'N"Bf%J6i2"91j8"hfN:7ZBQ)<[fQg"Wa<p_cedr9kB1GP$pti%BgZ_@]$4W-=35!;ZSM*UkJ;el;.,J)2msPY2UtJ:Bso)4^b`,I<=ETX&4hRRC'L0B,3Qrm!>eQK;l=5D&iE"M0[u&_#`qGg7@,79%[S=p&F-=UNTSg=Ro=O!XTQ[f5AX/JdO7Wr:ERem]W6qO"i@Vb43p',cTUgY@9ZhdoeuoCMM$3T&WHc\)Jcmp!B>%89M>*DBKr_2\%!pkVY0fr2_Aqh&[4oI`bQbeu7N;m4BCB-@r&a5N$Amg4]%#WP3#06_qbEm3>F!K=8:%4[UGec=F-47l:dSN`q+B.aS-!+V,o6ql;%"I+c+/[(n;5oMR0:_`.:q?cWp/Ru3,EI^1IZV9aiH<'(AM!pI(G&3?+$<kFVUd5O8:Y!Y8]HV2q90b!#9+6%YPToKtpK*;C5JuZG%j"Y52^M)m&\he#!,HROVFJ^E(B%k6u.a+pl):,*W!aYrP'?jY@0[4g`/X980WRj\61P#11XE0&&"?eGdY/o^UNlK]SD4Y,.HEF)<%&g1keJJKNA09VDW'6_8+Ogk(A>GCq#[KA/0E2J3X2=gM[-'&f,Dmi-f?AKAb@Ohjs__=k(ecVt/l`eSUWYh3NhQ+Fm^g%2sQuA7t%SdfHL.NaOfTs`(*l+\^&7pd=uT?C/b3Om4`)[Y4#bJMHDoIh54^-8u%2c1.8ZdF<1r6es(kEQ_olY6r3Xe&BPOdFObmD(JeEDT+9%015F?m"J@?Q)"gU[PQ&TAiDUS(c+$Nb:17j%<PLmW.6:p_QkRlEe8o_kWIt[gL1e:?!cZ-NHJ>,nrNcPp'LXC]$@]'5jbj?l`(A1%iR.R9ca]ocQ;(NPp5g(4A2l`9r:N"tHZ%X@E=3%$([OhIE[!<FA^)ppds@*L?=Z.%OG>c,31t]::fSo`3EUc7O0Un=')D)K,Ta1N%f%aK%\hGa8-"a:UP`Vg:.hZ!0J`^m&Ni6QSDGkAU9H51HQ0Z.h'22FO1Qo%6CBKm5Ybn)jTGNtV7@.b_El[%-X?jK^Tf!lQaf)/D%R),8#D)7WCcf(.c]QinpU0M:>TrPRo_]6o3Hiq`Pf[uS)Nf8^h$HXR"QMG-3Q.LsfnpORT#PcF9.e@Y3bR*o0dU=TbMN$!%B?B:t%/7qr3p"9ipqjQ#1qN?P^TH=>@XN*jJ@#^UE_eKKb%TGYpBqU8UVD0*LA.%hh>*UkN9P%e<8j2E&"gFdIWDR4KZ[.=/L=9)XYOb'Z%oJMiR<+lGK%G6Gf-W!IU\X.WQU.s!<jGrG.X9&8:"_b6-$p(%A$`("u5qc[/IK7o&ot]!`-"?O$r);"^RC*+@")-(5/F08BA1b8L%)=1LU'D)IJ66YicB_<++$CSoB=#D7FoSlmIHC7)(cfGI;<$lQ4;[gRdB!;WE06p5X"&]A+!mItg@_FP7lTC@-m'H5;6qjUXjg*)?%em?]ZA`d1IjCuU[J14?Q_L-$=8%'a[KOcf6Gb;$Ep%CoN$hjC:d"c.o''6&<]G$,QFa.H&E>\tKrY]ISAG?^`#<5s129`<FU-2rY%<Ru:mbT'Z47R'AaS-2`!Rq/lbN#o4klP))K*+DC)JMSdN+0e==Y$%.rcQSA$]VU]"+6+!JRHlA]\U(PbSg@<C-.%q$ap+it?T13M%"E)EFd$JDSJK[(]5Jq7l,a0f^RE.DN5V%:3j@6mkPq3ETUMgCiI`t@X$+rV&PkW4Qb*ST2-*/@[9_&f`Hl:<[Gcceb#MHpL#,dQI%!PMCs7F5^;aWa7No0>WB7@,fS=dcfc1rgoQn^6b[k6;fO"m;64%a4379%:44gG!-B.7E%1%MpcV)\]=XQFU,H@S\6e*J&5N7m;M-%`K$h.@iIB!RcDWI>k>:dpGZdDC*+*iW4];o.q88B#gbsT1dZX-lh^^;_Im16U_RL2@7KTSfI`H^UQp+VqB0?ORfo\[RVW1&Nkf@k%%PlIDSEI:L?ZutNhJ^nq!JA`u9B<K\Gm2D6N7SDEhT%-Q/+OUg.9LN`F;aqZ_;G]qO,O\QPcFO#Z*I&a6P"]>(sCGnJ)=^T%$e9_%^2MBMaF4%[)<SjZ,RrGh's*8ia=''agh%PZpE!kk_hI:VoW&I!_q]0bZ/>YuB8G2<!NqDY[.K_Wc+Z?U1jmUnmmY=oF0PAt)o6"&%fO^qT8f??Bn:EB]1:\$.$0J&dB2pbbINTZ:a@aJ4_9U<-&a]cD(B7FYJoA*=17A[ogWeTK+6],.lOMVnmqW'^*MC4iDH60qXe"*r%'l[3l3;#Bm,sJT``LOp4ahs3a>F8Fo0,Yc5r/%7J&`+#2b,Y])0fJpaQMEmW2Ar,fDUJWTK[&kk4EV$j"f$Sk,_&pabP23^b@@S(%DCsXbAUh^,p:j&JM0Hs9o--n;V>"[Kr/(nj)[s)hN>fmHj_OCP$nK4YhK%Hg1jt59LBM3AYlaG^Ygs.s!CTYL\uUCj/F^qIAcp'X%Sn(%LHc6&_5bfg9779iTO/e7.XKLo7]Och9[@FR*qfYMA<4(en#0NT<?64&'k)U7>c,=C-m8aO`Bu2>7j.VXD$8NgWZWMR,&Mi/l%q>pASI`-jR9X:j75XC%-H"X,FHX)W&?ICIDU,>T1f@u@)qV_+(#0UG<`_NeEi/9Y4A#1/YN&<b&/Qkd-P,C,*%7Hp/("UK(;AsCd%^mRM<bKJSk5nd7>[\OteOdC<3n1*!1Hd4q6@8&qkO3+>]@u9_%+q7?M*?*K@@QahX(V%/AELt5^?5I[l>=.,=^FGE(JPLL?0]"[Z%@pm7c[/\\T_1?1R[j3c@&mHbTLHZIGa2L86Jmd\?(t-T9:+G2L#Q:4U4W`:)@"$,^K/CJ!F+MIb.=iYk>$h>M[%66ZjdZj(`F9iY%-D,R)3N;3<*3fWLSPc6Y6kZ,TaD%8>b(rq%5-AtH<=L95%BKrb#(umed1/'M299m/+$X9>jEU%V(ft:mV5R7ugp[OAnlX$k*%^H,%ZS[Td_,asH>d!_0KDCRI-5'JFTPn2CjqU#uZ4Hg!1?k'`#9LeZ&N0$\0$@SB,.D7rK3'8sK9?Y4QYN<IlRH?uB%4m[S<k)E^e+pC%@i,FWS*^qqo@,$XQ'Gm+<;'JsQHG$]B<mbubnAV:<!6qJ/,'Z6pALo:d0R0CQL`CRD$I.:bIk__lP,>N=X2lGbI:0:M^Cif,g,gK%c#RDX=]jl210VfdLbSG+`#VqfVII#E?(uJ03ieV2?F1o&]m4O632HgP&lb<s($l%g2!oX1*7YI;B]`.,5Eg+-L$e>4Af/_$4tkk!%Z!3@;!uf30`H,H[mJErc0n"a3*b;BS,FV]Ad1oIJ;M6R=rQX>27H5IjfU']rV%:RXl='NuYJfS9PpF\0"2+6nGoqCL@oNlGMGUIo%VZRG\LF@Ft#:emM?+.glNpC$+2on)]_P*:Q1kd51T[17u28GoeqskS*IL"Z31/5s^]gQ[lb^[i;.FED<69A/6@Y%+2MdIAMMicb&%QhESG^>)rT>QBEL/QP-9pd^t"ZJooCBk(U`;/NRYT[f4EIQSf^Z(K(eQ`1'iRcucrB8Lh-kV#GCWgOh>]>[=">O(A?RE^.nCsW]5%k6@stI-@gF]:<;kl',lt^V"<-`H_fT#KtQ:absuE]mOBEpSrZN@tR*Xls(\]6YILP>Du)1$e@RT#C))]J8.>b"ApgUk3<d.G>Y(s%SJ-r>UhIc/Mj4^+)1RD37=bJI,5=p^IP,,"+_H8DYTmn8"^3XsK*[X>/9AT($83X*aY.:0BEMSREOR7_:H<3WdknrTW%a9$4oqGM%^B9o.^'?^`WfG7"mp,dSY\VZpkH]I<h=:C5Yhssc``Bi2m,Hm)#6eV*<A$%+E3iZg\1bbXoiK]jZqco%oM0Ks(=1:j6[qN\ZTeI$%3qE>3@qd@bZIe4"6'S(KglM@`am-Of5,OZpmAh(f(#SqYa*TfZGqN,fSk94D@E+uX?"A-"A[%p!(h;YI:9V@R5$dmXZ;r'8JL5`3%.;.KHGV$m^)38(d_L)`(`;dLZ\]_7krbdtC[#K;EbKG;?Eof5-><%5!@CMk%H97to%jY`s46=ZVFP*cQH$lN(N^!>M>kQROk@-M`%1RHpsiLG/g(EAi7jLai@Yte^9&j52J)r/Gefdl>uT*[&`YU;I#*YA3N*l2CiDPL;.,uo'k5,2EfAt5-`ECT=Rc4XquQCF6#%dJ']%NnBa[go4\,>fI2]^59bqU=!k_YW6WS1FSuK[ME'ncVp7f!nnW5),m).,Yn&l69_44B7E/Z"tnk3e4mTo(.hLrf.#pD[)VPh7Y[u&%H7VeXdNq*"`B<]QJD&TNS_,(&fGfKocYKGZEpY1_I-4S:f5r3[>0mi%=ls(GWk9.?d`\dOlH2/tp!VYEI"\no;,nqZQZ%/_M`d?X%jXWLW?3gA$5;W21A)I)Meh;B1lL,[=k_ZD@Jl?kXdfXU3D5T@C!K?uh`kHPPo,#Bu^ME1"QfNSBJ\Cb5Y62?/1U$i3YpYm`%rn.r%]W8EbE9U"S]4b`]dqZ=Oj]VUH5M<(20%t>e$@go:Dc,oA3USU>>N[A_DmO^TO'Zp3([[LZUXn(>q67860C71!HEBs&ch_'YA,eW=%Qmk_tC9;\i)stWOrE:M^-B^,oWLTP!NTUIjOLXdF%2pSgCoH,[S_-fsrUELf7XJb.e<ZT3:;%b\W?m&<?>jafXWOr3B7o?Y3moc"%bfN;+Go;<),[g`GC1DQc^Fgs+?VBRseXN[!7[J"2++EO:Zi*q2d66N`<>^a)).:X_,QeT\*T.t2V^5Wr>D@#=#?iF[jYd;R<+1;'%mSumhX<S$_-DJUueiLLa6*n;u8%2R7b<c\X78BbbfX^4;'Xh5JVQ;0g4MN*>lsqt+c2a>.,g"UL+<S\GAWt]N>j=H\aWk91s,ork%EeEtCF*_nJFfIZ%SE%PjnUL_0Zs4`M5Z4l1eeejHiKA1!\_QGkK`;"]OFE\6FV-+E6)Og+CRHPopqK6+>stO?Cc7;8[J!2Pi9srA%TH"W:Z*K7.g+<V(E&%F:d+bNO5Ms5m3V?.V9cC8+>Gg$[>R+*;X[;I'SQW>(FP%^YHc&r1lYQNpeiPioD<uK81`B4uZ[RAUr>RGV%@3Q&^R2fhSYL;uQUcV8N=Z`g0qCDCik7oFC(jT]@Vio![a=PIQ8=24\;X]#N2.M1+W,[8W8o3gfdAr0CQDo-e&:oZZkUoa28WKeQ%A\5IUVZn/[ouB"<A4,L]`4<G5bXXBRH.HFPAj@,D>pDl^e(clC1sjJ1B8)I!5@9LppW]E@#14"@F#VAs%;"SqR6jKr#(ntOZG.8D%2p&M5Bt6Se]._Wfq_W!fr0\>ZYYmu4k7=plq8L=AYuF+OXd%"RV-KKS;0TBFk7S\)'pRk\;8g5[It&sc;L*je.=6P$leSiAfB98c%SF_NQ_AKEb-2r'AAt=qChGC9kb9@NLb7&TM3r<Kc0Y^pUWtuh;c#5Jbg17UGNhXD1f]B.u5LcXim9!=[Q#]J3U6>-!>>9%;8kk7'%WCmlm6F.3aZ,(j[+9%oDYNX5T.f'C$W3B=tr$<g4;XoOO@m%Qcf_f?@<a0f*<gY7!J6mN?"JW_YD["j,X][$^bHp*]rsSGs.p&l/%<'L4?p6Vprh)lP/>jO*dS*+-EpM-JXqs-5U#"@tBB;eTpnjo9(FS#Nc@d</Li=2?5'kLILMEAO2T7&'7_l(KTmR"$urnu,O;+[p:%.qERSDRXrAmkO(SSJQX_bB1#^qhL4g7*3sX_qOC%l``"$-OrN$\OO?+2:&8=*<)HA"%^&_c[VuQ01(B"0Y]qq]_&`.7lri(06]H7%RITAVSCMto6X&\<56:Fu'DRQ>!p;H;Zd>!7=9"8$Gr2I@E7/D@G3\7ac4rHKT(HaqO'<tl?#=]<c.X9.:Iq<8edbH941P._L3C,L%lb@l=\VaqlFW1,n]m<b[dN`)BFkR6[\o!_tf3;'hk`HU8XSKVs)#6efmS9P3fPfW"ec4%Ts(Ln/8V;CjGIr$;o8<P9;IK._Xlt6[%GTBS-.K6N+Wdg'(2B0E_S%mm]r^VK+N5@gC6f[+D7H:WO$_m![,K0Tg_>b0*\92+nDmqW/jSSq;"TLuDs#C^F629d)l[K'4rs&Tf%C&R),Oo54A$NK!+5F-dlLWBEN!e5%oXE>Ghr?f5qmj:I$)a`V<8c6WlnF)%Ihh1kN86tH1Yb?j^SprP*Io</:c0`uMSiZ?.*F*]5%Xg:O4*YX8c>Xo#`=SV9$b9K(7ri1mo)X\k\IZb%Om6n,C%$94O[GTn\)>tl+J\`h='19*KE*C#u.a+s_]QO2]DI[4`s&W+7?]YH+%1:-nC3pn'fj$0CA]?S@3ItdaZKl".L3X9g,1?)Y]9p_c*]1"=/UHJRb?>KNqF?\33rr(EE7).A0INQ"WPBu9ajE>V:(W8p(oBU2g%8)pgtEpJn`]9[rK-&%1_?dX>'8&jJ%rMV)NT6r`7$M01XeuuEclO3JV<%D[Ws5TR@mo(lhe)YSlE%&!2`$W:']TO%FS_egrei>9$%nFsl%679+HFKSZJ;`jHVCG^`t575H%`aPRqq"'B/]&&o=2]CRMIcH6QqQ"7%]=%'UT*T>:g0_q'9?p6SauC+NgU24<6Rt=3B\!1Q%4*EQMA$.be$5k#pNG],2BMTB/lqWM@I!SQ=DsO-!30pB;@2+fVl-Ki"=!UPMh$TNn)+"kgNRF(8CX#>AR(0>%g9ni9/(Mp[h:"Pr%Pue=SMdEIR[asir3s0N-Z&ee?ag+#Z[I`9jh5rfej;,A\WH[[!hs,p_qX6R24]0sP1`O+mY!XNc*6C.`'4qM"c,P%Bd-YsZV]!V>%/)+=jg3Kl!TQSh?e/QtQO/<O8PDsJ$6EP?5mD[ZFmg"_Z3k;*TbFG.\^2K7sNhRYF^'E?(oR!df[Nhfd7>L]Me(U%..F*p&>$b@G%BJqYWlqe3\4nQ)lML[=r76`GlcbL;sCZi_S[GuRAZdm@BDp\$Y(<_,&10T$Yp$4LQph$Yb4m<Ujo2jmfSN,Y=^hT5$Dd;qg`!3]Z%aHhuZC53bQ8`[Lf?Ye6<%u0Re^<&[Id3b/K7-f&[--%i1pH%^(>I619DZ*W)ZobQ(I"T6&B1(.3q5*!'X\KCH^iGbAepX)XMB?:*%#Hc9[rU>,'L&(CBn'^64nO.9Fm:tSB:prt--jN>O;SB@IC&lPC1M572J^%QR46Msl4ZunbSbKSiMDr[8q+tj60AJZR\mDmP-P4mU%oukg\#Fr:fkZn^j/=dli#')LY+!S4I7^l/%q'KbOog9mnTrV:4*TTV9XHI*Z8:!P[S"8,-UKK5Y'kD%;]J[KQTlJB=e*8i;6\XCF%jq_X!L!A2n&e&4bU8n^MeR.t@B0"G)*U1EQX6^glS70Rc27l.#(L93gcK?)uo.hXMJq7h`^d2W)"&!2(HY^B\.7pfiNpE$7okN%F%Bqr@;%!jtG>,P,WmabTi"DVIAdY\,.;`@ZbSCO(QWtOi(4WM*Q/E4,+Z?6]EZ(USO+g5)H33$!Z:p8SN7!41YN@U11RCoI&Z@o+<%jV!*\@U?@>X*(W>(>VNBgO81M+-EHX@_g0?MuJH-DOq/FNPg#!>-/.ME@$G$[s;ukY@.SUFL3M:^5N*VY-\#MMn#Nm^Ii*nokrgb%4=@[o'5k;2/BJAk]7"p.7A^WZp-[h=f;c7iccGKek.J4Mfc:*I_0laFXU3\6o*ji'*,Sg@@+dRCA3KBL?\8A+EEGH*>r6n:g,FqA%K4]m,_)_$N%n:P_7*Tne;du(@/4pCj)g@^kR""$7*Tc`Si%qQfn;NMtVV)hl\JO4ZV.8j8;6-`t)J:=O8kh&S7o\Q'j<HH5eMhW<%Y;W,]f$R@(IVZ>rk[[)XHs]q134$f!%E0irnCA<]a<^J!l_%.d1P!Tl.cD#K7VIGBI\V+QZ\q9^ghX=dTO?Ch\SUR?Xg]ARdPoD_%j,/5oGu2usXEHOOC`e\Qfi]c1Q<V%dX#AW?2%S"335'UB<"T2)dJ&5B/Q2G#L#n:1Dp*-(fUZ@%g*kmKi7si/cr$%ocJ0[n0P1g'%2p?&&FMk^6CSuLcX<XaqcHf\s\6c'AY*?I8h%?TMMAPF\[oB?!_r!HOQ`8@0JA8R74>I=h<2"Zd#+iI,^q%0[qrZR1h,aFBig'r-%&KJn-%U()-+BhURC:=VP#WHaFKqNJ=\f!M?W&Y,G.!%c#j3ACK2i_dSfst:mDpM^g\:;J<*$Uo+!(W4p<?dQS\K4OaBRej%)HlP%%dJYp;go+CpA0lh5O8#eIei@4Q]+us-;X_8I>XNUEA>T5/CphG]ld^iULXNiGPG@^j;>krf`55@4YhAFa[JDfY0Ii9$"*%k,K)>?0%Zuf@7S9@KkjqZVkCA5-`*U;KjP&Ouq4S?TBe$qd4?>HA-]N"XR1p1<nFZEd??gEXp5L`'iLY0(Z4j%lK._NY'\TG<?g_hEs"q(`[%9%r(1@+)K&4*!7-%;$n9P<mQ2oU7#4Q;!CJej'>o36a(-1q1uFUhYXRK:Tmm![l5r]Cahul]&1UWEQLQ*%AHrVgEB%5)T<7::kc_%pfn7EA5]P\XClUh[GFI'(i/IXh[Tmk'D`RndSY^.:Et]3[>9:c-`t[d5s;iLlEr[43a&_sF@aDr56SFPX<!gkYUD.Zlp\BiD&k1e%A,"9c-?%,c5q$!;51EsU,Q4Xr]H"F1B2+,6DF-U.M^3Y8>CABiad:YqZ0eu8#?PDf=2XpVBtb@'cquDBM0"R(lDT0Y]2ipPp02s)%XRScl=YF-B7GSSs@%/jaHrErB!^F6pVm+Tc?EeBbFY6t#pp[j6_f,d$CfZnsQ>>=5qt`K/"M'rM&>VVRX^:DmO?bLO@^:HN'":BA%@8o$Kc&?K-g?ITK<1$C']2NLSq^/nm<TGXQ6LGI6PD_5ab8.Wf9Emcg\[q>=c4Z[RH'R1lQ/o(R1uW>Obo'3L\m-(WqUE:2Og"Eb%c2ldWCG\mYmZfQ<HV\^L7N0f)UVB2XV1RM&3GK1]a5TYq+!sR"rT(0Z\p\l8$b<>)i\4fT`A5`4,0=-TRUfL%ks7t/A<h4P`:prO%MCM&'df'%DYM9b[TglW*K\['+=epqEj=]q2Y]AeS:BM+0:AZQbmYC+hcAUUp'ljj]##!.kjE^91idfE<c,mtZb>GQo^O6f,M!B1!%j^pe9<mIagSgAu_N&+d7-G8h_1LdkObrdT>&]tq37IbZ1%.<3tc?M>bc*5FDh!$>NAEk`%+<WK1:p"pP3fWhu8)5;_#(gKqEBZ]0%B3"i@"F$,DDf7Ai0@+(&?(P'P,Wg<`U`H#VXMBX!*,3?(<SuAgf3gSn??<a-36P;B"g(C9.S725N5$=4Mcg#^i@QU[;20=MBA*$^%[*B1$\&J0L-?$k5q.'Ah)#at3X;mC/d5YlOEOi\<VA3%)YWmHcEJ]@j6E8i_k9&,[Zdima%J(0+Qp<,@>3Z$?Amlu9k6E7[n((5^%2ZtYSjQ#XZHE4G<lF5.&ki@pH`k"e]bcl8c11KZ*e;0n+Es(mg.FI11&CI&t55rM%beC2.J=u)2+*^9`<Ea8&Ep,tP3.3O*Rj6+I%ees=1J$_87gEV>)2`?#09;LajL3YTJYI2Trp_uO9<sA!gbF;9P\;N<Act&4UP)O(YeiI^iSC#dNPsP'2FlPSde]H/DCVFerooF/S%f=$9jRIYgm\']6]b-6NlK2FL/75q](dAd)L9ql:d>))-5[<"ufF&<n;c.t;#:lo?R/=_f?2?G-K_0NTY<>N;cOaeC5/G\`Eae1']%3[h0i]IPPDh9Q/o9&mYfbpuKndiF8HaT#GI^3t$A[XVV!1e6jLetMQDF_9:n>V'b,ZW9'2hoM^EN`+7`(`mrs4`n0nm^[nd[oGmP%q-Us*Ah)kH0r2MrW%,3`,eu<YM;6TKZqdG>+UN^i`C:W].;r3e<kPE_&!238%u\EddRCbCC2pHPn`eN43kt2?IC*7Klo\G+3a/"T%N?>8=Mk0T>E@Q80pA)SFo3U-Q?JGG-Dg]2W=e9rEgA^]i5E!LKDq/=e_>Wn5EVe5\fVCI,9,i?jIV=t?Ibo@VU?Kk8%R+csh3[.K%]pX78J&_GF`TQn14J/Sd4?(T1^AO@l2tue4a/*\Z/$JI4&V"&ErM+$#\07-H592<5irOW\q_rMahFs!*n&K"Sq>H-+brih_mBObL%pIjV'o_nk@NPBlrH+G'G]8,]c]i8]f\**:D-YfZX[rYi$1T1$4Ei%XgJWK9hEGk$qdi[%`;klRV=k"hr*WF,q8SMefS.2&C=,t!W%q9seum?=CFm:^nCEV6&2MH?E5L_o7;2Tsi>\s(<1M[qY\HMYh5rk4$3eYE!p-`aF(ii`bG#%ftUahXN#:D?THFX:ACeU*o)U2N-Y%m@Sl'[I870>PkF?Cq&RkIaUm.\]+B.Z_t,I5/nr>QVe1P]fQSBHZ8gQ$?K#3FU0f;j+-af*Z%^i.Xjh0]`7gY'q[Ci]&O16cGgng%=a<)rX^c*KI'`Lia1LX`oj[IOVmkcsLX2h5Qf]Y.b\+M/r8[*Zp$(_)V5`%$#;6j:mC1'`Ku8\lIsc&`k"'45lNY`SqTUVlE9d'c%q5e^dZ2AilA]*6R#<S3jPEuZ`95CTnq2].nDK]`:H/6L7/e7mYF8kg^lf.9[?H33TS\J>VD`rJs?>1B$p;SH8g$[<%GneT[d\il%%`TIWphbWEB+3c/#m'D"^AN"=b<k9qCQM.)/(Zj6j-]SIrhe*bgdPmf!.u,YLa!MUlc^XH6dnK0k2r?cUbFO8#21(d@!IKd?Gsrs]%[`Vej`KSuo-%5E[X?(F/cR\babC6TN?9Ob3NN7tQCJV..<,hX\e*s!KM&A0PS<uN#.uk^cr*CpTh^:guSP$0^lr=Sf*"TQJH15CX%34&VC8+FD^qLE:MnObY?a%h-#VhsO"QB2$Pn)p.Gcau!R*foGKgVp/OpsbXail&b"HL[Suh(MMa@bn"2)hr&+r^-7O3;orS\N$q&%eLEb-rMW\cI5AT>I(8cjV`;/toY"A\T:7:T+#fc*UU/3(7FcPR@Q`&M=,\fhfqOm\r2OEP:4+WS[FZl(kA,&l>u"]A(Z#nA(*=RT%](G!GWV<Rjo]`E9ij51'a2R6)C::X^n=WsdI%Jt@/kpKV'pgk/4>4F=D!r-@2VJh`f5hbiibE=NYIORJG,Dc0AQOb-p</HTf#h/o%Hl%3U=5:@]5$n06HFQrP[.iX77bRb0c5"+.C$lbOD4?="rLLE%`PW5RHc;btVlRe#<ioFcSVg_hcPA_D.(2$+08_t(hZ#"t*pT*P%`Kf/rpdBIKD1$)<@VU;ejMSV"fugX7I',R,D*2"&4W9C3g=b->\G<l.C>?#MT,rKhE5"F5oR?2tq")eO+6/WM[p.n9?XG2@.pl>G%j/]dF2o[cdf95[5br=hGms7(Miu]N2B=HY9+5bg&mZ$\-dE"h=<qLXs*Hc<ZdJboXhXi<T9(2a@4#+J"\Ml7.4?JsuC$`U,R+no"%-WL#k:RJ,+G/Bm%\eC.>4Z]$Vrq?5eM<ar<NJX!+dIP6@qpQo+S%EU%M='b-jsE8ebhSicP.&CYC7DWV7/_ArCuW'UrI&L&ir!ZT%A>2.c5/&tina,JrrJ-ZuHa@'dSD9#D^&EK,']5J;96^,ZgjAn/?+a7<Wr)Ns`oXaXCU<KS]seNa:[YnL/\JU&428+IYI6.Tq;0NQ%l]Z[nhmsWug:\<!al9(R-Y&@(;]jRl-YG+#mnTnUgA.Q3Q"MHdY>7<P>`=]O-=<:U3LO-!rFBM\bE\YpIN7g)R/GZ#r@rTm]jW;'%msWr\C`a[f9be1Sajg:<_`(MjWO):til3'7/SqH5;pQEEl*8@0(O#!7eCo],o;V,VLJOd2]m6kI<Jqd;e8a;lSiX'h025`rc+LeU%eU9Z+J$)!8iI8*(V0)abRn(*b(LOY7q^WUiL\E`OT0Bme^+nHXs7PA^mJ`7H3.([AF_1#jn+?E3P(34u4t06nNm\He2RNqA:VQ__%o[<<*&(>;>'rSOe\#-$HGA@H4LTfF4e'5kQ:A5N2O3cTgX<5[1=(XC(h!41RR:fm=V3r,aWnj)fdco`7LKBc81Z)BTf/&DagGI's%O/=iH-EB@C+-`Wd:HYjgW]qOeH^UBfGT#D>5Bo!7W]g.0WdfH$hlQ3/3,O'=r1MZqq`HqrF8TTMqpsWjUR1$<Zdj!AdHp_IC30+I%g5!siD7hqjqgH_UAp`QVh:Uf+l+MqmLO+5WrSceIf&qf]h;uYoNJ$Z;_iJ._j+dlsih_ECqkroG`m;+ikN4+`cH`tS\aj!NrQ"fG%f?L)Ag^\VbF5M/uYK`W(hO_qs*.Ni<Z\tI-8p4sa=aGPFVGTshGGa8aG#f^B/(It@HWb*t3cE<)^PX,Zcb4b=5OT+1b^AO3jk'<f%KjHnAl.rDDo0eCHrl=0QrFgMgr&BSk9q4]!9Ple9e_?UMG)iWlU]!.4lCZP8C3!m3F_jsTopL*uA8C<qXjj(&ordD`g/jQ*3e+]N%UF1OJb$%$?5HCEbQC@Ymjm,G8iBc^^5-/Z_rF:!0IQUQb3fe,5o.@,4Dsu[[\+hHPP2:O,IpYA4anYamBP]Glmo<t`-]d(_o'59%%Gk0h0]j=V:Gd!TYj*P&fHhsCJde@Y7]VndVc+Ee2)07KU*17lZ+#s/U_;[9:e[LlgH#\;VDSP#]Zhr#3VYuX+S8o-`'C4)76[\"]%Mm'<K\=KPoe/`^9%p\i?\n,a=]motNA_Xu&/11AFdmr`<nbW(UFCO:@:3HO.B"Bt0dn\dOSNKZ^eaF*bqo93`*]-'p=]ecI09XP*%p0uujrM7-RfR?^=Rs]>HFgL`hWOu>^<3>$G52*/g=abDermgs;]it(-EATge*^?iUD`ll=3EUQ3o=Hf>IiNn5p13UEa3'UD%h<6D%XOg2WT'Yk"Hi9c=b/@'t^3JIZqP:_&jluX-#:iUE5-5FjT=,^+WFp9nQ.'AAf/m?2D7!A'T@K5L<hFNg[Ij:m`f'ZUAJa6R^,8&V%I"$<`g+F2VIQ9"#[Ejj'dc&7,o)%JA8*046CF>&7+.n!h9]'*F/\Z*mS].dj0.%IhSV,V#a\$:G6!Pl)eYe\7?LLnUB`H%Hp"kI^%_lDHnmoEe4PY0IZmn_*Vp:%H3V>7*gNMT)D?tSZZDR$k(G]<@rq>U9[h;q/u-gC2JrUeq:r^O*gU:;oKjFs#n?XKnYXOARN^.]TL%^%a<Dds2h-Y:D9,S"8#p+&8,n^-$bh4C3<CrVGbNH"Q49b.Gt)Q'Lh&MpAAk$bcQ)BmjIae^jH9QWGOror#!k2a2Fm5PaqokOmSU%/L>\qkcIVWcH"H_H[9[JEcp\sq8)@<cKFY31TIskp9_),=keDWcthMT*u3C?h=8U5fe.\ZIr?[bf?YN,<]<WdbE"Q]?R*8SH2Q[\%`fHtFqj[GX2R0g`D"hC[YP5I!VYK9:if.;_NPF.;V^KM3h]0npRCCZ:S'fu'nTX_Na3QtsHa`qAe^f+rlJ:$Lq7$6*?T2TNgVr^=%fknM&m.'f3_XtkAEURT@h1L?NM0FlM?SB(h[.X@A]?^,FdiJ&QM:u)oH+LG*1puuSrQO8%1,esBI!kSSr?jfirk<IGFQnF+q;qL/%NS3Pd+-'.K%R/0e]B;@Y^V&>$puSjUT8L%rdAM\^eRtM_+"joaSLr*fITAtp#G5ADa'V%QIbfLb47hO+\6GA;I+mE4Da41ur)/t%%S,DhjI:<0!]/Nrp?Wu2YpGJr'M6@l;:Ieb2m_QNKd^s]rHRmRfm2^R6RJf%-XB^.RS?(+W?U+8pCA1d&GAGNrn%>iPHG6pi]3*a6%ZiB7Vk2uZgiQgS7kJ@/P"2E^I)4Nb@lDi/8Xk,)26i6BJqr+#sW,m3lo6I4)]S]C2o?!oLHF*2+m8<fPa2-0Cq[XK5Vao(nj&j>P%`uA5]HcN&?<q.GaF8kB6F8g"=Uj:\Y1m6[_7u]Ir(-X\&f2p)jr,+G(<k`M>cCTH&+0Rde9rFG8V`WG747.K8f:%behY?6R$WTD1%s)@](m.o\DZa6i]q:5<>l1FuNdXANMIP;j,Bg$R7?L-.bpjMI=s68RPN]&6<Rp16sg9'&fX0KbgrnCBCj8DSe]Mjb^p!30WQ^uFY%"8ANO1O55a^JF``&jq[Q<Vbr7Y(V\=_\4[a[6nJk'Pcfd+^TP;KK*bSMP,1(,E;KZkV_i+dR\B_j0&q=XmRmo/P-c?Aok!_^O:'b%c*a("_:RRLrjEMg60Zq',itSN0bqF'8%uAY._)jYZnH*&k^u1clMaoZ]iT3^Y?as\L"5cL4tGM0H$18W=1:sDh5+`^n+f;8J'4Bh%$b7btDngPTUt9B8bg5J+Pcut<9AW!SH"@M)D0-5:%g0c,X],Z9KklpX8!G/J*:4>T]ZZ=m&nUKj70S(Tdt`F3?-'KDPp2u_O7=5R%M+RN.3)5%sU/Ga-[kYYFBqkC7QaB=^q-#5oWZLsf;$u1n"Tgk,j1@U5P3%\Y8[D%8#4M'NBK//e6!i.!ek*!74&X4ZHM:dg#5L>E%Rue>.]AIE`f$UWih?.)H+iCKA]W-S_p%[O$V>^jI6gq"fOmI)P]?^QSIQ/=RL$>#BL\J_F(YREAQ/]_akOI)50en@tnQd@%_cWZ+%;PKD^jr1EW;^eCuZ!OL>F0Ta3ZMt@gM))=b=gXdLW@E2TF9.pE:W>-39Za2p.X\%\cBYK^W0s#N'!&O8Cm<<1.E]"N.ElXA9NgZ<%.)i%$h5"2<9iQs3N_lI++dFq7?Xtl`9YIqq.9*7J2:SBo0T%LIe0e5EWtNMX.^B0Ya9O1e8OS*4WG]fp)?YstFIAf!V^8p=FI#X8%0qPtEMdp&`"MfV0OXm8c#]hVqiH-&\CT",.9rV_;fb2CPR^YppM%E9B-8G1a3%D4q>[5P+P!e@E)EUCRNuXFr\>4P;U8BGdj9!RP%4t7u_3T*FnU.$J7Qo!6U9;qG^=a-Sl:!!rO8E=4E7[Ie?%V:;4#YdQC:.o,6TRC8UO4mE)9bWPtN1SH/Q:Hh-'%>$o+X$%%U_q3e%LG-$0_N^iHXb4f[;A(8mh;`kNLe>2,&suRLnRKG2-<qAh;ITZ9UQUd\ShZ9"EPu8U4F>R'+FB#,-+$Df&H\qjg<`0bN9DRmA8i+H%9V_u3$F$:S#\jM(,kY,+BUt'L"uWleISu+;HX07=.*5Y>L"<MgM%nqN:P[",70J4lH32J*nuqtmoI!ClU,9-nEl9Yl'c%Z`.25N+%MMs7rGVjE&6&A7_#[\h?#mHbt))2e,$o:j;6&,`u6=iRlpa(O'd^2D0Y^uq7X<r8CW#QE%]_>[r_2nut6.#6rCFQ-7`f=g^C!!5U%qB.I<KK1Y3n2P`p;LlUa7u@EV;*WaTKMG=56H(\*Ni8B<1g!%rmWgcfKST"W#E`^f7$\CH.&(&]9SuChNJZRVQVtF@E`S(*i"F".%fg1FE%Md5,Kd;Yjd7i_X\3>'?P=Qldk[sB)!k44TMae>.E=%fEp]M40jIms*$Qm_\,V4nJGHh<i3Ja;0UnLN"ljWD?8JL,8!_c3:%6[M8ha`*s8V'QaP:25*L%Zul'LaqG$aeUbT<@!IN#jc.dO\t*n-<@+4d2frpP):eV.7T_dWD#+rCdQXtX]#UI$7SR-'LuP=WsP/J%TT(!!e&Ek@[j;RuM)c>:1gq0:F,gBb:EgAO!!gmYPnH@1`.q4o8P3B21oOG?$t2o/QB:;S:_sF>i/hPc2<g/^$RC',G`_iC.8eS7%0ffVB%2'd-Elt:8V:5[Z5c(8+d$c43N<a82NCAko6j2S-*4a.f&1Wu:c$>EYRcGS',aJpLeOi40a_Qj08=lXf15-u\Wdun[f435s%B-Y%<1,'"`b4>skIE^)`%o0oVXq8rU9,%FlF"f!I;E*,9e7_d2(Rg^Z!KdC*m3(1@e.3.WJuBi_3XB\*5K(!`#QrmO^lP.1k#e"J%1j)+k1n)s$Tp14M7#N<Z7EUP8/;hS95^sK5Q?\K>Bi;AkW$[W\@9K?PaPJ[,;i=Q=+^57&W/8nn6UNW7Sqr5C$d+*]'lt25/!Ad=%@-oi<%]FF-Af@283l.;1`hGhQY!GcM4>`^^2?WDmU-,eX<<R%=0p,Gd5Y;q^:_E$<3T?tCM?g1:i1h-R9S>d(Zf6%`hSXZ,K1-B7%/qJ.1,T)*?W=l97a6Z5K1r/W$,bBe56tHM;KF'JE1CBEXR8LtS&]"1m#W[LK&sdNFGHrV&*0uhp1Vfe08Gb@M`tEd%A(EOBMUkC8%,!D<*V"/48^go-V^oq9!&E>-CG)_=W#os8pnFtk(eqm:,SO>#<FV;o,!'7bIo$"!qMHRJEUM*\0Rd:fQ%%_.cP?HsU`N"o6*<TG0%#U%)OC.SOh";ii2`<87+<`RN>":Wd,ZDPbNX",_Y;(/j!CrEHWJVZ6o%FgQd,o5(5_[)5Y$-T.j)qk!a7$D!m>p0)IZ>@r;ni:Ck%)N7#2VIZKaB'qfr]3u*EC#suM1b$KO,*5?l^nM[Te%l.e$dnm/_%Ha9UcJD3%?(Y;-:A8B8EAu+Sn^OM$tVgJ&QkVa$6?Hi$!<=m%6/;f9X9[7^,&U?dlmB$!8r6Xg$:\7:qudBH(e#m<Q%oMQhG>IIfV3=q[]tCM_OaN@qB1-9KFV!V'kDf'V5b8"Pg[W"@]<0QCrJE?%;;bYt%lC0s)pLtg6);Gm>W7Df$n]\h;62?&%D"$#':3MX&i_^,<`#SF88kEBJ0>ktFW:hP.+)iL&HXQ;@jhP\OKel9."[Kkq'7Ka%:uPBT@1Z#^&Ic5f"<.qT;R3L914dUcWD(Y]A"&=Z+mGmL%]W>G,>s1)Jh97u7Z"L:!nL5k7MY/VTH=9R<Ut,4I1/N`('&mWclQ5U%-.g(<f&eMI4A/MV1;/>=B#rXK70--I@D+Bo6?5'k-\6)L,-DUsJAjl6;1_-UFN9*R0o8A@'U$c&k(JQC_l.*dM&;cDAARO61pr&d%Aq.a,EAhE>P6k`-2,gK7@1KLETnPmb"*$OK+\ElDED$B?%4^rpK+i#<rP2:Q2,seFe&P-5E+'b[+MrCQL62m15m.uYW/-O+"i8dn%Sk4p'W@Z$,98]k"#gR?4/4TC^%83@fZ(OpVX:+K)]91#Y#'*s0"G]39'G1o\UbPT">URT*ZH==O3%j.JE3RiBB\&7`XO0quF%"JF%2<5nl"^+a4<**S(cr6aj/\)ib#$t5`GB!.=1uuEHbbcAR.mSlPNMrYo5SIASZ^,BX?m%fe@hoi5K@cNSf0[1bNSn2G])]nTn:_PB%UW<V+CC$7/)A\bo@J5BI7m`X_)q'P877Dl_:dBR7'T&]CWtG5EI"scmS?eKS67GbX%0JLs-\N`[N"fKHG)$oH&V)i6%-muC:31Z4%joaq%<&ES@7)hJA]h>%a@.>.J\4E;4XOnsm''MD4?V3&s=E5-"73F:d'm%VCWW6CJN\"XZ]W%l]Z-KR$UP36</Kj8M+OA+3a.%`S%81Q]d^/UZ)?>`>*+R4"r,VVTI4!;s-BbGMd9d8*'eUoYC;^4gm=:(#DZ%P[k-HSeXM7JaJ9P%@e'K?hiKk;Qa-JWK:!GG-W*&/fC%PZCND,c-q4pP>(ifjZ8*@rr"H`/YmQ,8.Q4o#M(GWDH,P#SR?ibK,^j8+;(d)PuYYljSK&k=LlnA7GWgaTf\/#nTK.L_1219!Cko%Nf7Xe?p1?*)(_uCe+D=/UI$/M(eoZ_f[K&DPYI%6OB5fp'5Df+957(7`1g),&P5euO%Ci6r+P(Ik[1M&j"Nd37g=Zg$#'VGnDkJ9%jJWI[OA_f[1*L.6!nm8U:25k7N.nZc"O<A@SCjq(q8&lTI3nra&F$Gr3DAleFAd##$PtE<i<qa#_*\YW:K&MN76Q6XfZ.FO80AtP%FUI`s,_7tS!j+G6G]\KGHq[=Ea:g=S.Bpl;cj!&OC;=p["A[+r(!*3oo#;AB1?g[?8/)rO>:F9H=DVUE!3s<Rj;/E'H2+_7"Y/2F%jBe;WaXC%0>/W8iP6+He.U&&<g%9g*@Itn,XZ(;!TJ/6+Dk8et%sf0\,r29q:P,:g/;=`.N7l#oMjFjpPhS8f2e[VMr5(?b6;=cT%%@9NEH#SgtqDbol2%\%q3_c#A,V=ck'ut&!`g?sV0m3]gJV][3@h/^cn\fT%`"\FY,&ru0M,-s)Je1dI3F3pqL=n!Kb@@E[">UCD%;5B[$@L6R6&pR=*R0khf+i?V?Ym8Bo(F`,A0N`e(Y?V`S#3mMBCrjYm3f.tf_9kTIF1_aTZ%oP+h5oRbnJnrk&1""[_$cTK]L]kA%KMirC6:6oua=D@/7c`B.&dJO`Y)14@%XVB8^I2+^-'EY+O>da(/6HTV1aHL_b<1\4iY]T\;JmL*[f:jrP.'-a<[$/;.(+#NBt]=(%7mU*olkMQ*L2EH:80]"*YTgL;^kZTe=M_YE=Urib5OBjqh]O+/ZpqP1mM&8F2J#0&%dGDnU`*Z.a4-J#F;odKal>"m6"Z=jfC7_H%#fOWF6:uiW2mSKC`,cA$"[+%r0d%Q+#RN0.?aP:1WfG+S/hB#;ECiTT1^XYZ:D@mnj<to/RI]HA%oaIPH4k1Y5W1ka3$n>%\O(42%CMUgG">>nt>UUhkB:=@68;UX*5iGNMQ%=lrjKT-QTJDdq+=,+fR[3/l!MmO>L3cNIF2jJTb3#r@g*a'[#Y[-<Tfl;Y8gA")Lj?(V%er^0AS7q%'-smeA%?HDm>`,pmd>)DQ!W#>1DB)=c%h56@Cu]28+m,/ZLa-UG,&+;5>TkSJ(]XmF//9UXRN's.liT%'a;f.2b9&2\%)8aci!i?U"RL3!@V#hoc5FE].a(g=Z%JG"o!S5JBY95Y^:]j0Xfu.IG`Mqr/1d[M@<`0r8b`!a!TnGltD!i.H2%Vi3>I]:lR#aNS%a&YSck/nGSE@3T/:bkU]!WhT7_BU!+m9!%TTodVK&tINL$Lu&j^nEa9`+%4^NY'VR9Ipk<BEGX(6>&_,-1KiW^^s^3Rf*R66+e>q%`0AMn-gYr;7u@VW"iJ.]CjG4ii5!/W=7!%-"<n23Gbp!f8cV+qkMmCq2<R?2*>0Xg*<1O+A71Nb^n(m1-!W<N^m%=($'u2:dj$3.%0N<k,8Ec1>:.^`j2N:6sCP8R4+_C6*GR44#)M"5>1,-%;RR^b%Jk=*S]$QndQCEXH_58#)W55p(#NNY^1ZBR/HjlbBSg[_h!b<.r%cm'U-@AF1f7oi[C^f)]hjQ%<A;M=NI3slP[&ZO(XU4-WWX+9gVOpA9B"Z'c%'BClAGlIVi!D--j*C5sRcPZ8>!J0'H]TKu0&ZL%g%PZU<]Cr!VmjDu#tAufDjL4tG3)J-b3ltt3d4Ed^N!>a^)PLYm_+QJ9[*DeF=*,Gjnh>m.5-Dj=Pi0lBU#Dq8&2-ro\L_+T/96ic1%/;,$4jWua=i'$'K$F06UM#N&@:NdOuOMH]D"9od,.`<@4J]i3r'*;BT>c?;u+D_Uq^k4uZ0fJ9,Z"0]I\E450`1n.L"q]kh]E=N-%!=oh*#uDkinKF9).16QO&#<`)Kp*MJ.67I<l)[Qej+c<Pf;?MtK1!R3FmMQGXL#JEU=C"[!$gK\oVR5d`uEMhirbJA1dDCUO^s=o%T+SD1*$%Ks9EdG685UW\Y__2CE_ltG_/W`j"c.7iZm"F:0PF#@%8ofT(dj6ANN<D1;I0EA#KnF@R2FBZ^`luUI5.\\/=OfFZtMSs%O:#m2(&7<249GaKkA6E)+n6(%LK!PLZ+-M+iHnKHM'EgXT.qNV:aG+._5Lj*3e9e4XmEBXnKa>>3CG;?CdCHC03MofJgk.9<!WR\%bqtR6m(2`\^%3H=&WW!b$:1lr6'<E59]Tm;8Ko>ZO`bnmk^\UIlT%)+&F_C+<e4\]K$pC4`$iOkE?l)<A1"PGd2^L=2A+Mo&;P;1%<^gUeI3mr=L%Kpe$ipLlHrpC>(fDl=)Z3V%`B"Y"g9Nr?QuZ]F&`Di9Tu&dJ@3^"MR0CSjd8/D4UVX/F"2Dco+;:QI'C9<B&Wp*h%_HP&m`E8cK;8nW-?7;#U/HQ(7(-jj#<H/Zu()J2NMfg2KPB*Qt0+R4Xg]@,M\UulY>A/74Q=eCQ:]kYJ3TPr=4Ah2'C*ft'Ru&T3%227sM2!beKeP$':`4h+F@OA=e=m1tk6-D#'p4OP2F'AeWks>N#LuA:.5\s%lDoG5)]U-ka;?J1D8j[9c'i&4g`f3?i0F<jTCp.nV%Pj(,YUC%UsZ%H^7M(?TOiB\3`,JkKU5nb3?fIt.&A1XuTc5+4@)H9NAb6Ho_&geGXK)(q6dTWQC6/W3J*c<%sG*:7c@><8T&I>2'%/Z>&p7+.!;f%BK$0&k8W6f(5JR"OA8OZX@pBVB)*(I9XhQ1r*sKD655,@_=b&kOcq4Y1\),eql4T@q$j[V<mq<$7otR3TmN_.QAf%X,-`(6rm]Y3.r>8C_OYjg;Bm4$&D:WVXY?>V'3:5^i2QX'R$C@i/L;FF0M_X$P1WB[P)lAK<$0X!![UEH('JG?o-7/6(MQ6Q8h`q%"/T*&XV"#9#=8tNYSq*lXCO)O3ESlVOHL3,4,*c:T`g'#''')WLpp;.2Tii;6B[)D8T(J7%[#BH<eb5dc%Us&C6/SH#j@@6Foe2#%G`W9W5X61m.(6LFXFh*QpMo&KUUnC-?6TM+^E[DuC)`Gt37I"&^SF3[9,AkA2EVVh>7sP)&/,?KBnSgc7'"+jZ!f_^MBNXB2Q7Gf%-QSpQUgOjnAIbGiQ4ku0P^!fs\2`%]`NlrU<5qU\)BiMT@l(Wb(hH5W9+>frCW)[*8:$"<b16[IK>\NE7;uBC-5E7-(PEq\!L%JM%9EFgXF/fe?J_:8(1U)MbrZEm&BGLHa=L8La)!NAe/5d<UiWMMBBji,d9"^EY?pn<-*"*Ujb)9EEfhRB#2;F24"k/eOkS1+CA249>%6]qMP9"L44AqZ?]`mP\E^s(u4Ct?^Ip'O.jh+o!9*fM-(OLF;V?#`=L449P4B"Y[=nCA!0!aR#irPnCLA4fl-bqBP%*3sq8qbWlJ%2\Jm7J?\e;XCB'dop@u,f6M1QEV:2HO;P^4_l!(T=omWGKFJGW_uMqqbB)TE(UE<sRdr'F5RkEF2*!"h.\QhM6\LbW>e1%O9]:gY%?4+<o7LH,[AApshg#J(3+iF?XVG[`B"WH,e#4XuS@8i?+7LiY@S(>6IKG)2efcXYmAW.nDO[G:PDA;fsGqGOh7@o&r:+7Q5F.Og@%4,u*h3D>N<aYSX;NiY_[M.Mg(M;0)k),D0_1T:XUX5MYTJO4/)f.c59U+d'27i?Rb7Q_!?2d?m@<@>Kp6A`baRY0dm5iO9=1ZD[O%%4g!H/LbROM*2?.KI"a?R@m4U,Toh3P)/.?V\HbUga2DHJW#XAP]GIb;6"GV/#3QlSCA:+(d)_KnA:0?q%Ft^%_JGB\Qj+_,oB!W%-!AZu6#7`2>SGk^=H.oLL1Er?ECPjjM814/?'91)fZR_p6#q(f+;HirH!uPmh#]F0ef$94kWPtH,W]rE-PB]Im+"*kW'npF=LdOi%,]&MhfIl6a>IMlkfV50)Gk_OPiWLG`0G57YGOnW:O^mC"Z="@IPmQS],uYOe4cAi?c?$>m'%kFD7#mC.SAp_U$K&]#,hU\-OU])?%k<,K96oU:n!K'6:PiZ0!#Q\CZPZY.u6]rZOE-"%c($^t:F)W%X#P(ZMjj@#flT2IM!JcKq&Fg^6$.(bWRQ86RAZDItpc-Lm0i,]+%P-*]\&K%#PXZ%DQoa4XrHu9I<MFl2`a=X*r_$/oK(YA`GA0/$a,.oX$3)SUK#[hU"Xcg>'pkg?SieZ(@@Y_lSnmc+r`"qVi#,K@"%6nA]0-%#oLJ4#8b>(l5pn1u0fHdt^%EWh(">9r>_8;&^Z@\Gc1K:Gk"&0)*i,?BU#=_J:b5gZon;&uQ*`_/:U$:b]u\qG.9;@-kX%jdduc"Nb.E#Y,`\8bTS&;,&f1:a6:'e_H0#mQ!qcE`N9W`n17mV@k%BFG?#HCkDbrWU*U4PY(<ncIRTLM\$Ko8eoS83=rSmH'<a\%`^*J,;1U,I]U(JGP#@$j(SI5:=W1iS6^J&m-7!LB6Q"1R/\pTBCi(E:KY6+PSL,#A$]RCf)k!LA3KoTSEY3msO<;Cs6&:YnDWhsc%947$b84OCT!Ir,.S/Fn=J9UoSa!eTcA4^5W&-=W^;X)RRd=N(A8"A%J8g#nZ2&/BR"-(A^:Em5;4VB2'mRlK&Uaa-BGbX7C#$umu%7o&V"</VJFLYNo0TW(Gc",Y\^KcD;]4.ICU10LQ?Q4k(;'DF_RfCcIqF4`81;!T*h[b(UMFO;J_N1?``40AQd+rO@=^'#CHZm),5%-80$.>3HIBi\Mk+Ot$W14jkZ:VM9b$6O"U*%rOUe^#or/M&<#>Vt0GF&[>%5G,0t&]22p=0TKQWMie5"S2/'Z+hs2q,K3'rgIb_l%>:NqrSYQB(7^NdOrX?5D;$9f(aTF0W<%E.63=>1f)6rAcYT`W6-h;1"3+\m0?mA+1Y:7"@A5>`++7`5JgI7WGjWp`Yk(Gb5%@C]h%#Ka>='U+e(kEpShC/F2XHtV+A8RsV8Ch2sm=_sooNc!_$Ma<f19p$PN_%HC5=MAgE+0nROHk"./p.=S'll$k080"NjOCrL6,YCAi%BHLp3fMm#D5^>9MSNChh'dU?@S77KmP$!;R1"(+<X:QpfD4DRqcj2jm/5NXK1K14@1g0*2:dhRammWs"4sJ++GhrGlI(hib:>Z.&%fn>!'YTk?.#pWZmH!V1[(H@(6G/fVUX&F1-@5<'5(RRif@PJGG:3,D/jP@&*5n9uK'u_VufHPB3&ksB)MKOJH:9lO<3#(MY5dq&O%DA&[t8OA<Z()",]g=ZITKYV8s@79W]=RIGTUD3?ua>N'<V!!l(JTE91?,of?[b*m5#nsJ?I@0GgSJ."gOR5iZ[%(2)XcUV)I"EBk%#Y)Ap>Sg=7fMRLD7Y6&lX;pCod5``rm+9?[&IKbYOKp#Kq+qa@.Z'3::.o6P_j890'L$(@RfN43KLW48U4jXr+f[qj6?-`_2idsn%OM4Ek.(7nFliW"s!CtRd,"H3,d*,#1Gccp$cPbn$/%CR"</'jo&=\T^--G2))#9dQ(Fiak$'E>3o$idHPo/BXNPV/n*fb+&Pd`(R%gPcf&D'C2sLUkj?LecWCoJ%G;iaRgR%jKebk9WT/9Gq>=+!HULa1*CZ$53W,&TJl58DuE].:S=0+Pn7)_RUda&C]97EO$[<6K@m/%QR:=@>UJ3l+Ai(pd1kio&oo;(7uU&MX&a;;N.\j-`hJT%TtTr<KFL;d@3q`0CCst,[e2APMMqNq#_c!"S5uX44dh+%Mc;M=$WC&Z%,SRWN,qTgV+<2s'-=jI@=H2IY&gR`,=rb;.VC17j.i^WiZ7h*6&Iq!=Cb08A91MZ(p.dZa(:7V@+<cKA)3#(`)l[YZ)V0p<)G;>q%.IB*>_B;[VW20UQ7SQ\q)9n:sMQh&n"!-\U;[j&fT!9P3VpOVNGAmlt@Ru@iU1A&l+La9hAr[D!0JTl@!:jOV)0=/%_8p/jio>"7%s(P>P0uc^@2*;8V'?DrI8I^b2@Nc&m`n>?MPo]TGEeM?P7p'bG'eGMO7S^ft1rmFU'`1;;q-ksu3`cSmiclCsE`jOqGTMh6i>Bl?%OCIe7Y_No[aqtfe1%d^E)A@Ecjr]/.42=-Td?3(@d>GCjE"k[H=j0p*OUVjG7>XiU3#7B55Q[j",U/;lTJ%e%J<l]o_!WIWIa7XG%f+:&aa:gXsm@$GO5X:56G"/EljC9aoo+:o6>NBaLP=O%\eR65s&ElbtJ!0.LBN'TfdR\uX]NZ*?D@`fX8TI*d8VHJ<?2tIU8Zitt%W+E+W(S#StaE`@g&ZeTP>Y_1>F'_KE-JQF(S62Vn?%a4<g"F4s&^M-+*g>sB+`SG@b3]pED*ft>3>P8HS#2ACP9>[B]`a,_8=R[)%2$.W$<a_"=,<Mko9D0$;:"`JnTeI'M9l%Q\@9?Q(b+(Q/!D=XVX9RUk!!*]K6\ZN_OqYugD'd;?QkoC>_@/cf'K4(HkKQu_H'[i:%UecRS)(nCZXO&/\+s8&;&qH&=Ubh;Qkctgr:9^,n#FVne[4D@*VKiL`?rKe*(U,dbA^c`^%h"O9Ul_%ajJER+N("A,OqD+@dPu2R%1M.hMS4\t+%QHX9l?H*VWKlN27-&"l:XFcn53s)_(W\tsWk_c2(oAG%.I<L;Ckj1_,KrB<Hms)0U$2UY8FOZW=YP7D==[rM3Q;ZB%N/NKu,-bUMdp1+K+Q7jaW*8OVUg=PH`dB1o"bDG+aYX!IK[8!lLs3[mTgJ+DX%^/7jO7+3L):Dmdj0EK9Eq:VBhg3FEM=a:-nFGs%OK$NZMDtD-gi0JM&.RQo+mt27Kj\tta<5%]-rmNO-&e_V.C=@sf."Vd9*[9RX:I%'V.tSk%Me>QjZ(or!ES(3_QF?np_dd`OOVFt%'p=55dOK4E=G[cF/UKrH_N.Ht`NaDV6:hrC^oSLZU>ZjZQstPBZ%0YVTHrY&&d?<_McrTA1l[1^Li;c[H/?I/Yh_<])fbeGD#fqe%34Mc&an]6];^!BPgZ'i](fq9=2W]0*df-p":-ms[art,.,mYH?3%^2PdTB#FgOkHj<0XR^6te"iK#AYBNEI3_d=\r(SBX9`boW6F%aPs$OO$u\G;+Me)2+6(iP-eXDR;E?s_Gr(";V2aoIE"M]M36GrbG+,k1-1Pt!Y^T`__m\F$"W7=0FENN";!.SY&]&6*ecpErF*#*%??Z=),&l<e%)k_,,^UhkGL-%3o0tVC&`,2CJ'^e=`UGK?2\/;jA@J$"2\`$M'IGJGiF*e(+X)CS.hY.f=TZ+KJXJt!0k[e#!7"UX%.tK9:fV8[lptA:\3RWo9,S%b-,#K[@1LiWB)1sJO@kV9uP4h^aWFU0TjID"!id_d!I";,t/nF2gdSHNR!s`F@.1S?[S63]k.?[cM%)pOM-Co:6(JiVV%3&p+%8sn(+i=[@9JVoQD+ZnmaXDB-ND&e^A`Yk$Q.gM7)'T4!Wfol_\/?njlag!hBNSH9\CN<a)LR$Y&E?P!Z%K]?4J/r2<dS!j>.38F;E*I(0MNKC4$[<-qpooKE6gp1_t&fji<:TAD]!`dUd/>GVL=;W\7%1S`\36oG+<`Y'/_Kgs)*C#Qt3m"G>%mXPog_ENPsZ,?F!'1o[m:gOcNT.!Q>Tb!Ps3"Hc2&KpE_&f6EaKn7@"2LkdS.u$Wb1RTQ@7q'S1lm0bO>hPWA3=F_;DAP(%;!;>D%-!ZgL=^]mkG<Qc)'rPdAUbQAAN66,#+8]hCZG']rn\ik;="*n2]]7:mT=).2P.SR>T_]oU;_l:13rp];+c;obMNeC5aGh\sQ.^a:%O9CIOOP+:mf)ZkM_^o&[$G_cE9Z5nd0Ga[8ii?*rS95B7>QL5u(.=j8oI=l)71]3YNnn`_@OEa:]dGQB3GK1WAe$+T)TcSa,UTB&%B4Ij&c"9E7+I*XlQE5]Y,"W/s\g.hUEl+f9Ca^"j%rk4%:4NAiS*;>Ul_nCoeqo2NAc_)9i7NOT,n3nX]TJ^5C^)?1b!r646:i/K%0Lc]9i#/bS8:1pH;SgjN'M*sK:u5_CG$_KUM8Hu$8VTl(DT@mh#K>t7-ihl8GS.1$YN:+H:`,]YKldKl!$,XK2\kLH=Fi\W5b7:X%/e7EGcpRqb>fFTPVF]&AH(1mD;]u/-nLH3SG>btLK+$.1P)MNq&M=,O`*8.rN6DNZiu?bS#DNR/o.sh@%6@8D*'!n*OoD(o*0/+b%LI)`[LNHK;%Z3Zk>+E["VQ$pmOt>@kU_u2UI?)WXBm;OPIi:?;'VmHm%U<].F<bZ;d<oYji>kG9gQldGWCV(oZ7;*)?pBLo75NUP%[QM'%4<)(&X<`L`QJ(()EdAM;)eA%5ccR1[2A5RHjZ4VM;(p$ESBMWOG=sPje'M)4>&\.!`*YKNN(LhSREdeXJ=56_,mZON$!S%Y%Z'#J\f^a'Qd>#L`*:tB&:HQkLjS\q;,F[O1@OepA.<[pt:_?RajLf`S>?*^\;'7gC'oFg'k7e:9*(rsOLC4$Jo`<q^o'6F:E/WCX%j'r^&Nm^4a6m;'8([?[jTT=';b.DU("O8%"h(d>>_ASnH@c%N>(6P-)^e#E7Af^BC;*"u3:<)>2?r\ER0>[HY/rV'KK1%4f=2OKr%XjW0?pqd:`q)!mDLelk[#B-D=XBH''20Kk\=DLXhDi:s@>fb2]:hZFf++.'Xs""0DDPR@[&VQZT:42b5f4Bsjp.\Y(o>NCA%H_72%6f:543skVX6TR3MB8r"FW+8^p/8?Eo*u)d'KA&k[CNY1GXf`I0+]UMR!VQl-*"YE+,\@"9o2Fa)N'kln`&Z&3$CD$s:GlFT3a%00%fYCb_;V,]JATstugCFX^pm3Cf@km<iK%jV[Ks=pIL7r(="c,kDV(5*<Nobuu(_<k]IQR,eNLTuY.UjAafZHJ[BN#Z#/.#O.@AJXS%8O,S[5(7\1g.QdJZT)+%Wu&=g!!kXB,H,30!5r&P`JLOBA2]lq%,8nL3ZB0?QTR0BOdP(^+gRbpQ"*"*aEd,KSRR:^0Gm>skCf>#%?or&_8T>e6E]Bn&LRcOeEeQN+1sQa322C+/gBpMI(T[j*kUpIILipNjNJ$!HHqDU-!+2$L$Hb[f4^p_r_(:<;O'J3CM^5$L\VTlS%0mF:=;_D&"5%M.?aoJq[!r=1)6^+%<+C69sL8&C%McI\%95#V$"bk\"`Hna#,KVY3S:V^H9mAPT9VIh,gp7tiaZ@s,+1pJ.psL\n%a743D3O!iQG-H_GcX%E*Q'+t5ie,&5F:_D\,H&Ri;lJW\^h?R(9C]9@7-^eZT:V\Eh1"-cAOf-$/YpMK)`ak]OMSm0j`%Z6Q,6oI%/*m8:lmMuM]Qd_lGgAH+$<$6PK!_3CQ&lC5?_1oL#FG=ABlG"OCIF+]GYNqA[ZI5]j(qa78KMn*@N+G;L0,WJ7.,aBl+dcA]80!U%dGg2H[&oXP'bNQp=J=aOr.<sc;_6oOi=LY"OO"6RrU[iX$,)'-@`A'ZMOq06W<g5O8/bfO\1%Xp@rJ.S]-$"9(q)D6Rk;I7T8u?.%XS:ChFi%?29_dNJ:J8PEkeKI$#N%TX2\h,8*'AE$#>@GqP&D8gWJ#qh'm5+I,^-m^quDD,7cIVu9e;Eie;(qFI$oYR6<[%u1U`_?%b53h8OK0Yk<!no6XEY4TE+'``"eQ$TV%.$gd`=!T$KFV"#fm.s8Tq2c9Dh,-@O.g9KolbGUOoS05VD5L)bK@R6;U'i.]a"Ja@nQD%$Wes:!k:(l-q`U^Fu_ROVY]9LKYu!c3nH[F,4R'>0'g;E!0&IIq@)g+q2fTH5cWk^<d]WROc*HaXS3:B6?^#bbelsZ#aMpoZJjq5%#`qj%8Tk3LL#I(qM2>pb_L3"OULFP<6t1u3\,g57nej2CnJEL?#Q(qQ#+C9pfBb6rVG/FN@W321)op#B%X0J@D";$@1Xirm].qBJ%J0,q2/LS^Q(3Q_@puG#V>UIG#Ag\i(mZ<(kLqtQ\r]/f7+0HUeG-;+$&KU!aQ.!`E2@".%35-mU(OIE)OtYsG=-nZT-?eG`.9(>"%0BTks@djVp'!N"Tj=?M"?&W`>Fui@h8NQ3L+p![^>02K]'FRBJar-djG3D.kI*MbT=sI0"]H)p<V47Z80islH_F?OHE.%4_]ED>Y%d#'eE@?lt7![i8T$AULGQ:NPK$l&t6hO9UcINT,&I]J]eN5Y9,ne$-OE/m7u"Ym,]KFI:+o3,USE*4=@q(t[C`2-k6%b<V3,Rm6Y%pp?`X-,;.!r!bX$0lD_DHk99cgO[p!/oZ(X<1uit^e!N3ZJC^<#9mpdiW,tTiSGHB=2LA3KlaJ4\?>uNH5U]-E0T8&<EH]G_HY?!%J$A;jefAB<F/f61ZB5tQ_KJ,*&0E5AB4q"0A&KE>-CZEO!VV+Qs7*Bs7n_+V8X)D-R)k'kND6"3aae;knsNj&;Vn4(9,,@5QbrK4%EX+;fi[f1b2(ob8Tf<p/?<F#oYoKA=pFX;e\H=).mYH!tEE<I=?;LZ/#l#M[Qgq1g-PF+I>rXGGAcNesW,Y!c'KJ1L`ttPf5fIjO%-J3ls6*%r/!3T9iEf-D@.q*B/QNmd](EtdpPpfUp@EV:X"Qu1Q\/iNJ=>0dt.+BCI5ne2D@oc$$j:ZXJ$J%'1Ff@b;3'*4IaUN6[%ejuTj]L8VkW2^EB`q`:@%RS3l,P=EbQM1uZ&Q7in3Ue"Y!@N^c!2ZW15bSQEI^+=eEE%T/0fEJs)G]ebF(J2S/`Bag9G$,S``Ql/%2b=<cFPPFZbh,>M$C11I>&r8e;gQEP_?hkGl;'4cq,eS2/dB3]iso+E+,;d$gB;O`qb3/!&k1i.I],BSU%(2!2[2Ltn`_TWd#oB(%9Z7Qu/Cb[5TQ2cZ"m2"R8=bT83J<G<TocGnq6_a[ToUDe`IVRN3/M>?OT<Z%3_5U'`#>9b#N5Be;]84C)/bg^]MlbfEMP@$^q##d%DI_`;JXh>%Y"Vs@!5VFkLrSs``A`E`)":kEOa]%Q`ZacZ=Wut$Ea^Lo3=]qGRf1&>Vs!iJfARt4Af**]"ENl0#@JcM(L_,5nTRC7%^r7&!,u@gV3ro0#Z1cj.a52M;^klTonS'iA`QdDCBB)D*XX,UAG21N1R@^T8e8fOs`#2^Z.^=&4,]^qF'IEs!ZD8\%*2!3GS0K.(%!F`Veg!2S?1[1;4MsFho`7q47*QZAX8g"ePFXZGNON#Kme6pp5OY?&D>9tWu'.Z0U_(Liq^<tV\EH<><2;JPcnkfoHe54\CQH^ju%iRsn;gBq*YQBS#h'jo##<B5aGKmXQ1Q;0"El/p><Fg9;0`0X3hnPo9332FS2-&0n=&WWqs?lS6gp`0t(&XC1nn)Z%?Q@OOYbbg8a%'MAR3=Y&F!$QPV!XY"(#-*huq\gX,'q2oI3fkfNe+icF%M]nHe6I$>'A8/]`#Ed!2&K8Qhd#rTb[H(g?)`Qbe2O54i%m]S43TQQJ%qNa+e82&rCX2`OX51'J\k3H03@YP8S9dEjO37DT'@`C^Ks,Xj;f9mmufB]SIm\*@35]:2',OD*a0"4AMp]5YM;Ln1A[FQ#eFjK[k%O@2,2Lqu&h=4LB;)&_rcT#49Tm329R4%6Ym2"HUmq`0oo$(K3MbKBPaWQ51NRj1<#<o4_i[aL]WH*WCD5K:H%o#Wk::iArL)0JH>%S<N3/7lTeJ*GrPsofC:0iD6HAEHiPjH:1ZZkdkn^'g;oTi[P0fiS:U2`jgB0l,TcIQYgPfB`^uY>?aXhc\[5ic#slkB-#]OH1_F_%D>D75dE[s.?to+6oE_Vp")/9u".tQn5Lftnj[kn4>k[dor:C4>?8-eE7d%&4/9WHe&OeJd;nDF4^FcE%Gm(t`.!15^S&5VVl]0,0%)$c2?[V5hCkqgeD-0eD^c1nX;>8$$Q_KkR"M>b&#Z4Ks2_UKOlqG<DR$Lug,0/5j1[<,?_%a&:RaF7\nIVNIulLQG/nOI9"1MrmW%ig>("<=75gQd!?AQ>(iZ2[?3U[R7LHSAA9mkcU_11=/ERF:K?i:ZIq7,"6X[+7TniAZ#\\,.HS?cr-NrAtIf9rerctmM&O4+8f*X%!#lKf]WVd]=1[bl>ZMarHR.:u>iYe[:MX<u%1.sMFdCMVp<`a.I#.qlhe1cbq@IS>YQ3LX3t8f!H,O?+V@4,-d37$a:C;I6V;q"o%YXmM`mpNe#EIu?)_m:f*cL",rTVq0(MfR$#\NU&"(AlRfSL!!'5bs^p0]trk-WU3SCY!VYSGgFp8)h'D[i"B.[YcZgb?MD;?XdMh%`WhX'h"71m85g]P[$g;gP.)_qKbob^n&QW1Mh9X+bT-r+7/LNeNE:_e@6^!#cS+jr)^V\&cahrhn_o9dj!2"uPSVuT_@!XG\D*@]%ndT[TEodIQ-S%]nI..&8QZobrG&Jd/Sq$prU"5]sPG%Ut#s+pT/FNWe,0!/p,#:?mU-(L7p%#N$N&qa50R_O.L/tIRqN)K*K,NCg%!)1OXZ=:53pY5Ln\lC#2n[YH7&kMMD7mY)`:(mj17!;4RVb*2"mBj583K](%QGbL.+"-]nn&h!i2KSg^?MCg#iLpZC.u*&R;%_oa%^;9PA0djO4"iMAR"XlVJVGZXMn.r\5Q6[kBF5OoIQF)^S=FF0%l)Gk5X%iP+'\:W:KGsX<'6B`"2chs7*c6`&8rroN,qM?cDMrA/%=n^.&Q2!BYT\>Z%_hr(DWC_k3O9ZbB3O`3)V.U.4=iu-DcD.uFE<dC<"]\QfN/a^g^ck$a71*(2(2l<5bT:h0c;Di7n'?9O(_CA7%""ISg%_`"Ms'Lo`37]\0\&:OQ<Vf^%"PhI+82s\V,3ukMS(E53hT6&QUo<XT%]oD_3BAT6^rM/j+H9g"Cuf\'fCP$-*bb\I:8o%O%87=!"i[1RJ]>9nf[E?_kZ,*naj[Y:O[L'/).,%]3\pgg7Vnh;>^r&Of?<Bfmmf;J-4<pVtMQehdd`Qs=;1nX@j#4t?^<=FE:dLo4%0c"Sf>Zak*=eI@Y_0p?JFDK:G(W-)A;#`*r"B'n.`"`Te+!^Z#gfb]SBidS:)V@&QncN/R<DuLG:LVBrNf[7fNuFJEJo$5PkHaQ*%a/@%XO5<QS'dK<U"/J5;,oU#Y^q<l')/<A7GH%@P9dCV?Ah!=0Tu\gP=udE[pdFk@04(&FF6YIqH#=e#cIfmPm.R#C"@b'oPrm,E%ZZd-e[lsp%S"sZT!P@_<Wpb:IRRI";f7#3SF&0<N]TBFslFTi_ST,+Rj@NFg1kR1(TOO_]l*MEF8kNX1OHF*X_o#\sKh):sqB%[L%>d6qn.0':PoDAeWF[UQupp&T.!$`rN]0_K=mh:?:f$Bb_@]:@u(,$grb6rJYd\+mpJTDtKI+Ndb6+^V'P)o`&VL`iP-39J`3@U*:%h666c9,gm4l&REE[f5]\,>_T^(OcDBP[o+*]n]N)DRu3JV/5;I$4In]Jp&;!TR*/gd=r\/\IqLRc"3`;63OXDrT&N^!o4K8**9.N%QrJ`+K$N't7[p)W4f;T7HpkoK6k5Uqg!O\h:N<^oGs0JEY<88;2D;'D^U_8)E_DrZPDZ%G]&*(Zgg=s2^"u/Y!VQ38".1\;DH<gl%jm0dfK8Uu+F%(c8@"NW?j6e'P,Ciqh_m*"hXqB)0kB+/:mrm0S;>43_@NKq^fYC2<1nc[!TN\oa3tS;P4b/60r?56GcC="h+8KpQ%V!M#5T_BsNr[#6QlO15E\97s>1etIOV//]PK&/1rePKa_'r",a+)iSZcaRLNg\e*Aq!gr'c"u=+H#8Ht0NETko.Ijm;\L^c%MB'`%*S0[q[aO"28G)L2fYf1dLF!ZjG+pE*8CZB$&J"RV^##[TPgJ_rLZLO(#,Tu$ndm(R`nR@!aG><8F&ep4NfWKB6*@e:fgis0m"HI-%fqi3uQ#B"sr6Vu.2Di]ES@#.Q0H*M_^3H,-Q-#!U]uRC[;^>97`+g!8D0eqn)(Bi"D*eJjR3,kETE-@ZYU#2Q&#Y+p="*F130g9F%jZHSiJOHU`C0qu]CbMTd#0T@*"f*2"4#euU.YFF&na%iok8KerQW%I_X)G5/rcWrePr$Lc0Z-L?\BQ<lUj_rBEB6-\*idW.]/CD^%Eui"gF4-`;H+tOdlY@A&,;2b]l_gTX&!)9Q.F&s[#TFHp8<\Wa8@^DFoL94W%C:duc;?#oH[t4YQd&gNNXV<$QTo+$U6V'P+b"O$%V^>FG4!`B]`!S4;/EaGPV<t\cYfrbuF-(K%<kM]T^?<_5(^(G'@nXH$;`&3$^agFS7]8/F_o:>2\`I[$VI.T7Kl(.Z;)1LC&H`uP%h'>of+1K8R#YUU6<!7QTP%jE3gio4l9-'c^O=pF=@)5?gkX9Y`W&P[#QAA.-7R7sIR;NF3LSP4*U.sdLo_*<6<1GE!6tM.Yiq%<B%/1n4mobkuKFg$eRS;p';9e1r-V71fbaI=ttUBk2?Pf93;6)uu&H\1DaMhB010(j1_B'dd:I]e5E9oD*r8-+p.o^!I`&R5(&=`S#+%kmS'(HsNgoLZ?mM<PnT3K>iBI7APj*51hd8,$*<_06*e#iXLD6!F;G4A:6=Dq,U)r#R>V:?MCkjM^HuWJ27;4Gl\e-@?bQ;W%^LD%FJ&k,"K/8T&-BHj/.mK,o!hle^oi'9QTar\eN1"RPK/]*JR@/`^&7DJrq[o;KYobhl_SRpb^O$(e>u!N_LdSj0S48WC(l9$#'NOC%.S422/nFcQ[=hM;#@u,O;B9JJE+8SDcXXSPi%-ZIp*RE!ESoq=>BI^\#]cUCiC:=OLD146Zi'pKZc?r>i43rF5ioI=A+-B_5,asY%DBh2-abkP@irDu-[,-UAli%t(eoL#/9omjCco%scOhGG.ce&*#2>6t&7Ju7nB;_Rq$G3IXE!D<uB==$:jO[JC$ra,#^36H(J6D!)%?\,[`-1YDgRNa$T"g[j<Ri.,=*^)h.$'(5676PY]qE;Dk/W'[]QH)uN+C$O#"O*D>>`@-rA4f)Cc+%.g=G,&!brT&_S4Jb7]6Spp%6aAk`O10!F&Cnh/I7u4[mrUutM=W]E!#.\>`Vdore4l3ACXth34.<$-blREML-@E,%t3Qng[7aq8J0f#CQ?_0RpK)&[9LRMG^;HV%[cTH->[NS.j\5ODg_C(-D\tjL=AQBu'jOWcLC/1u".5th&!-J8]X8T&0V2YT=8Y7P7=H+X5$)<&&:Og"Cm48O%`$1Gf?HuXq=)Y.%[?[P#\NT,Y6Eb?&E*P/q[%;S&=pqt'4Ica=PsC<42F`!lr3h48YBD8QYk/4a,?i[EL#MPi%rn=JZSF89_I>pDeJBR+cDCk@8<cu^%7%Wk;d$b9]c;Zp[Nf5*\IF1mQf?P^(=9;9I(sg%KqB(m)c[$ZdQGak*=O(t@_iDL,5AeB/m\e+sf1.j=[>jB?QjI&lC'X,=<H]Y+%hf+6Jb84s,4'^M?W7'f-S0m5lc!1hl:6Qc*?+2ZQP#o!)QZr4TUr\8#G?&$+%L;=tN&Nl.e*L#i1V\T#RFp]L:Ut\d,iJVN8R,N]%okqL[N#ihR'u`VWpfqlo#+Flo45dhP!2gc%.J[-h9-6Q3\>ki\MgEZnNbRon]`PnA\M7qL6q(e>I9T=%;bP*aV=tG(:#/oo#0R!B%W*FH(BK:dQ`h(R[UOT)kZg;%7DjF.Z8e0Nm\kRLlqX_8X^Y,q?M,m1MC'>]5L@Gl<+a:6d#SsoJWnmeOf==\1O0q/c=&aF)'jnmf%(T4&bVc`/B*a>QEk=SPZ'K#(?JX9Y*#a#dA0]#ZBDWN/*Z\`nNmd:A[]as`b'C.MWP,W-<<1G"!MK,(!TGmf#Gc],TRO!/r,cVLq%TE@X,l9=Q;WV_%#V>S(`CgZWtUu"s3QsoqRY@@?AcBD,g.HcsVQt*gPh,s:7kmH'P_`R(3HfBL&3g1ab6CnR+/eKHY7tQXX0;?"i%RcVaVG*IIoM4JqR(J\AMOMu.1Ib@'&%-;b=VS)r?E^ZL)EelE8qAMBe&`\-UB,Lj#`*;o+JW'hcCLf<%5<t9/hHZEOj68M4cfGLc%QFr#'0cT5NfN^jS;QR-1(.&3QoKc:H%Aao)W32LVc?ihr]D<a\,rtDT6H$]J3u?]Jiu7oC]l/q<?@7Cjl'/a@8E7makm_u#[9Fp)%a'c.hI#S1Re(<Y?UeW5Il8$HL!=8d9bsZ'di@E/+BV@Hn+`uM()/?P%h]Kc-k-grGYR"[+/#1jRrQmZRkb<JELcR$`T%8_C9]&9K%5#35EOa_"KYTj@Zb7LT/=JoE1A^YK9Udp(8?YSJ`2#!E64tcX4[EH<[?20X'qj[XE9Q$Eg2mNSbVEs(om=$5JI]B<pi,QOBem&IA%A+OW1b[4Cp1]YCQVZ-#r^7GD7*#R2dQ01fr8"K;j0kte\r'k'@,e0i%DM)(?`1135bW>\cj2k`s;rSV6D.)!)e50U]eTYjmIa?QH%:O50+1p61ON3$Jo$@\tGRgKF@XdO7H,r#b.E<e5VF@f>E)AnuYgig9cF9qofJG<('O*oLVW6d+GVqeOaBpk;M<[PlBmg_kJ7t0VS%C=)e5,Y0gnmA[%:^Ks^WIDnm8j,G.A97.B=8'E6>Y;63aH&'j54]oH_KKPh*'hLgn/,lH,;n8V%r."ZG'QjK7h?P@b7XP1!FcQ+V%YZ\`9(e,b/@3P+GC_C-aKE%*6Bo<4HK_DAumLdp9Oqsc:`".gFr_4EGmngSq@ef[;7YgNipLTYX;b'?QmkCB%*W26\&rS>&oKq1.%/'&=4h(]13e]Tcoa@F%uRrePc00IU!+<Z9iD'aA]%n^;X?i=Eb8]D/]nj[?uqDHYGTj^np29&Q=AaE&OK:%.d#;^:V:Ir4T.,<YO%D[]6Hj\L/aD+SYMO\.kg">b/8_bP2T$3#73rr)kt(>+-3+!h+LR*;'RFQ=>ll@]ZMl-,RPYd2L?Rc-D]&h,&tYJT*EJ&'64WZ!Bf%7/p]+iTe]5hm9"4Q8PJAF%h$qCscFh33._m[?l5/ol[3$<MHO!d;hZn\B8%O5,][MTeIOK:Bi"JqF@]Z-BB3O?1<;PN+:N>GWLM%%D_^'4_.@s7"3-dR#K(]9b%I\fPJ/pW8fn.9'mmG>=]8oS/n`9BWo/>\UK"')S/U<fq$:]qO\(GPUhGZ5:i(Xpd_m2d!7#u]3I876%O_@*!oK+ZQ:=O_Z6/sLS!nNgD%i*R'aa+L[\un#toS&ehoU,f"@&PbR0t[:X2g!J/*^q`rI@%tF*qaK+TCR_hLE2KAY!L''C[9Sp%BQ!D.5Q9eY^cBDY"<UanJ#9gR3L&=j=Z:H$a1P!-1Z8-CCZ,'S.fYG@&+O;/U!UP4#GOQo&os>2s(@p*),(4iCBmem.K$b!q/\5R%jhM`;i9XL.WV^tkD/uDsg%%(8="RdW;nT"fmGc^!)":4k45Z/@`;P`H&mM)+LbC[CRJbZh3g*Jck;+;T0nO)qg![Hqs.Q!D]-g8G%0nd19\[bgpc27Aqs$3=G4/A;7gep^QJd;XRN%%MD.&K,peh(Eo2R'h]VQ`g-Xbek;mBJM"r\q6!D@L;!\Y1`<PTC_h516#s)5SS&%d5_6qM)DY'>K,`k't83,4ce;l'9hM)FGb47b).L-`qD=u'ecEV[VbtQU&D8:=fE6ns0BW4*5bjQr@@Z`5J7\<aT(b%IeupUST"PO%s8)+Is)7Y!YP4E&qm'p#lNF,=dJ[m.\EkGI;$NH_qlq%eV<fSLiOJI1C'h>%@&Sb5"r7o@Ap*J]5b;MKn*i@aXq@r,2#n$`nqQK"%ID]`/#cqQPE02*8]UB3;YF*EQ:[H4":/U<C#.<PrPX9T'S!?GKPjuT8_*;LABl*<5e0:cC#@[2Mf1[**nRUqZIAUK3h4!l>a\RWI%CJSb.]7Mc@VRc/5>Y.j:Xh=QnH>8ur5iZi0aL2o$mtYeYN<lO:-mC7jcdc[&84$c/b6bG._PV;MmF6)Am!0HhS.&;Wr0G]QN&d4&%4r#94`cNO`<l1*jh9]*mC]UK@6r@(uCOWRo1`8G2/O0d<GgCA_%U1MEF'IS.3Z6XP=(cM:_^aS68O(d_)e]Pn]$HMfIGG=gL8=p4%<2J2@2+UI.$PgS5U;WHUnUX#GZ4DFc@c"3I_oe_/2LgP%op?K-&30BE.,MINW!;A&6aEO\DH58Shsn65p7ECg?QZ/P,aqGGo`QH&%[62:Xe"*H-I>&,2Z/PsTF@;$t#3=0[P--(T%lt[set;oI7u\eYlmG?0[T@QD:)E)j-c3Ci*mSCdKQQ#,G19?7C`b`L)/EY$k+gag%7>]rBh[WCl6s(A_X.#4BH#?IR>[eq;f5C,(<B2MacIL/[(H/959>nB&Q#?5^,MZ0Ado]HMO#@3DdS)k[#jBHoNO*9pRp@VZ84%d6%J8hd*TS<:7^\#*6KUc%l6%HZ53_10L7E[FQ29*eQq?M--K!AcL$LeFPF,P`%L\8Q'`<2#6AJ?GAhMb*rT!;%H0_XO37dn]3F?AV4%oXUa:=!P.Jb-kX8^b&NXb<f+#=p686<ua.s8gV:o"U:4%a(XR_rs=OY]0rC;D26k-8FfSd?4$`m?\%ZbI6XC;o2es^mqVJD<TT!r%(1fg>\2/EsF=X!<ri]Sdh<kXJli^Q[S-+)'gT1F?8DPAK/a?)\G)^m#Z6KlS\6j+,WPcB-,@3ItbK#Y`A=p=7me_:fUD6!M_E/p_%n'H;]fUp%Rr[RTOU[gNN\`/Oa[dG'b>KIuVb['ZUmLdjFj^ld3@,pO!"])gUVM@!>E3t#GC0o^0//`3/gg=JD^Hcn)Mq47A3h%Fe%An7Q<m<Du>b64E%=j*'_UpKFja5RTLSW##0!5%==@8cRAaG%%XKe33R\n(bc*Ab][lBU9G?PN=M?f0*bN4\cur<hkrce8B\lN`TP%cr5ZcXQpUL*OhCT<1<e9;"`0bmLg9;_'[Ok<NLD..X,M2Z+CA_W:pBb17_RRZF'cg\EdGP1sOhpO=P^F"X9"/S[_>7c-lUH_=FU^%odK@8L+SXr\`Q81e6ha$'a:.NGP=mAG.q8<l_jdME;9)K8ZrjOa!9G`84<K*aZgGNLAc0q];Cch,/NX[6ZD/H)XNTZ_BWFnC,G9g%lOcBD5Pg;ND$!<$Q-\dl+D`AG!UMI"\EKj!$dV(lV`tK/mO7Eu'l2"[6-i'3$BUrI";./*;MYQ(_D/\Fb:6Tfdj+;hRp_0,&H4)#%P,EZcW^1'=FH'Z%(VgfIOVOY'7)``<_%(d$r9XjjHF7h@"0D)#a2h3l\j$k1);p!u'+?>\YJCiC,(n4P3aTt\hWT?ihUW08<1R5`%aokKP*BYm%Y&ZAXk`_#$611NTf:*S0((Gs'Oe$m"qrV.-JL[C>maeom&dP'Ro,Djj<RHuCKHF[m5%.0Nk2[49K[lPjbkD,e3Db1]%3;<Qg>a[\-fIcE\00?jL4RFTcLRPL8-9<Z1AYjiWN[_h$%!O8flBsS0.P]-AlRhnd/\F+!$6>`9Bu0`G1VmkAq%ZY*'4;`pIblGr%m:7NSS3GX(oio2oDi('lBDiLSoWGFo\kg?T:o`!nD-(uEZh`2oH2M*uQ@nIZ.[!:R_d&8@I<SK#6sIBU4K\IWHi$Yn97l(bX"Q\9%Kp\e"SDd>Z9miS;#aocO5qD5,4gM.Le'u/j#:l34GKDC;ThV-G]Au_F7l(4N3@gtI:i?i18Jd^i*qIQa:V1lQm,It&"n/($bhm>I%k57,Nh2LjkgXJ?8-=!mXIt]I.iu^m0`NSs5U:&ldP2f4k_^TBe')!=;LUe:)=Su>;W+[j>m0PpGNdS>Dc,=/Y_-p]jpY/+M(VE`.%$/"VP%:02-'@elmE44@K\nWUE,8c0.&>'!n?K6b5XaP>)VXT`kU/$5lG$SDf&W0Xdd?./I(T?9S/r:DEZ4\Z'CHEJ`=9qF>*uh$+%l=G&*gr&Emo6)o#gIcFf1s]uNg3a/sp;qDAjDBl9N#:@`IPm#*3S0+f4^Xs121J.8)8f**;A&2>7]HJ$i>lqNc6AnBb+G<Ki&_`D%D4k&.1XHT)'H-f]5%@$0^B[,^7*hSmY=6G-nO!=_>l&)aZu^B^fmg:/Ya?F_`,S8T%%/q!ffs1N/:C+@bN@DE\).Ai#a.2S-2r)S%1gh;I@5P@3YmAL-^.M*.b&[YCSl3lR"YX"U;(OjG\rh@01IZ0UrFmE[i;p[moir-Z\+NR#8n>Z'^fBI?,LdKJBgpcgpKW6J'$bh)%e7Yd0jgHQ9!_Pf[?pQ=,,.a+1`45t;7C76ieb(<0.:HP0/n('a8GDNbfK%?-^WHo_=@Mjnj*.30jY!53W(4)P8XNY])KX%PTUPln%i)o]adj[?P6g#,V%C4XVj$uOJJ7giT4>-?6I-Gao*4ZVQ\]BKs=Eip?XCpC-."%f\$NAAKbQ9[KEN!Ps'0@.#GOP`TC<#&s(LS/O%pX9chCq3BY#V_LfQNYamC9B\cQK8pu8YM6P89f*5C!aL%?GX%X'AP6n7u:q_BeNYhNMpu^,n-Il-iugS[EU4\)D>j)DZrq[VnXf?%\4`DSKKGtCk9Q5c^[$5Iagcb1Yc@'AV7\%<6:Wof3&&'mk9j(!X.R^m?dFk]<Y-Yc6Z(HbgKiOUQ=ecu%c[Z/%6HNDGsY7Imhtpk%`Z18&hJQs82WTICHeP%M^?1d\<1W\k\TZcS&=r:9c=Q>S/EPReZH+=^G5agpjcnQ:CO(mtFEkO%^\<QFq#c*P]0^-;%prqDUM0[.%2%Fiso*Jbm*FF/&1[e*A.Tg\&poKe[?A*;WFKHE#ZkAt=*sn68`Vm<&s)>ff'2<@aOs"`$X#]eqr/@g!`iu=8=!#&u:de0Rai-h]%U!*(JPrFd\Ojlt:_j#t:CpbMrbT8e:.f*p<W_OCsm$=US!bud`b<Ne-*4>._:ZROU9UR)q&N1NeStG0\Jp(4L<bBuiGK'%9F41eu%Vdnm/rpVe]!ju-W3)E7Ni9]!M\NbNC9A2^f@*ehM,Y3%7`%mp#F]<c*!mVe(XTh>[#[aT39tV:o!7p^c_<j+NnnPbr,:+1hA"b'(%\6$7J@d+@]#5h`+&HJFZE[n?o9bksV,UH!?HGEe8p6r>a!Nk0AJ0lQg+$df/"HaYKWqup7$MqLiNF/%"9dPq79?&7*s$B2S\0Kr+%(!b)?6$63pWu&);[G.g&?10+BCDMm@&u\\sDML<S:>I5Z3&o:]R]\J\,kiG=1T(lpdGYX=bH^7rEH=ddfu;(l_Wn'9NeDAsoc52k%"2)inBiZMF@.W6HY&^tWB]5Ce%3KkO-Wu)m;g6,13F1HSl8rGT'6Pro><N4ZSeRMOJ]d_F)HiL(H<j1ZMRHpXcPQH['/Q6Ub<5h\%O?`Hji88E]8jK4q9-h2?betq3fjnT0n.grs<n&3F1"+k,@#n)'RUBocLJPFUfB*YA;=0o,p,,<KGVa`^L=-A`-`]T/TZWfrrb>Gg%]E'pDJLO%kQ7hP2Y\utblgs,1G\p(jX/@)KD33KT,NfC[U.YH4Y";d.CeMcHUOLlX]b6G7;$RGBWqOTV9#;!En:"ZNAW*m/`jNF=%^W=Ll/&[H;ClB6,%I82G+"t%b#SNi5YMd"K3/ibg<%;%h8fTA#R$O^u/3!rgCW:O5cWDcDEM]nH]8,ft\I1jbUNR^b,ujHhlY_CH%UGL>n8mc\7A?qIN"Gg]e?WV*o-rrUj\?`_'>F""Jm+:-J?0@CO2fV-n2PmG"k,oB#Yq9uRAq!,[*D;!VQftWrq6'<aL@G0E:6pBA%Q1j;+DcHUbB7*j)Kp/D45Qi'k2BD+dEYpH<(UEO*^SV5$RS8R1kVI"(UgN9<^C1=\Dt!!ljBM3?@]L9t<`Eq9SH`$t6fd<(M44BE%/D/5SIB,=gS_pU)fQaT$5Ohno?V+c"/9WYV`U/!ipT23R,2X1i_=FlnLp]3MrcGPs\ZYsrB^e6C#60m#nGc.U!HL@%g'?ZcN`sPs%7VcPa^7n5E`<jg,ggENGY4[g[7l7sJ92Q>\,R5u_o/Cp*2Vus];^S#Q\j`D&6UD#7IRS940lV98oFO1_[SY&\5CZU1N1RH^.^#:O%i,2mZBDP6YpHDr_W\O,4;Df>$rS_ZW3tji5j]"<0f>!$9h27<Up.Z*Bb+eY<IVorEmM-c]Bsd$qs8%`=G]*D1dG<d;9F6n7rHp'o%IaL<bP^^8/1sD'^hZ*D@1<!>fn11SJBY0ipW4f6tqZpk,@h=oN[-Bj$QsN,lmD.T`HH%&AWMhS9NIDbQ7ec=ob6/k?bU5A;01PI)%e4`8HXZlX,_B.D2n[)Hd95Km,^At[3&UURqa(i>T-,I-A9Clr5(ZW#pd[P@\aERblI:(_KAbu2grk?guNpd.Wn%PEC)a\)P:SYj8%<@'"M,e,(ccI^br8I9,1BDI52J"k9d8&?K1:46$.```t]02j[&[ds.>?`ej`UX)rYR=Bo4M;&3M_?^@OIt5!Xe3s6BTkWB(lI[:]%`0R-eaMRo9':e<Y)gjiMs4^SYZX3I<7_M9)8+_B?WCmEKqK/c&=/%^a[IefW\17IQ9m9q6RJl34I(flTaB!L?;+HY-r/R]h^qHo2%L3`bCRMrP`^JD(doNKCO%gR2ET6UlL-qlF^B!W3jRu:=8d3sELT.`(:7jg;\huoPOhtecs7cJ^'YJ,A"Xi1FL7)ussjWHFeQt5)S%Y%=a$c7`rA\4#t=fZp+shM6%8q.=U^!rL<)l*$.)cT4n+7o`,5j6;T`!+>7UIL[!2Jsd1M^P'1q:eFUdhtl,o7lN)Q8?d_Dq5b)=%dXkr5l3$@b'M/ZA)$S5ojJ^OKm)nf'n]!(?B?0k4,4YtJ"JH;E(M<gO1:(-//,<a<;Q(gc7$0dMH#T@(l-S8*<p*K-LCIOWBG9[Y%(BoB`QnK,3Z3'?6dFd*T2q6.il'I=M2-u:qKPg$Fiui]FDg[!@&pfcU2ah[ZQG)Cu)0u;Z;EH]_3Cb)drR"@2XddEJFtkZ."-:kB%7sPpXq^YQt="P0751k,!H,Z1LO?R$*$u4rTj$M`:LL<?W6]f(7[q/G`&GbK2n[BSjoN&T5cX2+=aF+P&'IXHZNcn]MnOSQgH].5=%DS\[E8?_MIs6h*n[#9S]@tZlAB;@X6DYk.`?+nF8m/_<k:![mG&RK[8?$%BniXXr(j8jKOW/+PJJ;,=V1tMP@^pS!##&gJ7J#ch4%BZ%;<.B,j',_+b-fcCE1-HpjgEkD0:^%i`2&qIFB`Iokf'>4<C69Hbl52+OtTr!&UD^Eqn#ds:5n&sHBq,[h[4%Ops3$?8^&4:PH%X#S<$J=V]5k!bOVn<KXacctbsJ,o"J83/^McgMkok^WMR^KSYGF%;6]kme.rH1=otX<rhMG"if(YpM_j)-LcKJ;FVM(ef3BPQt_[%Hh>el_QjcOBo;`W1U[@:?J\EE\FT>,&a>$>j2r^n[5fV`n"o+8(FQ2Ii1Ei_f!CsKdpghuo=FgAM;He_haI[:VV7`EP3Z"mr+WNN%#4N?RG):I`\@ohTF^qAV]HHQH]aBM0K<4F#hk62,kg(B8NL5\Vbnd?++i&c\`O"o!r+;u4XPcr2k+Y9"B=EF7\uoH0-acm)J%UMu%=b*E-+rZT`Ae3l;0HU4@*K@_e?7=,a/+D;tYru]TQO!+)DK,)@0IU]QNB=@0ok[[uK!lr7QDU)d[5'#4i=JF(%00igP0`jEWNK;(%'l9@["G,PpdCheA'&XoUPU<OG2:;F!3$M-m4l$&hLdp72m#G4lK=)/9fE?u<1^.8\%p)P_b_o-2OY+E[p"N5%n@9h*i'OW.>$7+`%+sLdZ&7l?d?>uaP\]++#i40RE9Y$tpk&>EeEd8Jo4V@((<DBl[OpN#1%=<^7WIGb%rGFWg@6Yk*F,WusT]jpP.X+n:mW_!jU6G9p%Hff?K!=MHA0\0:^7N,J/L/(`fCar2N)H(gda4b(8HtDa"NoqfS7]kL%iR.:e:]uhrj?1D1)K1(!(nHV8hCE>YXhR)*It%m/?:"=X%R,;at6o^Tjen^iR7YtF6?=Q5ujPXPk@4\Xo%E%L:RlbXD8W+P2p(glNj]q8<*SVa_hnagTd#`X9gVj5d'??CjLV^/SB5CTB,An`"%HJQ`YmIK;2`HO\Q%"3B_D$ULTA8?jg[P)26@6*%NLU6'Q;;<3KZqm#ig;^`2Bi,:#aQVWOnl[8di"^&*b;K1oe]h*t5HHMf]':TS%P!hAMhOj,R-#C-0ap\&FDfV=lH4cEJZR<u.GTeIgpt:k>_aPLIbj3910u1CoUkl6nR7Q(M&4-!4S?RLokpP$^cM&8^dmTU2[I5E8%/T<9<TkM,('kZ(_7XtB1J##h0Ah:6+AjL,`gB"s@gDc/Qi3fLsf,MiC2dL`^2g(F1+*RL>BDgpj!M8bHS$"n4>a3S9Q+c8B-T!L4%)]9dWJcq-b.bNTM]Ko:!G+*:1P>S[MODf1RkJ:)Cd5Jj_)0Uf`[Tf*)"o<f*TIlL++#-Q5jOBg\PT1XL;G?j?(:Q\:BGd?-NE#;o%S65ZkH$,nL^TF7S`SDNEj@$"g9X\6<P?QhRF_ZgOlt>:Y(r;C:X$?T/4I2eDH4h,hD*%UM,!Utkj;FQ)P;LG$6?(DmJaTb]s!\`Z%fm\aakd]4[C$a.e-Ea^\[E+>^2PJgHeTKr8ST8f49J`PqS9[g\Pf^pUGC)?tIL7Zt@6#1.fg]XNhbeY6:e59'2rlZPmt&S8GCl6N%*j0`.%TJ(qB8ji2.KF(Qql1PL6"Z4t/Q37^/(PN,TVXi(=3P0sUEH[oU\3Zr;Bog09UT$bb9Aunr'`o5SSbNWk\$f=4_LuhWB6sJ%\:S"*5,erBSTjl:T&ggAE6ZM%0K$/YZ(^HF$iJ2Cp\2]bZ2md7s.;ge!-AbW('YV=Vk<,l/#K/R-QB\7ro3^a=VsZE;^M*t9Uf4!%AbNHolW#CR'>PRS6k[+K#CX0>I+J//s/,2hBAV^,nb=<tZ%O[1kD@[CkAS!Q_=&>AA67-8e;X;>gObFK(V.[5KPNA.r8]m<DOrX,%Km[>R&3^s^Falrqc:pL3l+d-3^RA79BQBrrB_pB[f%c-fcriQ5hgU^2rVudin_L%oZEiBABVW4e<PL7nTr[clmWGqB+VT:$m8eeN%Zgi`>#E&6tDTdNr>QCh`Iu%WcWD/Ue.=(+grV;q.;?,q')3#)H`8hJ#(JN*[@G0fieqWlG_hO0;5h>`$.JdreLRjF.TY(7[)#;"j%NXR4,frk#QicgQngL5gk\33bS3?X$,>4XgmTj^L4&ltHrkKhc/h5$UC8^3_'0UQi9_#[pUWP9RbB9N;@?g+dK8"Pat`()6g-Zfdf%lXCqW1/Bm"nPC!NM6`p,6\[LYbhmm`+T"QEK(^6@$*55a^ntX1;:ZJe=LB%$bjKaY5;>V9nhQi54ac6B5o8T[+k61@9^"Fe.(U1f%E(3Z0=Cf+@:6$X3O_!QL]i2B<UfJj(h566c%/*gUm,YP,peiB4F90$!NEgm(Botl5[q4*+Ajg7Q\LTnH\6mkMX!44\>Rblm,"Z:t%._='A`buER3IY$rT<.0RaoLPN@:E+mSX,bt,6d;f2<aAt\jp;\<;#7W.iZp4RF$1p$aDgLo2a;K*h\,XP-.N\79f@_=tObD2CI-G%-2qQKP&OgJF6j[6Cj\q<h;l.N^k<I<pf%:-^EKg^gb"0bKM?GnAkhGj6\'?hZNhWb\&,)A&mI/]TtU8K:g,o#ZOhA]kpmsBL%?Du%n(hpVZ"jqf89D&?>akG*Bm>X@7ic3o_KSZHliN>]GoDf==(=B30tqP)rC%X'6Hno5r=Z7$$TVVPd(fSr4Kns/[ToAeU)NFkJtcs8%g[H21_N"g-@1>Ra.BV97P<mr"iP;3#S0SLX$;mM\5;0NR(?Y)#8cek1^WHTDe6%9j\3$@S7W\jmn.d6md2^(?<Vk:+,QcOhQAD2"%184FB()^%8i`&)fb\L`S<(Q>L4*\`Ik8f3g$]"goIJdu=I87`a>L^hsEUiiF-Ve<H^C?BN#/rlE:Uf0)kj?>\p67(3"jnjRVSh2n%Eb0*b>#J,F;ft>$7^$##/Lkh1rnW4XC?pt73C/Hq(,3mDMs0<ZjfQ]W&<?@5F63)r^XGC!Rch*u')DS'lKhCn0%2'`>8=:]cd?p2%SS%Y/0?D@c?`dPXXQR%K^_UJlgq!K^fc`oQo-Rr4i]3#%qd\uH>`hIDr)-9rj;\#KZ`Ipj4\n3!?k#X;gpG_;[//*AkjOGS+rTa_%-nk>ed%:%Ian!j%cU""%2/OC<Vh].CE/f9_Upi<s2@lO_IJ$ngk%[pbG:HBqN4,u0GrqrdN\*b%7hMC:gZ/f-q\r^EkC`qfNXtB*%2,'D7(&uJ@DH"Q_Fh&YXP+NOGYmics%oW7-aPNF-UtfVaC],bpFCp.tZ$shaHS81,,(,iRd;Mi!Cu)hD!itk'I>)^21n5jfl?/E(%&-Fm*cFBfcAl-`=*'f**p2c56W9)PbgTQNZg1>U%&0"\dO@eps`dkm<^8MPeTk>nHQ0sJnN-.QMQL^mI,AOQ31.k^WA4AZT&Cs7b%=.84@e8lR$I#@1_2kX5c!12H8JXG3"*`a/'che(X>KTfB+g$t];?*,o37/cqR`5]`6*0ItCIJd'J+8kNV!jcn!E?hY$WKFb8:L2.%3B?I[l;oUaq15q=O(7c-liHI[@GVh/JD'iMIsiWt?erK8qG3`^AVoD?ce#c>rcd/t5(Wc%Ee's@S$9(T2SarTT7A]n27uE%&6>"6%E2HTV<lrR6o@q6KYu(DJBHkcL'.1qh@k052H]Bs[Qc/<LTX[%#F'P="6A+X13O'sCYMU\Yn$@8#PaZ#Ae>C_?&(1e-Rg83"kULf8%HEY-QOiL.2U;tH4ZXq%1iO8/P_]rW9B\UGaH/_g(!9^$l6SJHG;\cgS6o!(<05qNg<E9*"CC;qQR66rn;p,s0cc1@Ch,qE79te?-%4X$hdjPA/_NR2Z0c[9q-:G-td:NW@gD%miej^*8,bZe*IDaaI"lgFUF40H]BJ,Lr7+Am!q;>F`YB""3uoG&\G]RHkFa7:K'-C?l<%CZU!+Vf!u%Shp@NJ:];^RN(OGOs:UKm^q5sQ1K*tpJua7b-tGET1bgCljVCc,HCg6qD?eY5=3bM48rA_093+Y(rb*u,p*@2"+0[t%o:pq4PO<7Z'>!53Tk-T%l0u)V]c.]^Zd67;$g0Vg%nFJ2]4]"f%7t2B-,\+,X9.^pkc<3[EAn:+#,2o=7m#3^B"c*Pp,8jfDu>aO%^m[a%/1RYV[1K(m"I_,r(_N2`Y_B9UHTKQ3ks3KVkkR+k5MTS:TAV^#H#cU<6Bs_I6S4mO/]b7-+9t\tQ@W,LS_g&^+0G(.)cqVD%5d(;_jrn\Ybg*Jh%Go=iJC[h>c)"cV:WI^_7fMTS\WpU1?+i?GkP>R%fiYso9W)[CQ'M;783l$j`!RkJY_%03S&R8-@C,67>fGuR%\j2ltlTS[=(+6eeA!VJ4])_+J@LO3qqtk]f%8Q##F[o4=7.ZN`+/:s7!L#03\Id7#+Hf7GYMJGY:_*VJYUa^',6!Y?3oH6t>&MPP%R!bbsW+p$EU;sN&%jn^Nae(1eN`/VfM.@j_1"K`Y]3cekX&M]Ll5Ad`du/AR4g43mJ;lbgJ3TK>-]5sGgI(Fm>5M5Bjep>TojU^A%1A+-`DH/EOf+gK17uP-WhCIuR&+H/e*(U2#fN2`*IU]@4/PO9&?FMer'j@!5+6WH5G"[aX.<c>N-A/]M)EeB"(&";=MTWYcBa1dT%D4\df6XGUphA'/>X!Z-3L:*B,]@McZ^gfOrpTGC@MAa`r1tJE[s16=.P"b*Eht>"N!>r#jG8qPU5g,Db6tLMuAbaUj5TVVN9*,YH%<$CM'ghlpcb<mE>dDFofb"2G%_BF`t"1qL;cX"R$03\W"_+JSRMW[$R,5gqT$BE>]ZXUFq\;SY5pK43;_-3[+kr8<DeX+t8O4Vc1%E6o7E!^BKU-1dR<jUjlMJeiltfSVmONWSj_KO"h-!jqcFdob2sI@TXXoT=q+\_bsWd:U"(chMgH,7(1J@#n_S%;T98oBEe$_46+)%+>8Y"!V^m,SE?k@M`*(pF>#0[>4P/!fj$nWVb]o\W;/6q(cV"p+N>-VB'R/*HrnSo;CW%Qq?R3&#oEH:c?.pBpbP+#NuPFNIOFEf%[g;Yo`O"mu1;?_['jHhgS#<JBeMm)Tjc%ED.Ch^[l\PX=Pf'1a2>+TTKPJI(@9+Fm5Si34lchA_FpoN5?Ea1AF])bfWA_5-%D)h,%GZcabjcCNt2@,<_aX5?DHP#+pX<2V?F*Acsg70DIAOjGG'pXoTBOc$Kdf[@-9FipIE%l-SeZ/'H`a7CP-86@9kJ1c(JOr2JV)8C-%]6-$p>'r*],k.>FCnCu/c)9HgZQ+';OL/B!N8AHe>MoiP8?Gsk(a;6o(JBGd(5V=S6JpV]%-[<Q/R8^_0fK]#VlK*b8]KKN'V(Z"%*D#q]^sk9<GAH<rr03_B,_CYccXNr`?dd36-`2%t<XD#N:Qs3nJ,WsMO8h]!-CO2g;kogXZcm],)-"LZ9f`4gNbRX@qA>$pJbLA@%a#1+'ob9W7O0Z!&S%*&(AS=.g.'`o8h@H7\9d+;Ql5it%HH)M0.D:U4YWF%"X+Ed4Se]s:#&2h7^g-[8oGZ2M6)rc:'3j=7RrfJf%TthOuckb&BQ/A"I#+W<6_3aD1`3,;JUc$+$IY4qWEe7W$@6]9Z,:etcK%d]kpA3W"VJPn+bn*r<mr!En^=N>iJ0[-Meq]TMP:u_C%S8]Sg?>Vhtmtj!Z8)m;Xb,&8CHH,4MT0nu?l6.r>\3c?gIQO1r/uffgVP2=]5@Ctsp+<jrp^*hV8&G*b?f)u.9lr:+od0Zb/*R/q%_2+o"[e;Sl#@NQf\Sh`%O_7?6-iqr;+\nWhSdI2DFqf[=Hn")tQdHZ%b>["J5lCcIdMl<Lk,!O=8,.?[WHk)=FaSIJE1G"7@gP?6%)OY_/8k,=^O8&Tq8+qr]iUkk1"j2M8h4p9c<Y5j?Y$b0:W86iT4qRn;L7(I$?5_.=T)1Ar'\c3?+&L^'6tI`oil.tIloiDV-[bX3%ZU7)lD\ejS\p@Wk22]OdW87/o,dH0Nl5o)@lQ/S#b`h8j*FFa(7Hg$sE#f!_?Y8Q7V)NiZ,l5eV#'TPJ3&fH@QcuUt\A5"1@dsFu%9C)/*eHn06UX(4?FE^fRPZE"o5&52G^%MF@Ou+lgW$\b\m+8T4UY<o)p0EZCEYh_/=X`4ldirsGL$l:^-)shL)c$u?jKVXH,+]`*%"33l.Q5$rN]c5ua[u[<cgKf4*FX^f=]U0;nmjGM4,.(GTnEk,=A+^Im``VWZJ36J:HSLCqGO=>2$[^K:HI"_0+@Eicl7FquK3^Ds%GO-hGQUohZ"T65OJl_-]@pQ9_F&<>lP!`Q-&pYnYRnpJc*I)XW&'HEIjNG1.fK";f<iO[WIh)Eqa[`*/a\Y_h:l<>>$^QQI0P(ZJ%pq9kHka'O?R'C=`<h(Zh)Z2Z/fsUGF4<sT3.NrE2A_/V:U:*nY#]>_qG)0^g_CetQ)Y3]+I"Tt+IX\*mC'3Qr4bq4I%*#gT,qY.l%)YaOoHa^=[h?KJ[N]u?u7'1#+SA)om]`F)WdG4?Aq*^`?EM2EU.p[SZ6srEhb&Hh$%2,\<QWju]lWs<2C%sR%+G#qQOLNT,5:%W^%Ys3_J7(bi'qhe/Ap`l1oDj>Sl_nME6)tAm9b]^hB4R(K0<PDmFiW\_Q2"g#7n9$1tgS8.UhAm-P84(,Ls2In(,`-*Z?XOBp#e2\T%TKfa3B1'hDNq)gV'p/H[iln[?qhf9=QG`i34-T')1`$mAf\,F#g)d)FqDY2WjS7TE&Ua$#lA25bfL#BA(T5ReD1on(fh+PkXruaR%[C7`(c$&5B)m*5`6(iK7GU`CB;'J2a-SOEPJP(]@FHUIg+qk[?T@[986,!M:_L9*b55O"J`>^L7\e49gWklM)P>&:M0&l!t_sFcR%KWTY>SWHEtDhs##NZP4eZs1T!<+84K`\u/tB9M\ffiYEg4D.fOPCh3&>K4fZ7RXjoQUh+S<"D5T7`m^q3N[(lc.'<n26a#Qc=E,k%q/32(T7QenXUN5dW6)F<`43.-c`#dMSUdT'#<)la'm<-DgUJlHdcJF<4?nhBLl3/aV4/0lO0+pg]!!M<`QrpalG'qg^fNcSHO,A\%2^qj.r0que:(pRuVD[;OO<=uAOHL;<gn`VA<dCE$K@`YT<Yi/m7@+BXQ`e"g7Ot,*[[#o/Vf-34hjTP6\!EV"<jB.ugKMAT>S+\!%2RcMQ61i'6f7#!9PiD:HhBo0Ea?ZTgpb?!6MC_gOd8NF]1oZ`5'"A+]0:#5-Yabm>W'dh)j3e&6aM@n@L["6.I'L`0)P5Z.m+Fln%RiL.m=+R3V&\JE2NTFUW&E8Nfii4h"Z9buXIi_LDbU#b(>Ea]s.BYIq'\ET-Lh$kGN(=?$FBVB]CjHN%J(dhNh0n+EBcMlslY1>=%DGTKMj,BV*o?enqh:R?819hm,mpKJ;`L'H9[\O_:pY!38e[TXPe!h'!'9Aq>h(tW=U$Q+rV]Du2"3(b!bSA]+lFkNl7brBg#j(RC%F>lDPVR=e>?;$XWZN,RM[O@qQn`]?GJo*6AAZT?1oQbY9.[/R61=;_$8/?333?T,Qq'f,5p(b.!6>\dc2<jA/)8_sTb3:#u8MZ<.%gT.8DD;.$us!?*<a&H26.r!8(?P'\Egog%$9eB_Y;s7g?@A8Td#cJLHZd0<0<ua(=Z3R54cX5gKY:o9aLMDB(^rt:s*Tl+HZDLZI%1Q1F(11l\K8,I-[p$3q)VOCm!.K\7.]s!p!Gte;:JbmhQ##<9eVf$iqB1fGkn'^4-4a&<Vc]:M>B4MrkoSj%_J!d.qc>pq<cBN5l%J&Y%kIsSZ))M1,8^V"7>S[Zd+W.Ur\Qtoc]BC[DV!eku\`eW9m5%nC>^SM5$YcW0pB<2WKX';Y.Ef-.>!>;qWAn[pD0=W+gs+^iB%!ekt=c_oS.[AlOt0^Ha[^DKT73N9\7I),s)cbkZ:UN0B!V<]n0MS'-^Mp&X$('=Tj5CV'c+KXKEnqn.#i>SD=%;lm=kq>YX5%\#&%7G@S#o,acfC.)dC5c\#P.!dl5$'2R9:Qd:BfX\Xq',G+!fJU.^K7,oMcqH*8]m.KSn[n.%#e?_8b[`E1$1ZuZ67,:12]5KsO9k_$%?@e<\m;Y;p=ffAihDE?>dpFQ4g0H>C8U=dZhI44(eg.1I?-u#ST2B,geGZp`;`]*P;NPQ&@#$DB!-<Ul^+uhh1?o+7,HSE0Hs+s@%5<hXKG()3Dm0hP1e]4QOggC.\_6J-W<J%h<H0a0,&5((3eOb\Zc(7>u'+a-C-+m-%#_t.Z2A4)Fs,9f%1;*?`/Os81NtIES&D-H*%$\q.u=^7*f(`p`],!<;d8@dL'_><e8d=??;O<KGnAF7Qa<lfuj$%\bb_aP]$=+4cVcEnP7UI[lI.GR6S>V&RZcJA4W$t4i@b;=&!%2A"pQp`au3WSLV$APoT7H_A8f='l/3Z*n"BJX)],Hh''OP\C'O#ej84-;)mHFSU-eMHc(<ZhJb1pbUN%^`&e!nN(#7hdbO++G`/M%1>F!FCfWRjkX6][aRSP%e0SLXa(RX[lSHYchR3UVK\Y-7:KAh`TOjjWY<sAf*Yf@Z^BLp;AN;dfhE7+XQ17sO49p'0JhjU+Q0?q:%5W>FinAqE&4oi[[bIuVc't!Y6bd2.MlfRD+B6"%R%=uD]?F'm=e_n!*(uH*i43l&*S[WIP8BT^clI<=t!.a\R;Ug^..'pfi8of$N%*q^O%BOAmQZ#7Uc.6+WG9c43Pr=Ve+(Abl5b4PabE60t+YeCM!m?I!kY-p!H]UIH*Z*[\[4%kTH8PhX\3NofZ1#slK:UK-JLc`.N%b1ls[9*$q`H.BtUnolq8+LYUD=,Cs?hVBfQN+;#iRmb#e:GSGga\naRPZK$E@@LEn<DjLn.V)Eb;2fX(HLXAIj+Rs.;HL,tpB%bO%IS7Bmf-.Ek,6oK^"_/6[DQ78sG>rptpaZ?hisN%>Dj8s5_V8nK'--gK!C$rYcSe5N.91/*WuoPQfIs5(m]hdq/q$EcPbk?06B5!D%W39*_VlWbt:jc8;00&,URj@<LLCQi?[s/*ojh03q]gApZ!bfP*P73:n[!EJ0i>e]<U<$6V_>(Z1S$[k]3pSrV3'_aQ0sJ9o"fi7p%i$IF4b0,(#)A+JH#N+nRK`\C5HS1R)#-r37AkG)H34_[\&AVBo6VMqj#PQ_iT\YB-'kI#$Uku:9iJQX^+)\<XR6>@-/sk?j]>EI<%dF3.e]ZMJ1%G35*:l>kS;H'G!69Zn\)(\VmE#qU\qh0B/,Lhc)7_SkoJGNE9k5<pAP)c6a?H.=0/JTQE9)]-9qq-'(lJYOekG:LS%2*4r;phHn#?fcD6QLeDD+mq#eL=>,L;`TRsIctY3L&a%u)153#SccYR;>ncG\eVD0ns/V1j8n;7lrW\W9_OHC+N8*G!Lk/.BP)Qe%X3q36QL+"ec8[2DBM*u)[%HT$!\IgsUOl:\g[;EB^pquG/#(u(=75N"?&C3M4*RH1,OZQ:CH$/Os7h*:>7NBbO2=$or"_\r__4Ce%Yj*&kZ9'fASPH9+4=c%;S+rA.Pk.laFJe=rA63C)Cd2h-Q.4iPFh!U7o8V`DEeK):K[<[g=Sb*-SOm7lAWHgcEY#GR,cW5ggZ@dL%^3'8uY%A.^ghUTUh6S!+Ou!5\""d.KK<q&A&Eo'W)eJe6-qa1o/etlcmEKb$E>qL#TIJ$3)^BrZk@WF5dq2ANkE.=2c\r'jR*21*%l2oC<a%tTb^A*na3V@#VA&>fB12=N,=`8\/aAdhC'=0-PX*\7PWqU\5T>^RU`K&^1F2sL*!0j"BJbHQFY+P"C)qK]n_gHVQ2-<b3%ef!P0FU(lMV0K]iRMFhhfJ6@^_Le4T2GoXL#3Bf!-)jcJcmS_giO!@O>u*>1:5u&e!e_L<.ESB.4tah[.#A,88r-%h_=aX/+M9?'%>6e,0\(p@$AH9WZ607L8ZK7Jq6LZOjY8U4J(O;`4]rpjcU.'HleT+goN(D'^l8GW:$AF]"kuOVd+S9Duiaf-l]PC\3d"kIM8lb`O%f\7ed^h/'-L,HR[ZJ;l8g?Ds:6sO)Q7isN(a,#GQ,f-cOi0b)5'7&fp"`Mr9hK\SAnWP%e5HG.EQ`1S8k>K]'Mm'E1\_.=%;f+-@%?(PiO"1/qQ.CjLQFR^#]AG)u'n9ML34OG?@6B/m"qB]T`OA3r"<4Ql`rp'AmE8,ZEZV5ZI<#\oomRLLKQi7q@\UcM8%.qP]\.&<G%TOuE_hV\BS&0q=N!g-ptg9M_ZeEaKF42?KWGWXjo_$bu9Z)1WZd#^QbZB`Ps&2"_i(lTX`*AlQk<PZE;l<KAj6%:7lRW`f^'n.(@%C>;"??*0m"l#^McLo<oA[Umos8`f/oeca10`#MS3a?VV[d(QIcaau(ga0b3K5IRl%`@%G<&YGL/h$#gr<YK:#i&BHUPsH<Ib:bRl%'=.6q6"udmj.56riXYOpPKZ]m^DaUf3LfV,I,ThJA*U+tb#JegMW/\,@b;Hb4oSQN\b'g2G1SE,+4S>^5^0Nc8EhAu5:A&O<iS#9%[FA#Tn;nUFPC#\6JkLhS?[D\'&Th%sTfZHs$=82tDV##=j\J[`K@N2'[p!3cR--<9@-.)#ThdY!W2u!n53#ticXTF*1a%2>(o*%*%Dh*UClrrfU()t-WM#g.u!_Gm`aj'UiOI?1`TdP34(X;0j>$uuT3?@$+IBrN&$i-dneH>bTRI6s+Sog!Z?=M.mUW,`SfUaiS-];<5%".Sd#<Ckj2f/F2QpYG)`g>*.OJL($7Fo-@J>bP]&Kqj=&e_>e+i.1MKOYr!H!%SudX't&+eZ<5q<%sSNW1lJn'9qugosO/]g(]"l%4@G9Nl[j1haY&AkJ,XV#Q8*iKE^F"N.1:F[icm;@O!2Kq;.'O;3T!5C...4'1gN4n3E-r#-0Pi*0M#Y./suolj-U<bR_3SK0VRc4%*XLbpd=^.i_.mJ]^s1rr5buDBl0+Il_qB4P]_Ue3n,C0tc5QT=/=D<\EF%Npa<6VSTSc@/G<fF8'EU%/k3Ls2gE#ONAF4ra[3Mc*%'Dm(t0K`]O'(j&_=+]%DOWkio@F)0]T29_HLMZJaKK9/O3C:T7EX$eAc*oCAe!bmMr(2Mc.8$A2>YdHcNoi8^'.]%VIJj_m#YFqS%H)1kATd'rnn_h8B&C7uP3b43YPp]&2j0O-$$J$5j#-<FBhCt>a2XskS2WIhhPY*&LPaK;_j%H0Ea;(R(8a;fAj,ngm6Zu`3"?FjG%Cf)ER%QF*;7%Z'8V$*E=Tg<d066H:/Ync7$gDb42-8tX-!Kl<#HWT]@F/=lJgP`!WZ\O*87!q9H,<3j*4&I_LlOJgQ7A2*5o4Bs2%UBnZ,;'p5(*(.W2>)L7!jiYC;r`c&:f5WWP&f"DAp3b/ucgH&MWh/ZR)mM"=)I4R>"+b;DZ,j32WC?]Q+1EgQN8;eTOeohM?%MIg%70l'FViB]f/VU=(+3c>7c'c6i+4."a@h\\R-.[!"VuhP5F`sLaDHB_[`+uL7Lo9fE*!,Uh0Eh/U\o&0?.$:AEQ.c>$;ql<@Kr.Cl%PND='VkXtb1_>\"$r9r>XA@^Ij`;!\YtpZ2qrPK2;PVc'g@YLF/mZ1%gMDMG&W'mk2&*)_Td&4KJ[d\*Ghk1@4#X5#_>$QN6\=h&%LD7R?DF+TeoA35`0b\Q0`,7br4`X*^-#;"/?.nE]5[S`n+7<.)Vfa`;#941/JeSDg387fW$!uKG?\7;V-5_]H0([KB`;iTT;@XUM%A[rkrp^)kj,T(\LO2M\Ae"mCWc_c>\_9=gL_Y.YRGT?8,H[!h*U.XicTNl=H1!8TJPUe&+XO]39A5M5D)!d1SIGnuf'/Nr/bWr2<%-O6]_NkIloeDNd\Zuk'oraRg6^Qg.eO.LHE8k8Vl-$ZW86X/;(9A,A/b,JHN<3/a&gjd$:J%pO]!qIeGqgb:94D]Kc/7F@K6$a%t%-\M]HcUb.5,MX!bBH[k5hL%9Qb)X*!2i-'dV;"Lc#Z3f9oSoI+j&h5EEOl'bMR>!MIC7\4,Z3<>]W>XS^WUmC;-6604RXV9:m7L*%H7P%DJ%GrC27+<LDD/Ojj?:K)U<Nb5G0F>A*88;eVTfl7Dpq1S]ueHHZA;=,W7"H)`1D,#*/1msE_`,Rg$H!KV4'RAL-9MVA?XmQ%[/Y+RI^rHN73dY(l[j$+#644k_+,flYFm$WD1;pBqim2emF?+SPLpN>6RH=/GmVK9,,hu@gFU=iU9h):$GMeeTZA28)S[8:.ThUU%M,?EuKUIB`,KZ[PrH*L4U@(iXdB[eF%=gWpr9*N*2>ZJWq9FE%F6k1!fgJ/9E2UHLoK-.2.(%X?6>A)GI7QdRqGZa&McrK3R\SoS%1BGpG<A+V`/fYNX[3IAqD3/TO7>*,7kGrKVFC$s';k]S@iDd@6s)oiY`&Q^TAR8Jn@oXh;WG3afC[Z9K6rW"mfB<3Z=_]'r<HB"@%%9iO#j1/.in<tsW[/(k!qhpmGZV!:W7rlCCE.<>cnu,#@m(?_+oqnRmn8Z;m$!"geo`#urY$_:1?$)#BHM$?i0@YD=IO6N.ntGe)%0K1SOG!:]bHUmO5'ql5>V<LZ2mJJ1B!'NX$*"7ahRL5G8\M"4*R^$j*2tW$1D(90[*LFq0HR"d6nOgEj=3Er64[L-XN![9iCsJod%^%M"]&IiG>8,32<:$:9J_[mQIeem]e@@6!m8LGX/+Vk[aed5foA@>3m)#ZDiMJOTd<BKJMPrN.qIA08b(UDZ`ot9M\7:160)n#bH%^%1g+BF&;oiDVcYb6!:\N:S_^k8)h^Q"p?)1]2)g8KNC2^"DAak`U7\1n]`"qDg$I7gdai3oB;FM8eJ#%?6OfP/&&&BF;Nae]7mr%/MN]ehcJ8q:)?fZPGu7\:@7,dS"5B/WfWW5&oBf;F:AtX2$9.lK8SYUegsP)k'h@,6[Mog1'*I$ai`&-7Reo3CK38<3%W3j5\2E`%6341[.S;Uj:T@Rj5]ObuH!$jFMNaP'l_B!X9<@o9h@E`('2^_UCP9*<hTT"d[$;pJl"nPY6u>IaOV/[.T=us5/PR9hHe\Vrl'KQ:%bn(]RKEdWMBS=i0"*\2UgJX_#TB4Q$$;Dd/:i%"0!//En+_$f],FQn5J15@aKiM*MbL*`/UL9bn1:rCi(Zd*9?;7?E3FG,lg\^$f%1Rj_T&+&LASWn[:%2W]7m%0sWcGVe]G&\[>gu:fC?r$pp[$I:)[Z:PpDY[J&!kYYRk@B[sQXsah^j'>1(a6VUQcp4o!4-0\,CJ.p%/"@p">989-m..kE.``WbmiNIHO%B$-0a,jtmuKS=_l!'8SlfM33UjU=7NtNQ%lC.Zm:?Yj-NZp=*CLWcR:.&V`8f6-agnGUA]l<'%GPU5?"Vp$L?0l?+6%f'<&,S$7JuK(0N8?P\jPrd0,ZrUKq$M!E+7IC'G7keHN^;</`N%T:/WclEZRK_\$oq+#[go`te6^EC/ct9N%QdG1aVu+Xi4TtTUS--#_k,"1WE]Zp<i/GCoQHMf#0\nXS*t0'M3m6!"7Nbj2WQ0eL8)DBNe3*k]BV^k(GU^h2!E_QL1o)XjIAV!(%4]l`77Apn8%@'X;MZ[F.*fO8M[$Ar`]Bn.C;I.d,8dd!24)4UhK]$'0s+6X=N%`[)3pi)]I)/CFcS<Hdr&th"Y'GmdFLk7="17HU%:jcAi<B6b#UBf4k@NtR"9D68?jtCOt,2aA5eV6S0ptgnV=8r>(b'*4(5m"jj6JYBK&J&%*da'/TLp+G'6E3sbJ(.>qMp>9PC6FNk%oeckO\sJNDlh1;ofh@$V2?_]q-#@g=>jgh_4,&m%F)O\U7OEokJ%<ZUnoL;9],<o0^nW8^m1n"UTMb-!9V!jhg;8l9$0$gQ&;!m9%WK)]6`QfmJDO6f'5Go,_e:$rO#O<J'[2@$4f.)69T)'6J);<V)%<%>)B*=b:;[@qakJ!m=8"IH"C*'O(\K4(ToKAUB->O9rp#HI$%.g(4!&jf?bO9N%@J'IZfO)K40X\G8I2V0Ho3'q.TY2BW6bmbGD+>oc%2@?*7G5ZeN:A%Z*<Z&\tL@$mJeSn4!;It_\:N^=(`_rYD%)''`LK5oND#7KR#gY-fGG2%RqfKgj%-T#MmP=i^%?8m+pKa$rR=1!"CE-01fTauQ<YUj$)gM&S#*^0H[A8;HJ?$UZF;^d'bS>RUi%]#tAd#kRoW'u@cYo.!NN1Z'PreSCs^4Y)#@r6QeLc'tOP_"KD9dY2C;+G2!,&XW<LmMe.!UQ2/G2V4mbr#'ue=hh&Rf33&O#o#bA%<FHS6j&GY$8>t3d8-fiCJ(k*\if+AZVNp#Dm5)3uX#^k_W3mPRl(`%+M&'f-9d6ArKAXT\'P2[-Mm?5Oo_&,O$`d<p\Tt.;'S3JK%\H'\<2/_F9lQgP6"#^bCr)HQ(lUbDL6Y>616f-+Dc(,l7*ReO2KU9k%f=t2S9<!Jcb@YETpde%hA^Uf_^4o)LZp])u+HV&@q(S[o%m,a2PT:@>lKSLc[X140,oL9j][n=PIBAMo\hS4L]e;"O(GO"7/7^XE)IXPJ]'.;Z''*=5Al7YC0-)"8l/[al7l%#IT>R[\dQ'$gl%Te!TEF1I)-H(oHsB(%gJqP`1p2>CWfig0?1b50j"9T?qX[4"fYM?d>9T8E9jIL7DYo;DU$lYZS7]@o2i/f?7q4R01_Yd;s-ZEEhZ%,.T>c<S,JDpJnAg>%mD<3-FRQW'W->PWdOi&8QGQ3uQg@)oWn_T$3..ckZ[='ofdk68Os`r+3O(4j;.Ka@@?>SQ@E]E9oBhn:RBe%@,l!+o1m:&6JENKok\.2dF$3?[T'&3@@B#[@WS]b>I5FV'%'FQ-#mIQAK`cF8Y_1ZGpfZ(SQaopMbNW]d).0%W-FZAUrR0`YKKkc%bkr*4$b3jY^E]0(5N?ep/unXbREB0IYO*b3LglD5U2Bru;1(Djo%p6+C#@.uc&+lNKRVc:bJP+HdT*j09re6!mf'X[YEI_&[!B`h%4eDB>4*)M#?lBo(-U]n&UW/X*;@s7[N%I?,hmD]pCn<o,RHAHf.\?fUCLPC8!/@;NTWgHH'EmPDdlc%l:O8Jp^>*?feJrtXO:P,"%nW)0_BD:dY;Cdg!ZZ73`_XZE_IlOd\OJK.Ph9LA/1H=5@Xnge!c/>/>>WKes]#9p_fj$sb=@!hk0*-]c`<%CoC"EKVqRm]5&h+CK%`S^T+3jgf8(/7.cflfiFo4rA5#(J^PA:V%I@fh5aFu4`Q/Zl(Q-A@Ht*H8AE^LOY4W9IZLl3lY8mkg1TLP:8j7hpp\#YpnH\`\1*%SFrmKOB^D:mA*d]G,YhBi_p*<Cq@=u_iY^W9cZ%NT8MeCjM;bI<So"L-_r<oJfU]QaVM64)XE1D:"BUP@ODMhF50ZfK.s'#JZ.dV%;%FsNF2jgE#06VH+/'Fg^@";V'oJ5P/8duY47rl"L5O<eJh(f(UTr2f.83pLl#\qm0-p#7Y0V^;RLH.$N>3I4hG%ad*-pm`@]n>m%)bk_9D]F?+oEbHeW4mTDoUMs;9;AK7FVLd/hDJ?"D.2YQZT)J'!<njP5W=cVf/@J!;daF$*K>Y1)YA%USXeikKP+tpdiG3CGp`i:%dTPpc?I8r1Q_sRg'n[mL+fEg:-TcA+[p06Ad@B<3+!dh3k;"nYd]-AE2r*NUkbiSu).q,!/DQ[hT%V2XDH\+8TDf>1AY!Ji]4GKt%`HA,LW%=u%8>>%^X^0J:rIig,C?26_T"JDIIlVqnHr'u&[]63mERhahbD:+.C-"3ph$a<;UF?EhQ]GScl`QoZL!YuHll!EJ#eMA>%q&G-6o8JSN?pH3Y8o_Yq,0&TZgYTubB`ceVSWX:tf7J:qG6WEMIMSE/gBq&/']akkR3HsB:??2%qe<M9:gG*Z!L7G2,rEqmF1A*M%Io@6YS4GZ0lSZ)q*X^8bp=a/#"DR1&j4WHId"U"*(ZC7/hIae,9L[K]=n(/:I@^Ub<:q"J%N_JOeG.%lr_r0EIsN7n=9&6ff-VpS%AhnZ,o,hFkr+#*nY_ZP-eMt&G]BZ"IR.K\Ls-o_VbUZm^LAs2NrQARHrV\JrVkXCaqL0;(Lc>%J5J8a8#),VeRt/u](jZ.qU;I;C%ZOq5N2:?h'L3g9r67X8Qs89HXqR"$:eZ83n"Z-UI^,tNo+DgV3a%o!/eQ\t4Tf2+9j0qD,f5X^@!MJfps5-T`K2W+9Gu<>H]An7[%Tf<_rm*HesHHbOU7<di%"=,/8,SIK5j0hSf;$H6jl,-ir@15gnq#gLSq#cglQ.I%Nj"UbT>IiGU^kj\(QNr^E&<%\l%6Tp!g65Ls%FQK8TF5X\Xl(+4`q0i):?K<6UGq'E_q@8P8OZAWUX`t5C<"#Opi8^Td],%+k@p.W"3Z<<@\>VFNWjt[`>"UTtFZeQtV)?R/lLHb!%-(!l8Ft)[2:jMI]Jp:<LH0aB)P-6K:dr(5%.H.^qQq:`)E9F@7`;4liabGYC(8:Z/K4U&&1q2<TF1?_a3&!`RK7f_kUrCpW.-m*1%bKImR@@;/(;nX(-FueJi=u^)0=_L)0OR7T4.T6b'n9;YO:X:Z\>,Bh@:t2^le.M)`?%'.hQ:H2`>tVHLqGerLe36+XM:*Asng<^k%hu?i@b@<uSGuoL/]#[)G(<1K=;5KO-'`[2jqXott27/]aF&1&&T!WR3Fh`(K@<a%HfV&t$)8&@a/[_DjOVk^e*_2fJXp@fOU#c;H%85fm__dB-h(%pn]Brn8p7a\MYJ>66n8si4m@=i(3JN_c$)h60).3k>#B[F`-GG@8<L0ISNoiSksjLZ^/-H8_L-Ya2u<>,JF&9^s=%_(:oR+Db'_Ti\^ocB[#bK;q*#JQJ"9*6S.Tb5<;SlZP>BI0=?DQQ*olA)(NZXRPUt,QWY1HeUP*j09!qhWE'r8^V;<[Gt1rScrqM%GdEHlpm^af-CIckF93ZDI<:dNM6u0Wn^X,k!gYbOcEFO'C6-f3ecH+Hf5h2jk?_G;h.&h8fcfC]Yc"%$48X*UVrHdL+d7(lMj4s)%Ip"f/p0RU@nm^LgSVa%:25+/R`c5Nl8Q/Q7=_9B&)_KT,Vku5XpR>'^5inboS0%./MY'bN<Ztl/a"4/+p6f/Hgkf+Ic%+r*rV>:j%]e6[$PTFLI76=V6VT9QWQ6K$pZ0L\"ElV,*DXOH?R"Y%N2;6G/;SA6/]KPn_csQ$!-ihhCnTVP"V5IGDJca!Vlk6euW^\5spNQJe%DKN'a=E2@Rp26'7S1Y!.d-?3!FqnJIj^:YX3?h-`YR<a2qA,A>>e>l]S="["gM!>T2qG!dl[G>eoog?<1]8P8XXSpW%5m0A)g#ZR%Kql'1D&N[uHt!1q9H$$P47%fHp%kF+W24Q2l?eQVEQEdciTZNG?;\HUKW#ig[p&5"'[PJj"EZLj(5^Y*bP.PR_,sV"`_ki<?/Tb4%3JdW7:QJ6s-$PsB55+AQg`m:?#1(Lsm.\Ve'tVh]nqm#7T&u%;Z]jbg%JN*TXY-$lS9SjRMq#tkr+e_ullkTCB&i_cLlR-/5r#Va%LXV7KlN$a91F84eUkCMsoH>ob2sA*K"qqoi6r&"pIc,_AAcM7&J,,SK^EU6;%Vfn<OkN76S9?X!FRejJUW0#dClEbofOI"NS&Jru%617BG&bht\g_\S#?b7iER.I8:6Ha+hG+6#&OY+H,a'FTMJRifc5XO$rDVOG,#8^p$,Z;&VB8q0H7`n+QAHH-$!X&)#rR<IL!0s&L%UF2<Yq$F@k]<G;BCJQA653<j`adG[k_)<1d1e+F"o1O>/"*[(-C%or>oqNkb0"?2ZUmAFrVuH(c"Nmpn`HP.JleJ"CP@jR=[J$Xp%g\8jOX_`u7%a(I3`8$2tT!#T1D7R6j<9_`t]>MY$PbfTmJY[,,qEnFeRgs=-3K__V3b<d.*4//:J5&T3^$WF;AR(UjDT5g$fn2OL%\r6Kni-ngtp6][d"utIN^`AC_c+huY_.$_^g/72E3db=91a<oP;B<UCijn=.!ugt4G'Z4pRQHV$HJU9_luI5V+,5F.KXM+DY4i"r%H2DS))a^9E5<u.:=-iF&=ELC##uQ&7T)DE">R&RhCKlGS6H2lj[?jhEg0-nB3GBCGY!9>9+m?5Xr(NYs=0;kccmO;be6dGP&Tm?r%AD#*SP]6F$"Vca#;,lRBpCgQOENZTK_SU^0f#XolFAr1tp3C":N[!LF:^^m!pld*V6eq04\1ho@joR;.*&//iG1UVCi:aD*7.HW:%=NWlI:gBeUX,.a`m9u1C@`'u7gQZ:89$s(1L;u\p>iu?AXq,6OB`>(KjsX#I88NO)1IM+_*F;*c@[:7%C2%bVCHG87:QV(j"A44P%,OZG=(<2Kn./0S*gqP/]\Iug`YiIHgYn>OLmm#jhR@8"]Le\!=di9c0;aRgJ[Qg$lIEGh6m(2cY\p`8l1;K>SL/:B+R9O$c6:H,)%%VK!k1l19Jq1Li@;"MCX7!?+*oQU`gr!7!Sh!o;7U0=9Gc4YBol#7aaPD>d^`@jm*V1hlNMZTB[2D^U_$0,nDo;+BNOQ>]uncDA*%\DIF]&D&m2'_(pG1\:smCWjX>5P!6JBjUjjk_0ej[ec85"lEUUgQ\NB>?pW1r:2NW/Jdn_O]_g\=.r79("'o_hfQ#q2LP>.9kj1E%hl;`,Z=+@G\RD(BY_UIS8P"t:UFg6#9gRsg@o*aLS`fEEc6>;8`a9nbEACm*'s68+DjPtEcmCD:=7))oQ:mCA_P8pAbI52id0n;E%RQW<$TOJOCE/muuH<^C-(1u=JoE7,riY.PKll+':d!pq%@e:K3>mci+(X)q&*:,?:Po,njAR@2i617TeFo`#R?>)%'mY0T0>7o?-%+T"c!Mko4ki_![S8o-`bVO!iHD^T`#AshjcAk@QNH778F(Lg!L/H.p$kR-=8@!Mi(@rS;OMn@4DH:J@oiP*+SG?fCIELK#7MUFc*%*B%#3b#j@.)**L2p5ob8QLVg8)t@L^I:ZqMhM5?;SaSr)B[SG.-''9&G`EiEr;&!]J<rDldRFO0U>-8ApZak\<q73([og#%=(.La%3,5E=9EZ_?g,tOU9FZlLeU^V.>\VEJbZ)Y2<Xf2pa8inh>@U2kkQ&KX\/'qpJc<8##@G8-.!?F-lpdTh1iIM3!M6p0i6/M-TSkXZ%?umH"aDSQT:@SR-9e9qCVsXp8a'W@,+$>1S@)Xc:RkAS0KT(%r3.>'#^H<BX1W7bD"_`7kimjYDM7::s2i<)0OIL\B\aJ3c(iJHE%q&&a.I>lQ4o-R#`5aAi%I<).CJ-XI##C[=BlUs/RNp-qiJC^>##:YIA'h)H,V&7*$4b!'3QLD_KY-m@D*%seLi9-a.h<2?$C2sQJ%]L=Mt?t)Y`[$#Q%_5FYoi76j.e3Z>qJf[%>\#,)l.U&mf2k_YK.iq9/#^.6U)H2dHY'#L;C?C-[2+?Q]E0p-[dj*J5(lnW"Y'Bmd%fJ["_l!g?RJ"7VTJHGea&%r\UKfVU_nU8Wr4tCR!Q9s9BEHf)!i[&K!4guNtLV=B4Tfm.ra6kil9S[rN]kbrV=2=5ThlRq4Vd$]p%gn2>ekU;L>idP_>+X5`?)a^ei<bNsDj<Q,G$pK97&m@*j_FV($:bDF2F"LJUl\JbaEr1[6kKB-<gb08uImJkO.c3bH2#oB9%Gu4'%lWZKDDA#O_i,HN>Dsm0KZ7=goA>j1S0I>b+A)RnR"a/K>II?)r?h:M.lGJ$rh#;[^*"6-::2fIT6@"d3F!%=4"ndRdK@pBKY^6JI%5B2L_TT8h&L_!(a&0jC%^"92&aVJDogPD.13"8l>%sMNq:^1*mbrpX::$sj=d/BGn@'WiQ.oMt)k.DDMZ=1[*Yt`H?h32,;f"64o%l+97!Rl15Yao$QGEg+qGLhZ@&(>!:V3t!0iXWkhfZoHdj8k[9QMO5#<,"Xdchji?Y#_n]A0srWAEu&k]@tm'W!t#4DWi[cBo<jd^%Co'`,S[2BUhu14C0u5(_[/n7#BkNnCE1c`hZBTV'CumYMY^fTZX*n5NAGQO"OYeG94N?$XqJI)JYsjF,4bF[H/O[p!G%`q]+h-S[%[shf7Pd<GMHY-)#(h\3EG&21`0s1jI0Z9u5a,WK%]d]D&cF!-```Qe$es9d9K97CF^Dn@@Z-PFr^J"e_-D,K@jqL8/2hf.1RIp")%^qZ5*.:P0tB%Pt_<>._^Ath?LeK']T!-]B\LNh]:i?+RW/`S,Km$<,k5!-_Y;-ie(YcEea+^7U$I"G*mJ)\^O(Z@L2SY9g".N\l'%!`'4W9Rj*T*XdtJ&E=*kSe.W(2,3lBH)5[6XO>Eqn%5QeCDO6kI(gJW8iW_"1H#FYL7-Bb>4oWo+3B8h]GP'3fQ("TD>(rh,Zqq,%l>HrN<b#\ff;"$YIjDpDPiTNs1T^^!'uJ5jd_(SpVMJNO`-:5l]!U$>k,0I,":Wm8":M%2P<s-%>nO]'^#OBUNmn45m@L=toK+9<%2'q/Q2uVV/%Ps.bVu2tKp:3u.EH9VFD4n%1r8*T<@.O'3!Zci_%Q36j?k>^Di6lJh$kE`%gt=)2<FO96]rc3'"^OhE<cnkM"T1@9%<Y>I='l`&+Gr^Uc:Ta4_8Xk.8:DUf#437o>[KX''G@gpfHj[9^qQB!i7EG@7_toDkcREcVf#1X"Nij>--cg<FgsSX;j6D7B(^H!+%=25LHYoA`672:F?WM4PMU&ju$bm`l;)f8?4\@&@cYgZo4&'Ni$a%)iD;E\5(mH*<NT\.Z]]HAYI;aK_c]I-N#bmX=1f$Pbo9EuTt%0/tTPHHN<C-Z0upW2Sq:"dnN\q;&!lbb$<]nDS99ir.D-Zoi5PY^"+nTLlUJdo[`Q"J^AX-$7/[i1(Yr6H)\Y+((o8$G3Fi.,Sif%c?7HEh#:krDd-[4oeZaDaoHOQPl8<8aoJ=E%@HS$7BC$$Vq=Gpa`iNslHUB.GsMM^^9-:uK=<9XDcTFX1hIiANEenlS=^l/d3-R"%dR-M-(n(G8q1VG<$Ec`_NPW07V6.t"Qpa.6e"Bm&\L'"4])rOnlafn"f^)W\]0-tZ\\^53it=mnf+sdp@qem*F?q+GGFt'An4ts<%Ok-j3e@$/6Gh%"rRZAdt^fY.[q8i2;%pfHV*Ugnrj?]NQclpl+gD(#INLjEm2kbYa1N"u7D^1=/Tb&gJ[K_/'e(bAr.eR"K[uu(X%M^.LFC=4Q5#1-Os"$$d4&QqS7JW5CX_j*kDh,R"d:#\boRG(cYBM`]s!JM045uH/TGhh?3On6Q6/(<Mrd9#HX_@A<B),YtIQ/D_;%-E3J5A?7W4X2`tP8Q24Lq8P%)pe7_W+i1m#_^XQH$T*P/G"qlW@&5^H)V:*hZ>CWp&fnLGT)S!^PNCp@D8'ijA^Yd_)I#tI52O2.%VXnZ;dY2`rWOKdUNS!iA9'sEH$M=CYL*s&PWW\A=+:(RQ0u3_:(q3=M\Q]=.<7l[CV.r"\:NfND>n:(,$YugSH1Rrr)]&WSh^WY1%ZiB+is8,B;_(=gSW0K*9i5]\k\\d!,^S8`:Q;2pfPp";-c!.EDXE^N-;]"Lf?1ObH%r80n3;>PEPcMM_.@*_nYo`p0(Z-WLpZIk;%_<5jc5<ZIfIgPeY`cLZPSlCbsj4qXP9kd2=Pn4q\jNi+tZn?U61X87mg>_F_UnDbOB1fYu<UX2YUR,c1:_frt.67<_j:!Xa!=t7I%\77_5&o2"6_@QHs)gl\ie&63]gQtegDe$\)A7([V`1Mc3Ru^N;a6(m;/R>Y$kI5+UeaBut7ss=+?#'WS#dg'1RbLhQ'6FCBa%=Di%AS!5OGJ?D.Eb_;j\[s^KSBBGI(Q-g<`i%Mr)(fUmH9601)W)tKQ_hQtbQ^oik)sVb4+V>87,:R\?Q66<kggbEMpnJo<YA^'23X@h%[gC&fXM%U]]OZT,T[L4!,_=(_fbD#eGKUfYclCKkEs[&^O^+_iMt!QUn?*S/_:c%\1YVo'KolRjZHUdmZhXDWN9TB7Dg&N<m%-@[%a-;joq`TidODX*&8Rq'u0<L-X<8ZIa1]-iDc3->k.8K7NT\I%S/@1.G`3F,_)D\TXf393&pFmYTBA(hL1C'&t-TgF0h%HbTVL>s6%:Zm1r6.IF0cqhm@M+U<*,*-/!i/g@Ccs>q\b^[t3I[Yp#TJP-b:A#CO'!g)+It?3GEU(n:cC:kd9<flDW"X2u+@F772KJNk4R;^M%m?Pr;Oa.d.[N,R]Zah#:DAQYGQ^;4&:=<1=?ZPPF:D_D+\78],Y0jA.lMCBYqR;IZAP'C\CGU$:3hBq-L!31)[E<Qp9u4oE^\W(c%g2WlH?,SshPk7(`R_Ms-mBi$nlo]IBq7P/":MG:ElrDEOB73^im8`T6_TH^.84E&1:1eaj1>X3U8&im9FMg.s4Es[%2Q9VO5jT/Q%@e'tdVKRJi:V#@%-B/ro:&j=EV*DJ#WY.2R13V4-He\bl3`t@sIr>Z*Qk7[RF.6uC=;XWo`e>PU(\_N`qa-R5K^-\CPb7a;([CVJ%G'*@MR(8i;;k)fDY%:NnZb6aD]2MT&QjtaVEo#nRp?K91We^JbRC&GLBjYCO[2d0V]t"CAqO28mIWt!rMjkNr<fhcIi^(.:='<t9%U+QabC:Bq(5M+aTh_\@qP]PgD:Nu(I:r9UgBk4ol\Mn^O;O3Vt]+u).)4<7Ys0TElj9T'[J\YM)Tc0)'QOo0+Q>HL61fR(f$nUK*%b1LP8O5DfCn*f29LbYVQZ)[u<B%-?8Pf7MPK;GF:XOQprPHbj.[OtCkFQZAZ^@ZT1Qqc;ui7NlOKbuNj##2<t:Z>:#Y5[J#<'3+a%&>ohP!+kS:U?0\R/MN)D!ufc1BY@pQ-AeYT25NtbRV@'F90'.u(?i*YN2(N"Z8#/&IFA-VW]m#jm#L8``P\1e;"#dpd4+-O+N^!=%D'7>Ug]la"jm3QGfkS6[>#,EtWg2\TDGb>VMHBC='Mcp,.UGRpNPVGE=hn[Z0+c@=cmL4Gi_>M-eMRae_F%h<3-OpJ;MI:+'u=UA%JO8qd+r<^$<@C($l=umB0G4`i]m>k!63D3cZAG#&&fD5'aPhAlF:GtUih]JPHC#EXA\'N!\gfNmP6XU?6G*!QIam9KnY3Pl@hdFW%,He$\DZ<DBRe4P`/Kd$YAj11Z]8HZ&((=@S%G$^)>_>o<n#IMF;nA5W-&db&#):aR)1kh8Dh<%D#&'Z1R4<Pi%/1sGGcpaXpKm)Y%0Qqb-];?Z>$U>[]T7,kRMVn#GX_Rf<h-IE1Qs^@_]IS8B/PZU3kRb791K!0LW-L3fs6+ZXnFr]^YfMmlFA;E1(]9+-7YiW4Zf+=L%LhQ,F0mu!9aLm`JET%\9/%t8OWlir2iBZ))dX^@fZZ2qBe*RR5Cs/,!=$qii7Q-uQFp\c67DfEnq.]\$S35Q%"U=<bD1m.8(D#lA%<!RQu=-hq/Y8furO?0Qg20H8(3ArL&G]&4DTaX1:jn'@i&D7YR>gGWSf^ij5a9H[.^-gGHR^bN336,9u<>R$X(;Z1nj(duOd)W1i%_T4]S;pOdtq$r;pE<S2\C\ZCDpA\J0MY+Hk^7lpuh#2iDkS/:tHq!Yi[gU`RpH-5!n%7>VEP')a([\c=oB?bNnmrc@fbd>;%Y8H)%[!dqZFa8mNd#+GD*gm8mR;TV4Xd;[l<8QeEbbf9FdGrC-f@\XGh'k0L?N/iX^!"Q0fs[IG"T'4F@^*[g1rk"S]4A@d(ntOY,F?=l%Og,6B$_`I7hXgWuQn/2m87Ai#+j$DWCTVk"[si&)27L<OVE7$UI*Wlu8Yn2oB'4\$43:`9-j38J1JBd(-f#L+>CMZ]^((Zfe-$MQ%X>MBbg2BIJ3k?o;&Wo6*M;>J`cn<hWfg/P#VLcU6IJg;J@c7LR\:;bIQ@Bpm?Ud,`@*$W6B@YVAPN`(7+jJ?RWbZaVCF>-"L^VXl%N\.0_gh/F@Zoh(T;FU6G"aESH!A\RdVEP0bl]rbU4V&sZ8ACZIX$I_95&bl$2<>53#utlIUX/h18iXjq*g]&qh\0?YanD<m8U#C%%]<$8s^h*69KWdENIWs3^ioo/rV\`KeP]3>?[.5cUGKY$&+E381Pm<ri>,&YQT$Pj-m9Va9CGT&>Y/j$.c?@nOI,jq63ArsQR4k?)%bBTSX'`l$#NNL7M?lWU_'MS,'lM1'pn6(cRB->t\]m)]m%T(6X4#E-Q6T!ULdH^B7H"9*^]g;LBF1%Okip('"^KjX"!ef9;].?eJ%gsq@VT5/B=YL"V9k1V]!neAIe\W1+%KodKq6T;Tj&k]Qa.b6XD)Bh:LpBcRlX1uoF]L.Z4n$V!PE7fWhm/aEdC+JNO,Z;jQO!q6@%'hHacBTm]pEVW1j-$T(G!;nlW)+"VnKVXbQWgl7"*@6("?`XarCK&1?TX4&sA6@dUh%]2&!+b]WXe-&J`Z$(nbeE3%`Z70+jc^@X%E)m;;(31l#R4Zs+mtWJ07eX04mQNfOX(lgC)]pFFKZB]c7`&966%W0T3B-8RZ76#,W]X$Pd/)CT`4)@d[]hhrQ'Qr]0YZ&#9Yu!E%Y>VX"i-4S`9#fZT!pLK;N(r<WhZN;WfA#5)QW)gEpYJ,n_69VV(*^_HZ[C49G07iZr/C3E0s7T_2OJ)4fHRJY$`;M"Fkg3W-kf`>%XL?j&W5f?NM1%sNM?G65Bqjm':jY-`L"qqeWb-_NLfJ`srnEc-<"jG`p,`[\=R(5KSIAl%n-iWKc/O+OeTBJ$1Jt]('7JU[bD*1C%]F2Cj,@ScW+(n/,C0H4^l]cCU[!V0kpSg5h*]m-ZL]V.F4n[;[k+Nib$AZ-\,4)`68KtMU:&c2cT?$6T@9Z,>XQ$51lU%[5?iRKZ%*PG!\asD;'E8"\=lP-2;,1a6L`rh:jg=]OQUNgFj,nl,FI@ns<&sqiMN`.g6oaLK*joNaZA^%E]INnVodK,hO@OI:0+LhBMFq18p%@6d&&VRbF&824iIdh5oZ0anVj[1d9Kf6#c=N1XGN)*KI:/^5gsSM#B^ngl*7^)^*eSgB*MrPk"]#PfppF>c^aH"SA89%"l4^A_ID%lKk><]V$F\W+7:3*ZJIgY2WpA%G[NIe[SS&/G2'&@-Dcgh27j.'=;TIR4!VH:H9%AP_D+aOa5_k1>f[^=Kh"]+r,P2XFr:HZuOgH%ag_O_Mf%W_1e";1,f.r@6k3H<#6MD?QSAB.7g'PgSqb\G#CY<:FX2BKZ-gn>gLph+aRhV$kKpV`gs*W=7+*CU#gdI]UgR-tak([*%)%O?"^l3#pRjVGR$%IC!^C8Sh!%0;JIJ?5XBUD!snPhs=5#tIcW.DJMF9;YJ6rLt-IM>thi52UrgbtV(I'T8i$*Yk&p9#A&#tL-9%jL^9!G(P;B]afU[4ff+hX=Gn9F#O+-=eNE%*2fYPXR%Ih4O0298#cG<PFoVrdm:I[)!RCGhbRd8FS\+ReF6g6>eo&8,Z]2)4<T<&%`4WlK'F2L!*_mh1?-'J>/6Hc]F8*s\%qY>rIOT]#l^Yj:k^;_KUEdZQq[;o][S/Y;rKQcLFI)[r8F`*5Unmh[cS>?/Zp.]BJ&7Ki%4HnrlB-tih%casG%<4f0kUq&c=Qde9\,@2fp:dGF)p+o9rm"`2UX>,O"m&r,o-=N?s%TOJIC/kSkY&$GKeS\ejIu9]BN,c.n%%o-%_`;%l0EOsX!sk;@GY<iRc\6]bT1kOCS-783QBQ-IH\:(=26Eg_./ZC2Nfol5L:h8k/kJs,RX,mBU$rner$r1?GrP+)OJ@-6c>+EO%45q^Ur@e@=%G&X(5DqR:CX.I!e0sh<]6rU4dm(#j;tSALkO*XCp`.:&m[e")e^>s>@]6u[IW5Qbs/7";18f.'43!UpJad5X#rfCP%];UId=f7n(DW`V1I]4]n(cuhh;j!,]Z>6L#HLrfEm0tW3CSQ1CKG>lnb.$D&&Oge/Ish-d4ldV,1#P]_N3-O?S0pMtKS!%%R\0k$%G9s!GV2\Cdfp79XIbRc#q+9P5I'B-AX@(>#h3>PYrn>]eX`mQC8(6,A\Th2M@EZc2n*2F`2+fu%'K:kos.8!%GOBGUTBOHmk(d:X%[SO#*l#SE%^n*(d!E2"N><Te6lr<r5^.*\tCY'&hPcgoq7-^''9W>]V^sa#:e;T>/c>5Y+ILb@;?PFliVXlTb;d,p#HMfU>J!o7C%dkWq/=/MtTMEcQpQ?r*G?Z#E6eX#%Ps2PBEiWl[cF]kTB90E^2(d-Fma'(YDNBAg;M,n;"1Pp`9B[kXW;Y&-?Eb_:=Ase!REj(&A%W$=N?:\ac!"T<eT(=QM#$@bO*fZ$Gb`T\(-:\hB/_rnC&ri!Z<E]hZkQ%R8N1\kTCEqTM:mGj1XH9VWl+P!]60[!ZMOpVNH>\>[u%U>,Aph<7K*CZb=df!h_$3<j?M*<4>!^r*(o1Yt"&9)-_e2tIOJYMWY<89)]o:=kbEa*ulV8O!?_89M?=0OR*Sm@OWaaRe1;%%=.;%;RrBU%S5Tm7@+e@9?#EL".`WK?d5R@^!pYV==Lg`pf2.:*SWce[?<d;iRn]=8;M^V?N9en[RL^2a*+BPMq<*BHPHJZpC(;4M5G(k%95=L)c^#G![BY.sU0b#:H`p*i-r.BldP%ffkL47*g,f"TBMne#X:U`_2&_7XZoV%iCMB!dVu-VsCTZ&F$#!bi."8R31/hA"]9TkK%pCHb#bu=l(?GGW'mT#bZkE<Ooh-Df7G>n'EJ;!"0Hu.?>0E5MZ*opE4?6&=`IW7aHrdY(=l_'s3R<Od%F+.#]p7$Up\_RIUh.(VQ%=Z]pT73Y<,"P(@t>/=CB/HcE:mh5l5'/H6'[nb/TCEPJ17I(V.H-CZ;Z*jGG_#-<FT2aU/e"3%6[:QQ@eb]6Z@f=%O5UPSuS6GJW%J,H/9qgZR'HBG0C@+,kVnBd)$X`sYO/5[>uBS.m:/.n8XifRE=:QnjYa.\?R_`(L\/^A#oOS&,Q7Z0\5B1\*&EI"K"auh1[VAW*+%qF8N`/Si#Gg-<6FB$0[MRed.q,-I@Sq;\-E4uDnbK>Bu'hCjB;1r?7,L'9P@fDW[7V,0*"Nm?G*[EIe`qD:%erJ4q#C>eEi"Um"o%@;R#&*"0ZW&\5HBB@T"aW)bR8k%)H75a-B^oRp2!,bF]j<3m6_*qa<\Tn_pk[$\s(Q*+LIkdPJ1S`.F602SL1_tdihDD9Q,!,@!#%s'I*Fa?Gt-=`E,Zb)@U2c8EN'I]S7[T.)K![Ut"![S&$$,R+j301/-)-uQlHEQ2JRiCm61)%R;51'&dRld:F*HJ8]*=_@!g[s&,b%lO5CEe'(2^/U#2`!%N24B4)ct9,OOQa3,&Tj_"QV@K(ipcqf-L/Pk3Z#<<G[T\4C@dtP/.ZK^@Ua6WMdK</V`]k_(7'puK@h(u_c%Aj<Pjci)d8VW5QX%];T\OjiVo_D>8pkM"qM5iti1a5W:#"Nsd/P8O!b8A^87KK.0GP4,u]%:72^g&8cf<]P)8WH?I)(/ot&q1JVU%"GE@"1'e6)#:_&"a5Oes'!'dPdR38*=<,YCGaUKY!q`s#JYfe1dqUCqKn0oF[VES*Y]aY-#5Us4FkFRg%f34!6Rnitq)f@R2NH7D%!/4n.TsSOoFe3d2S]++.lkg00)DCP-Hrml%'"IbrrIq/)7"<HTg[cP-fEl.\J7fY%[MbrG>,mm`i%>X/BmSC_qdoZ?E0%!EC+3l[%r=I]3RQK9_Y4!Ug1Csel7fI!)em*enGh$\(BQ*qa)=5HX;r=ECXJi1.))<]K]Y^[50(rY\KkqRd#qRKO3*_g5NEp;bF(A\/-?#B^%7N#N:FRHN\,_Oc+gXsPm.C]fGiQ>kg"!]3c,4T^:]]o$pP!qW["=-i"$qdAQT4gKi*5Pj6[&!^o>&Ztr8mk[]_:P1rDl."hEQRU0%DFjQFg5S-FD#s3E>/'CY@0G+Zb-;gZb3q+GA&25d[1?65oMeu7h#&Lpj`o2TkCOg$a*8[uc$%0Y<54ju+:%3FMR@YigL68Rjo^;'%^;FJC6ZqRW.A<qTX^ZhJ`=MTdf^(Y/.k6Pb]9t+^b&$)jB7H<!Tj\#h5!cW'XS0CKa:Eha;It@XRt.cE]r8Bn`94CTgGaq*1j?JR%4j?1$S97Aags\WV<G;hMSe%eD*Q!ra88TlHL$_Qb(A[@`b_k!BARhb>"fpjR9?nGikKgFQ\>UGm9@dSo]A$XII\-6t/WfadAOOm.%[,`2n3,6=fb?+"r:)u99od*uKfbThF#7e?Tf#t3KRG,,],B+dieR]ff5`<^Ar`6GC.+o5Y%VN5gEEf&c93-WkcDZ)Kdn=d13+6q&%$g2oGVU2GGQfZMPLVQYd_=A*p'18@tUR\o:n[6,K0m]4/f`m+il@[WC.E$4;LL'N43R,J;,3P'pba2Bj$6\<PQ`6Tg]+C'%h^blc%%PQ!=d@F'&MYHEZr%_O1rs75oZi;q6Zi;c0/\Lhu.U7"rO4'I,i/hJ;h@qt]&rR$nD=(#lU)N[.3A2DlW4e3+gD,DFk4a;L+VMn*%-N='jh.OWrh$NW'c=AN(X7[sb_$Q82m/c^Z1t*7:^@K-j"7;1)6aB.p;;[q6en&E2\B>U^1,>a"%)oH0_B86n`@S!JZD,k2%RgUA%7)4a'S1f@T-pq3p7oirc-V=E!;tltbXZP"i!pR-K21!@IKEO9Ys$5mF)_]d`(sNu4O0E$&e_4_<f0MB&GL1?r)>@8oFA]O=b531A%g.A>X#C*k[Q,(XJ4:=[#mpS5TG.occk*;Mjpqt9JjCA1GSYohm<+s0n3FUBBmC;3G&UkiSEJ!&Q%XT$g]h^$!Pd@D3=6).2LS&q,%F)PDD5lluclO\?#qOT_>:&@MY`ol*!*<LdVkP_S7,V/&@&H$+(UgV0a\`@#Q?`\S*G?SVB9$Wr+W2/K6BSTmu]"'F2',[o]fc8nS%R-+Orgo!=V53U^u?Zb`qc9Pik?*W'b3KK4UfmCG5gn#E[(d;(6a]*B*EEec]'!F04#1VrO,#kllK")Q/k'#qt+*YM.#0^V].kGVY%"IB"/U4Ip.G8gIJgoFYphn*#*o;!5$BZhPj=@*(nf58Id9gaVLUrgE7`E62Jc:DiSQr3ps."q!%g2XRuFe;'J/(o3QcJ;74?4_RZ%JZ4D9UHptd^CcYNY@Dl!<soit7K$>X;:q_F_YrNYs"[C,ZL>##c4'YJIE*3.-`Q[eY>NbkH.!47.;O=q0`t,uklH1f@109pP0c1.%m_8P@7"=I2;O/3n`AHJU(I*/Wj(=Mes-Y!cl[`h`#QPBhBl)jKcNY^Xphn-=$&"/>C#%g!^V"Yn94V^6Q8nhuMA+eIdF<kckC\%p%E5a"Gq8"]`*UoYL#Qq>t.i!L/\U?VbkUF,?JMCYLag5Ir1<8GlK@JsV>]7!YlJ"neAKg$e41XcC?fkP//.8<=OL,Ifaa9BFoD&8D%cC_JNo][5IqO;X.<*H%Anli@J*&'MGl[G1WZ`P_lGN(%Q%"W(;PD\<C1XAH'YHkcq:ar\:a0r8`'*TV)7IK,OcdS1X(]>$hM%4L#%'$0C7fIQ@$pgG%+jVP^Uf7X,h_XD!hlT/s3S;'RPgSVWBlu$GXaB?Q#hr]>X/'N)b1+R5G1:3LPaTLtD*od*DL`aok#R<UUal1ii%B,bRUQBkWGd?AI2^u%?e_,#^V;hfZJ6+p$;j<V>6,M'/`Cd(m$l?oFLK_oQM*h-H8W0E&GlMEQlb:X$G&GNS-Q<R6oZS3[uj&YmD%*"(&FRo$>DiG0a[F+nq\DT)E'o1X(V)GW>FfNe,58KX`?neKI!ig1=JV*?V/1G:LY!pD>MaXtmd2ffFoo\El:hJj-u:^q0B&hKCI%8Cl_`52F>a!DVri`=S\F17MlP59/#JSP@<ED]C78D5rDf6;#rs<C3(rc5Mq;2#(.`Z`p=2E0nnB!:]DQDd5H;)rZ[<>="6lf&)`T%Ir=KLkpg)%*:0P1MYB8SlCTrp.Ei#KV=VoSeG=6q-mWEu..?WL*?WXu:ZssWXErB[k=s\l+:-d@LaB/a_.5]@I2>.(I8iT-G[G9V%mqb+Mp=JOL?\hd1#bG_1#m)\ZG7LbB]S`o$Z%'1;oc8_cY>>/nMa(JD9=<Bl9a6jR#rM5qZ$mB=H=f#prH=@f1?+hU/."TUZ*]#9%?d3Orj!;'&"E+=/kM4#O(oPQScMMZH7oP,[mMOROnk':K](1-oFCq#B[lqC;):`j(d7UpFgGT-bM=:djfuiim,qU;+]A<];+0$k(%TNl,m8CS-QQXm230&pLZkD88?HP9%ZXafk4qP\nKmJHj*3@YRrifRTs?U;0n*;Nh8%UQs015j_f$to'?SMLDE_Y@gNIi7N)a/hnk%4h"E&j#GLqc$l+m'aW+!'+JN]cKf66rcTBtY]5I.rH:MG[.of_i>rV4f(Dh\H#r6@B'(D7qg34Z.IG9EO%0F(U<ct4PeFE#,IC<J%U?k+GFPlVR;]7KNo:W+UI=C[`L]7+ZlK&:@O;_"*q2b-a:LWBf9A7&lC>l.Wf=U@OO&a%]H+*Z,q[$f&d&RbLW"VRcB!P"HAHH"L%dC$W.4GPgt[!DrRS2_kC<d$p[DXCDpf(%qrK%aX[X=^ae`-8q3hnHE<nJ@DP,"7M*q.J^;%ONDC\-@.6*//.")TGNQa9p"5^O06\%N[SS58Qop291*s9M+*lglH>RL,MVSpXmp#J9(TFT.dH[K#N;$.3_AZg*RiHRgiNl%nX%hqrtT<aYHH\cknkin&rtm#YEYkmoJZ&[%a&5Z@LUN2+P^$NQBAo0&gFEm_73h_AYYc(N/%Adm6fGOckWt4*PT-YO%.jJacn0q<'W+\O\CAG,J,"0)WSLBPi$,OY[]HqgUgCK"%%]dRuo(ILH\W@)<-os]X^:%q#'#$US$)A?;08jrHa_-]mY0e`>Vj,\^OhTP=j/?!WLUoq9]Yh"lct0I>oi-7oG&jneoSS*Cs$)Rn%aiKVL47i"m1C0=V/&iC#VBa_g/gY>LL!&pHq3?)_3c[+Z--@(Sl61askqn)7/XX.7PG1mEeUp)=iAj7r>!=#ZJ`N49\sjFJq>G[Z%@$ftsHck*GHEM#5q_Y:T<+)Z/kb]lV5!he.Mq2SUUc]FV!s/!%OV<\*pU`Lt@+f4I)@r7%:E'>)fE-MWS.+KZ#'TX%,dS1_je7fY%29"S(ClH)?J-khGLIsjT6s.24_p?5C>Uad#hcX8eGYC89\i[iG9n>1V[$6fIXYSr`S3QZu`@A=,1Oo:.Y8a)SX30s8cT)f@-Q_:'%gXm!7j=3bDgS.K;78FnPLM_T;ZG:audWUU7b<h?g\P4Uqiih]7f\/6m#SD#b/)/8Y+lm3.q-/*1VI0BZCoP;Pn.#Rffp-Tjg:<7S%")Ro"3M;k9HU'*td9dM8_&u;MR!MaOiCtfkn,)l--+OCF's=0`iKjR,"%dVl%s5mss%&i*\%(iZ7J7#>oK83H'14Tr[K,?K7^sD^%0TD`/hgI\T?6[g^AY/JUD8^Xfk/c!o@$b1(BKm,]fU[#DRr)b)V'Ft\$(Fd&IIq)Si8f7]gOqa'['^Z,V!)M4-n(1AFbZ"'*]"7'%.eHZ+O\k6lO;)$(`4>ZHf4g3iQ)QBUdPGoQYZ=sg*e,4)W>Ns-TD*Y[Jk1D2pR)ijX[+T@q-O?af:i'-W)G'K#.>8Z)\Va"Ll>h<%]f<V+bNb\&8#CW3217_%G1F1hk)"R0gZcbVoQMBAEgQO1.W;.gh"/\D<=^h)H)`">lK^mBFSU14c10@CXCU&FY<J-HnVFV-SJZn`%(K5g$gIMl'9uc$OQ&EJ)aj`#@gp*"hs7e]e'"aW5f*=BZfPDoY,+t6k-3B:oU3**A$d;DDA(0n.fGsN!O'i,[UiF^@d-ER'Nkhhc%FX1Eq*^2EeWu_LI^3?hLY;IA43&;ub87?+.,R*_m<*Oba1-M_Z:oUk(_DW$+;atRVFCKnB'?%uBhY;#5$d7IJbB:+iV7+:TFXP)a%'Qc#([Yc(QN4PcfM+hH;BJa=U;-K++I:uf!'2JhErej12E@\.t&-_gGD:7FF6`VpOQ,I7#i37`RI9,l8N%_'$cRQ(Be2AZBhL.]4%&mfG0I=45`#Z2C@*(J(YTk==`_-`/P&TH`sN[tn?h`F-:inA;HY;HUsqd[ln/,T$O'ZhcLo(+7J/dEou)937Qm`RRJBs-lr`f[AU%C-[9/,F^s2[m.nFEN43uoPl^h@1Q4>_Dtce+Ja!kEh\Td(2/oQN6i/NWHfLV+R)h+1R9Q4o(M3PC#/)hOJTq"IQ#\tBR^'uaa,Ms%.CSC(jOe?*:%E>.Q"FGBO]-@hA<0=mOX(m[N5DdYo`<gk)M)<6Y=Ej_N0<T+[3f9Tf*$0o:1>6*>*@N%:OS?qLJZTU6H4tqi$f9i%M4JaD_C^Ls:E,otd.Vn5Tq/8+k`.KEP21'0NeoBkdon`Oad*UAol2bS/V4_Go_)36lB*^q3&+,f`6XU&-E!)bC]9u)`@#m)0d#-_%V:[@N*9]3BZ10_;:9+e%lM`og&33L>8hkU`DO(+$H^9a!!ur56@.a%:WVbiir&Rr[P_2@J+*i^lH-TRU/Ui?e^_E6)@25u!In[^b%Ep]nk!TLlikJ%b2CCRP+WG8Y/Ipf.9T3^bYZc6ar\r_j+&lViCJ"o(og3.(TPegN;O_1r#)V^9K)mmXN?8Rt9?ff\/3dOh-&TFm6%;k\VlM"Z2>-m*0;kb<=YG+fdY4g2^(&^aeK^Fq=uTcAE.f"NOMg.RP@jgjl)b\WR>DOSVSH:`_1A>$r=(l8MaRG&],W!A7"!0]kE%CRjJ.2*TL<hZQ&l@][Qt><bT$5Z:M1Z,gK>Am7H:!T%]cK!QOTm/dD@8mU2$q%sE^g"]hOP1FAQ_/IC:B!LC$*erjp!dS7PG!9**%Up*$o(uU\5M#&GMCdM.4?)%&9/r%LdEaHU\benft]j&YW%-8X=i$h2)dFAeFZ\shYbtr7-(e,fRh4>f$C<o\s$k6=mSo(to&8Yjj%-83c37VGQFB'7G7JVJP-7W_M[P'^;#p+ajT%"GsO.!oS%7@N[lba6hh0oLHhT`daT_i"53oshWb<"tXM=#cPg_H.`6qa\!4VT*,)%ZGosMfpiTj];hLL1ob7+6F!Se7?9lG$\WH(RF>TL'`tu^X[BQ;Ftc+*m:_6:iXBc>lYXsO!Bpm=n$1j2=7;%=M3u$Z&^#okQjN7n%[?6pnbH>O46=lV;84BenLU84ZFN$p:2/6quWWVEL61-RL.!rD`r3%I7k!#F(Vba>P9m@:$LK8qK(V$`*2*Ak)9&=BNmqs3&ZV@Td%gSK"7kJgKpE33.("sYu2MpC^qJD<ASr>u71f>2UZS#KC(92klF+GDb^Kj+Cgc?m8iT3]0bVY7s,a#Hlo"n)@(b8rG?*'R!T8@u4i%2#C"eDgkSY:5gbVaj1&J;5ZV3"WI[-5Gem+T[B4?bcdj_WR-i@*36U_d:g1GCd5oI:M7YV'Z*lYGVjR3+1(%_0iN_K&+"oo;YtZ2%)-s+mqW3*F[PSdY)fQND]QO[^dW`ok1b,hgq)11dj8cd_Cd!4;aR9"j^A27X5c]9ln,`nS7)b8UTpedNRRa$I89BGjO*2ki]gO98%BLh-FOK<T9)7mEIFU%47rSca>-%#!F1&kg23,Qa77+5*eD`j=M@MNnQVmVV%=>kVA'W.c_^!nckY-V(e2KT/45dKMIM=i'dUUBq*%X1@)D$3-IR?Br$b*<eV!HUZJ[g76C!`qoU,b9rc/B036U0b$&:Ds4^#0l[i?B]Bt1lAV\R!<ttN4-*LZ<K.pW@iP2u]K:R6^NdJ7%J>Yds#Yi%4W,^o:;ju9^ZE)*n_=I)Tp9cIi;R12d$\la[XmW"J\oe]*ULq+J`+#fq&r>Lh+@"%j8tPN.Ds^P+.uFH9dNcJH+OS*Y%EV.U<rM6E9XfH'IcCq2FS0p4@^rXq$k#?#"V8u<2)KX[hEeH=GjE3LcM+5Nb0bgr,"9i>Q<"2Ntj=Yld@o4dQ9k@msrdK=3,/0fF%odi;NjZ_i(#Tdsr6M,_oUVG#bB0#/&0REreof0%XfA;;Nm:1:`/_(acc+]DtL13^j@&9K$Jr'j@:Nona@fj`.3]LXaQ4h;-*;Oo$%.O1*^!&0g>f.[KfZ!I=0S#$+<3Ue*4Z1"s?N#XO\6<0:W:,@N#kZb$idOhGf878u+IDNtk8_Zl(5jl":<Z`^@T&^]r<aMGs&L#V\%R]QB8'Q\p)S_FX)<+Wfs/*MFWh,]7-)Pi^]7fO-I4Sf##+t^_c(*/OpTUiCo(*VdlPNS/.FraUp5OVicL@FT@a*%Skc""%"ps'1l%3NL7_RE*`1iE+P<K3MaEZfUHo\\k14lmKD/KRtX"j,3f(4]A-#gq:@]Yo;22%)UM?6N$\&')fdkMe=C81`,%iKK9JkKbTaS5"74f%CnD`s=j,O1`8b'ZhAg_S+WRc,gM?)g'e"K4>IT8BJ:aeGI#]jrf<e2r$$.O+HIIO@;Y>A`N5MJ,+4o^lEuU2)q)[:uqO^,$NuL"H%4%LOn<rk6=&Qs"-+RHsX\Q(SYB*LQ?0]-Iul:F]M[JsFR]24FTH`ULcIG6.8r%DZJb7AOYkI8W-=35WVo9c(>j@;iFgAYi(-?%q-%d.]iYfL2R%f2ef&%*_59ms^CLK3#;"O-2Y`m0`].Cq[cVZ,'QUM@(,&V4OOYJS_FaS(=YQE`8`qcY^G1i8C=k)Gfs-AB\$0m[!,B%:B)o;&Ve:s[eTaWaR0GYdb"O.F<q=?a&m6!8IB0&pK5\IX!FB"*$UKQ*+IV`(F[ZL#2^."o;)MZkW@bbC)(Y0ku8P7s"-8Y/D7-t%cuVjG!LFRd&tecR*-#$b'%?9Gk#gX*:`gnlhXbW%<jC,&7qlFHWmZ$,MkJNX6H_<#ek-Po<pcp:PL=nV]T=E<r\pABqm`=*hkNs:%gbV@M(5s;i;ndXO"=!k-F+HeW%T=mc2E0p)>1URagfcnn_ER`W%8hi]LlXEVl$T^)Ac<l[Il8)(jb=Dh(VS,=k'QNo=S:.S!TZH=%DCgqg#@GbsLVqgsH"IiLc:p(Vp\8a:s10gb02`Y.iiAtlV<*cQR3YIpj(!cYiC[d6Xg75g:KZ67rROe5G*V'%3R74AC6Gdfaq(f.%54a@JXS6@%(?)([CTZARZ9<*nh%B:CS7te.@[nl[?q#M*R:=gg)'>NHcOQnF_&_\Dm,r5J&/SiqErkq1HqY$\^!=YJ]p"'-8nJI=%($``m+oA)Zq_c@^E/Q!dpQ`R+qL\X]enoac(W:SE43><C[s:[<?1H:;9?Xm5D-&,A=F,pM?ma;+iKi^)a'ndd!8RoJY%n;NY#_])%XK*2gJ#q9:p,Y,*!,PXDS@1M%X<n2HI]`An2"V:Upm;C-1:CsF?6glg/8m>Ch/Abkr!ocXTabYW<f`\_L<&KV2AdgBL-j_OAgf$$%h=7Kr)=Y^OV)uSi$GdjhSo6Qah<.>1jR#Vu@I]S`CnEVOh8BE)e]Nd-F^#buL4!;TVJ^&!STph&CU_UG/MU>8G<./=-c%dX?("E>%MT2P_qId..1u$fgjNV@-CK_lM.*3kqZ"%&iZ9@6-_c7S.%Wp6[$#^JdUF-I6LYuZ0&B??.$5_\J+6sEoR4O[#ap!MnlA>FHfY\dM%>/.@ig/'@aV^#paBl76/oiN$u3Ag2'[,R.1l/udD5!r[SFq<\IMB-?#BsuhD5Luu9k`lk%K3b0X.i`*P!:^EKXg6dZOrA:2k`NSp%/QZstiZOjqK7qFTkZF8_8^AQ]bmI7?iS.8W1D;<Tf42J5oC/,H8Ak]pEF>P8??9hd,KlkXSH5g0pOBVb198S8'3RF;g1THAa3>Z.%D2YcO%375D,"F>#pLh)]?$q\A**?dM\kk])P8qjeOq_j:V<$0J:9fi.s6'`f/0dB0W(1u0*pY"e`<XS#rR46!_(,"I'GG=qHDKS0%\_l0ob/a95:`uo]hV/%ho%i94#PT)o:62'n'NJDp3s%#*f`\^Go6$[SU+D.Eafg_gj5n7D0d@:BM^K!Am[)9k4(6G?iBY!-.s[fZ%HRfGSE.JeZjbf:8*9kc_("m$MR9YQqE^0=_Z4:Q%^^JV6Ek%apqA8`aooeJ<#&?u:>K&*(IMJKFWnY2b#NbgFE4hu)]W%mc`?P5p%q<,LmE[<TB+e,XeK)WP:a'ep^eu4mt2S6)+2)dG$NSk\H2+%T:E]Yl')Z.KEZ'eJNA,r[$WR"s:7RkpLWR>cUhUbQ[L<Ou*d>+I&%-ZmSi&q#5&WU0)C?Ek?0g;Sko7ELSl:b&VZG+^9/8O6Ni)[lOJA`dGOp?ggT_]^PtFh(NgIPp0CN!MleK6]41JX3-U98M/.*oqe)%ESq'PkV:dad#Ut3&-$--F`j8d?J>NlV9[N4I%>[o09qF=5+W,,4tnQQ\Z`LDe2qPDBUB39_]_^*I]2.L"SL0H4`?1cqc[Qt^Q4A1%qDY$g#pUe2/*uR))L.OH6Tlg>1M(bs%=6nW;Dk'rJXXU:^uF0:J4$e(TWNOqgZr[4p+"A%Nd7t5BrnTl3!M<:C(4NUd\a;aAo&tW%d%/hr7r7e2.\m:%*LreJ/s:t&r]'0BE[@s2.`<QH;\nF!31g,bBEi4!Z"bep$>=3s`E&0C&ef$@B^c-)8@;C@!8!$BUp9Xj2*R_8%`cY8\$Hc,/Z/K[oVi%B&"Ef^*&^P7`e@VO]0dt?Bfp]bjeVXjpr@uIM)C'.H`?t>Hd4$NbH;Raj-A"WaYOSK5?gC@$K97pHLl+gI%re`4"Q"2HEkc.\(Zq>p+1YU!Y!S:]mr<D*+g_FVcH1C8\4eD`M[J%N7Z)r^tN`XttfVeM?J.Z`dcua&mWIsfZOn6\]3=;rO+.RA(%DKra=^>'3?"5>-fVK[;A1\S+IlJ+GB:XV7MM%jR=VqJ,i[KuFS"hK8tDn[7VfW#49`#2\Sa<tWMLE7Dun"u)%.G8r^RmD@<8D8c6%R5B"A?Jf7PUlS*LMn\IK/A(A0]cC6L8o`1VX'h1MeZjb#eelrJ\iiYk!.14R\3jZ*ES-*IFTMEQ;HuHj%/s#S!^NE#35?U,Lq<F!%o4*I:1]%GX4K;[*]00QaMbB=_cVp]CHX='mB@l:)fEtcVB^A*46r]UQ^7dtT36jZ1MA3:p*&BHt"7m7u>u[]4!I_@c=r98#+b`qp%7^Z9`_tNkM'oC$VmG8K4@@]mRQ4O3$C>#s*bW*R88ZD79[<9k6$\(2@rpV`2gC1C:mR!KXhdcgZF[Lg#>*e8EP;b"p63^sm:>;d/%5f5_!Ncjs?(%8l;WP*MGL"PbFho$)8Uk2SJBN$fneWcNE!D^E"fbGEo*.3E&`^Ga(;=bien&L,-);b=sVAh07!icD=huehdhbm4Z%M-(fDqd6(;[$\_qTK1e%R7PE@3U(][^?*Q)qK4,+i5oh;gEd3hfpdMM5ac*NiW#P),)(/2EiqW\2ta77go*P!5L'a3g\e3LESrV?%0RoO^H'\uHDOcWB6F@An]FA)HW\/T[i1BU0.m6oSf#8-*Q&E`urYhX+cq$)$K6FrTh/Ad_CX"-9!gdMLeM:e#]@]"n\o1?oa4l9P%*I-.1<.%-@W[>G6\I;U2=]Y2N.!?uG/)oR3;cpThl%N@0mGLaon\)!Q,e4pMre\?\q(mRTeRBqADg`9G"h%htL5<<>HP<fE7eanA%bQgPa'$kXV__^X'-/N]S[7B'+Y:9:)cZ0R5glG/s0"dnu,/:'QUM0jOiNs1_W_6D.f<GVA6$(-h4hR>KcHR7lcPO_##*#B0)S_b/%E#Z^[TjCLU9$XB&5*+5(p6^.&)S8hQN&\FY4P[4!;dEdf`quq5R;j%t*XJY+AWCtP9&J_mI]"MdY4?[MI=f<.RE!k"7g8+*S_ARu%%"cb,3>gOGPGE>T$c\JB6h?@A0_)M;?DE*!19sFVM6Wr!F'AJ.^sY0idhT;rKsFp.NND*:>tA1<]#WD!8g<$ur!0mjhc$Q3!JXlo%e[B,t]6,4!gUU3%gb8:$`'??<&]/p2P'UY"<,7_tD69$hj_<^d0@&WSa`4DRIWke;#6ho7aRl>B9YU<paqUSr/N.\^H*2>!apZ8*%2d9%WOmA%V[Qq3hRQWOV).!YZ\EiLh$h:U],^WF.,IY4<)AW[<Ei3:UIYu&ipN<kgK-#[KO'\J9m55UflBYD>3k@-q^W`"lgNd0!%*4mQ'D,[Z7rP0@;0hQ\AEF6<0N6HuSbAB7Bj,>[o0--dkm0Q[thB!XhH0[PKQ=9;mB$/5OMif4Ik@GAOPPR(>?>qm#aoTZkj-$nT%fM3=)<`d3RD59i$L*7HZpQpO&roQ(,Bd6q7McGV&fqI1gk;Hudk5:Y`l?*p9RUA^74sM9Z8XiClB_PR'&?jl9^T.j;:EH1.Mt2#8%rPeUq9JiL<1>k;P97T#F:hup75@unrX/)I.*sZ4e`+hM+EYecIJRhT>ZESa1$BqWsBU(]$NpkkkjIlrFp%KN97P_[,qM_%a6.4"M%XEkNQVqb^kTOJ>&c^B/^;qt?<Q]N?,>o6ph:]08dWc4_;"KQ-#1n`:$rRenQGAWj%N%;?bmMrU`5V9DF^G+R?4k<j1*3<1`T(q-c%6O@p'N*QTK3Q9-.UYANp<d;#=12&euX!rukld$b8cF1/rTaRR,X08&#9+K^=g?sB:/Zg(<=,R]Q#MYF"A<UW"FBC2a0<;N&d-'jX%/FC3"XES4Hl8;VrHT^Cm(QW8C6LC.TgfPmko3C!iRorS[i:#a&[-CV8S=akp3XaohA\#),J6tGuUVbe'3R;WJ?Cq!>Oe9V">&s%d%[[Og"c2Y=CHMm[`h$#C@!hQ739&Qu#m!>8V<:)`e5)DV^K.)QEl_pTB(.#]L*V#S,Dt?+-O6D"W+=1M2b-.qLA>]-^1a+8X9cE<2%a*J,3"=[b/dHT+R_nkUhT27,F3eJ!tG(*P2!1&^-r\VTSQRN'8hD#HR]h'3lVnDW_lcM[m`F)r=p]N!h0H-tSo%kEH=bpTC.[SkQ%V=Xm?*?/dc@D-@b5:pJA"qHCXY-S"sDc`^T4.IUuYBtrCoNB,BUpIchSfOKo#9Lf\D/2Ko`H:q/g!4SHq*1c^T/h.ZEhh=KCs_NX%_-VouC<?UpWV!]oqj`$qF:FR]k&u]ap5jRXW`V_5TUEtqDcki8JLj+_e8okUNo"b6E.\\RohYRcm$`aXkn_d$)u/d'J$g)bG/+ij%m+[-PrbVn9Vo5\,`u9o(5\KB^o0`0a9q8%NcfrZ,(V*\i-^NZa!K"odLhb?omI0\e=oJ,MAD_2Vl3tUc_/Z0qdU,lpdb^;a>H%ja%Ap0?nlpseEMu$RkPUR2P':jRj&@gP&VO;-)#2QSnkD,8`[QOq&[lHfHV#U^ljQnB?Y'T>s'qTXbUXLL/ei[WqRdZSg'Z=CfK>WEg%7lO=)jjf9di#sKL,pZ:=nE-)hSnYG(c&^]CDIf>&&/RG%![\V-h[U5oOd)/Di/Ogc$*sm,!<BBIKR?Kn=0Z.$p%o<t:.`MA#nHh:%Q^3+P.c7qSm7'HO9=X9`'eU2^[.;Yebp+U1M'O%FTf+OdNPU*XGH=IGU%K*AJ!YPg=5.=$*Y/(@n,'>Jc@gP-'<('[-YGIK_40)i%_E-Ghk.T<^(8pbB54)/Khtq88%"Njdi]D"F@*^&A9RX4m:WMe$^*%m;S;u4f0fC]=F=+&GH@rR/NkO:nG2$(^4a^S9Q!Q7O+;a*`%0MCb[@XBWu6QkHP1;ubmZa*QrqhF*MRJ5Zj2EUpJrM+C(3Gn>pRYb.mReQ%kPL9"A&j18#T&)4[T2CGJlWkPu4d^ZHhS,=BkfT(9%$TUA%>D57_0@mj$]Lc=\-1KD^b@+'.DFtljpL2+:&UF#MlTY#t8PSjbfDk#T2GCGOm+r3gg;$^36[:fIZRMsuK%t\7GhZ?$>8_m7%]+=q2.Hs:abtB)_X<NbMgCp;.*ZW6Q\i83K?<T:YBPb#_&(=KZ-V(5<RNcu,5OPSem(`XY&m=OJ:f`G2<ftBk=6LJQ]'bt+*'ael%%^mNs9rdimapJH!@?R$_Ath`585lbW@_-o&7g8-3f$OAG<$XG$(56#N2,10=!!u%oD^iV=X?b]I[i='9dQ!J$0?H?-*Fb8-XH<u*%8P5J(MM2Ph*P;i<S[FTGeJ,%@k@Mj5[c;D3FhiV#;"<aW?gPf:/;@tMhepbI648@c_KbM7ckZJMD\m,.DHJmg1_33K=RlZK\SQtm%/O0q,CbON/8d4uo,VC\EKihYGSF?SJKc9!jA[Lgl&7kHM+)Ds>Pr0LXkWZWhS==-,%2c,mqqr)*1R?"@HF?C#o\>8n5jc?+("iDd%&aqdU`XA@>fjIs<O%GY)a$dZW:)9rSS=.]O!40.:F[K)e?5l#]nh`M,&_\'-9"/UD\'C.ZCXD=bT#:M=>eg;UWqg1G=nMCI4*]nQ%Hk)\9oDUIM.:!LO<&6FAji(nN+AU7W<D1[G%cIWrW@9d6BjtiSbA=rCl:u^f*\[+._^+q:`X^(F`nc+,U(F(#M-G_q4P%a=pUh*E%dd6TbNpa5rb*28=GiO::=j^d8Ja%JI+moF>0ASK2@[*7.D?O5E\df^0'(^e:cUIomX0lE2JW=AE+m5;^,OA#$*dM_A.qW5doFQ?6%n0po`/JJ=dn1LQkgWj^"Y#*Ti7TR?I4M7]l0ZbR5#<!sV;_(u'6d^,l*@;.mWA$o-G[F'qgZ!IK[a?$4(O<OUI-J[h$,jCe3TZbT%Q.EZT=_[!Gg?u_[MFIDE&Yjc%&cp.Z`7j`rQ]=M[%?0N?Ks;3jWB4=ZfqLh!eOUkQZ`3r2pUVSVe3Zr'#kj?:ZB>(AOqI\-#2d>n%Vm?b.!V/`Kd&RNB^j'8amHman]3+R-^'DotA@s`LV(Rm<rpD6t*@18@?sIpH:[jA;,bXp`P*D`tD+)PE3*q_C^g*,Zm*auVVD]u;%4h&Srd*c2)ce1(01M`PUH;j?tg^AYSdgj4-<_7Eo=I.AU5MR#NoYa)Q!"BZdnm,u0Y[D<`1WG_9,8gAp,\eeshknZC((PAuhdbM<%/&N;_j>-o#Qu=f.`9B!#HlQ6VQu^[L7o+e/?F-F$SQS3F<'=7AbN9-%iScqsC5cn\7r*4G4RgL-cb5,[9oX$n&b),Xgtt^TE<[5+%:OIT`bid\I;MhY;@DkDdCo4tAI[ahD9h=0ImIcim]cB2\AB!?'eD32);Ei=Gba0I:2r@e7*b=S<XIQ]E#h8GiqAlT$6E>Qi_^H?Y%M9E&u%.L+(9m33GisM$qG"nVY[Y?N.q[O*5o?&nTY=eNm*XKFlk>(Y+aYh9m?on*16I>$\47iBrKa,tMT:G=^8cH;Idfgo)Q%RiH%*OSf!+HW<mG2]iDlh9sdX6%uk:`nMT.rC/D3OX(31hurcF4#<B4od2%fQK(*EU?_JcaUA@Xo"R/mcq`,2;<&TpMuu)3<RY4f&7P5%rO+9GDV;GOnhAlPHF@u"W&t)u5r4l<b"8%JOjT[6obI^HoHp_,,Oq$5q51Fdqe`dmY@/#=!=4i`l,7\UMJ.3(.Kkr>+Ha/&N"A8F%RG42.4C@G)`_<We'm0:&_LSgGGnom#P>9N46@LHlTkCet&I;[1Cg>$Y>%`$%TdcfU=&m0:GE:`1fqp]pUR9NbUR6*=VJi5g.o32#%of7lXeue'\EurqO,qME-K,%.sgZ$[R,8Yf<q[8T+\Q/F(mo^W:B<4IdI*jSoad57G4)*9haLU)Gj2V5FTP7L-ZsWONJ1;/MEYn>u%GAQ*t(h2&@q^heNKe?Wo^##N3)M!6A%DSt`ee??[83s!(G/82+7@pF4CE2>kX^5EK=>X"!ZQ,h/&og]n2]^_>G33PKJRTP^r3,?t%HX8]_d.kp.kR6f0d-q'F>6XK7F,4q*au8/DJ0(N>ad\9UlR6aRA"0K\BWG&5+1Q]?6RbXGXi9r!ZtuT"V4m-N?_a4tW<",L"<eDN%geNVYKc384#RJk?1KXf=.-#7SqSibigmd>0(ZJf7CHBMiaiCShIK<^AC)>lqg?':-)(tCrn(ND2#0/md?*>l?P<Gi7C#_3LeD>2B%CO+D+2qc/!e(0OJHKaO7(f>P7!4uCjaag'eJL?DIqIroap;pX1Ksg]OP(_5u<qcVub"NT=G]Tl6rM4BJYI>)(@N,'BN'=\@WcBsQ%>W(nTc`O/;'snm]/i4=Qi;b`8E<=7q1OZ&MH>If\N9>)C1:Za.JSs$ak[nV7!QE_80"mZUGRNVM.el-e/^=L9*LZVd&%*j'MSZmF%GGt$S:OU+'kEu4m>hd*3.LR6*T+Ge?HlKb+RX@ZTO*ku*jF*?3*_3KUrI9O2H`5"6_#^d\Rin)6VcibLjn[@\(+)8Egop4=:dP`A%W$p:*9`DG/;sH'F7\6Ni.e!5fUA<8$Nn6!$.LQ7,QWe#*0"!uS)-[Gi75`h]#QiRpa&06D1$JleU.\4F*$\r#T1VoDQ;D>\eq>G%%:jfQ^j<^nBhhUP!&4ZAYJ>?]j\?<J8d_JI&Bq<_ZiC_EiQm*4rP$7Ks5ENu-lTO4p0J'RP$7eluH?^C%Ur+jIU%f*iU"OGRV6O@I%j1Z-go7LcJe2>"/n6C:*f/.^2<taMuL;o"HF.6gAWKct+=g%+/+euj]];pjR]#S[a_Aerbe6.nC)1X@Vi3-\KZKW`e(oj&ZQm1A$%8M&5E@pt;,l3Q&G3/D4&lBKoLE!5u=Mk2ZS=i+gW6otA!4V@D6'CY*5qC5_Ip2Br>^UXfuOT'hTp3`U5HSfd,WA:D"_3bWcNZF\u%2%DPSG3rqB\Nek$]J37uJrbTpEJ=XC;-\J9Ke9s^aAqICHB+'n'p4$/oG<g5P1hET+\XC[_<]2$jI7(p&N+uK2g`C7,-A%`1*n9@%O5+uPG%Yh??(WPpqjQ7[7pQ>t0cD!^I[O@/nY3).?Y<KF8UM0Ho>;d^d!Q=b2HR)*5P+]_Wdj*3kN=fF-\h`(dW0YS;UE/nFXK3'%GgTa"Z9"pNo_i358K8YD8*5V"+r?fIONpM!BjZXLG1WZ]WBjNIPD9Br2aX't3^W*.4DO38[M=7SClZDmEee[&;HmkXP2gIU&_[*2%)[Y%g4n#l-19<tqi.:d8_66MT?oFPPSMcCR^ga'\a;go8=mF9oUt+Wk8.`6TaE3.9oC'-B/BYs]V1=&mI[!P<^=TLe6-EFk`6%<]%!PoU+.ur+c)LI,aSTJ+d__6pA2YBZWh2Z,[TICbaKP&DkEGR`4M;1YZ.nKBm5<fbjC.]npXh[F!SWnX#P6V^e0hJjnj8'h6qIp-s%\joc'o'Y(QQ']Kr4j<G1M<9iPFXKU.id6FWZB;3l^Qd^aVTAk^*4bN\I]^FMN).=dRa6!7'$2]*/WslNq8Ab:B-1*_+SCNR4\8<&%=9L0TO;(4[bHfiD[oqJ9gX2G:`H0&&lgP]$G\3,GmAFQ>OfeG%5C;YVjh\AA8`1*=pkMYn_KAP%/"@+I[>*gPg/6Q\N@qX:jFAt#%M"-MFnpo2#00cphF?F8\A"iC-RG1=<)J>+42`q^Yn5sZ*(@jneG#XTT&flf\EMrpj)35Y\c7%e9jTKecK8F63C#Y^]m)Ef]gNQH\%YIc@8Uqu(2$BsgM]GmS)FlDm'AIM\Z7#-Z\dDAEC@41\rIp]?fK>&PiC']^Q3FH]gd`K'6%6Tr-B(!P$DUQ'iW?TlGZKF&aW@RGt%$1j#^TUQsa=dm#I!@be6l);`=j!LsKOXe31rj(sN'_SDrheLc:PeO?fkQ67gU"lg"Dr/T`.Y('U`e]%)jZoS2d5Ylcoi-2c$`T#m%?BN58Yna.SaR')*.S7V^nX8j3[W)\Ch85@5M2GlqPpktGnht'[P(!#md;tslq,YtT(4dJSaNV\O]<qu[P%6eW(XGZ-l-tr#2F>mr%ZJGDCbf[mn?d1WCS\DCaXH]U$s2mS]qZ54:n43/@8EJVZ7Fn6fa$J$DZ`S8?`RbA=]YKQQ,1+]dE0L`hDBAKJR[ZC/nd=`g`=H1'%O/^UQcWAFRe9DQ`b"s%:D#3)qF8+:giFjqC2uiSYrD3IX5QB(0rqHHjn,K$[nB_.!^\mdi4Jqf+^\V=;_gh[Q^\udaa8b^Ks7QEj%ci<OmrU9dJ5Q8:pm^N5qq:#B=r"mlfn;CRA2\-II(+?qBPqjHk!GLF<C:6s?4%-BTmpdBsL'ZnB2#R3t78d$,dM_bWT(>gaT3@c/%YmR<a!!&].)DPN*8/P5ODG'[P7a#>0<sX^8'<>uh5S(E3B[`7WHE*FUm;sX_B5Anr_'a@d0PARq0Cf`f.@9OLWCf7rWA&IROrFW:%'AaCqLG[%9Y6[IWQ.C$2#ruu.^<Z77;=1=.U<fX4=?qSs&r!K=UUE+g@U#ga4]_'2@312V>@nhS,:8!:`?ki&?/&BuO`p.C0If,j%DpN7fB[Vm9a55m+l6=#[OiNBp<Vdmk3CDT.c[5IW"L7J%r'?OBO=E'gdG.I).>gd+"AtJ^O`HK9.fFm:eYoe-HUN,cXK+bpF]uT)%4O,!Ba6T+=8[JH',#V0oTSm;9KQ3R?)iC-=24)3Yq7@[<1pF!$j_efmK*E;62=A;HL*+l-,CP0:6R\5pZ9>>[<Itor7huhS1USOk%^K=/\d!o_OQDBWX'W:qNeD),&oUc8$_Rm.<lRcY12sJ\-:c_kp*.50eURUM7`?L_$4;\0@e!HlqU_\l=g"Tsc>7I">#%dtO3<GA'%NG;+JlP/0!ag\IKKLL1#(6UUg5:)fYELI=i[]n"!ngNpM:<d_!?nT3rpqk0Zg0UFhg[d_"']>#'/k0Rj]gjR%p?!+uQT%^cM]9I[%$AHZ32Ru[[VF/)uFHfVqZ*>I+Q5H:TC20mRZ;f$B[[Hf/-t^=VqTr?G47`!FV$_/D=I%&>l`K@u0OtJ80\I\,&2T)XcOUB@jDeQl%Pl!qL8de@dSVI@SDGk'2a+gZl[-OPOZ)I5HG)$M5nOoHRe+8)7!h0uG!Ijir4@L"2lVI\(6bjoglP-0Jd,^K'R2_;-UP"WU2Z6A@%iNap0mHV_[QINPSI,`lk[Kuan(Iu)h_jWD_'5DfF$++c)K\)gS7cdna;ri,o_I8(?&^4E7[OHs$pCl'dIkg<k[u0j"k0b'uCMhKt%G`U"Oh*R0k=2p6C+@+/UPVcB+iQS:(A40a-Oe3>O*@CCr2^]:Tl$8eZ4dE]BNAY>hO*dEneiT(SdNnLh],Q3hd2uYgCIF!i3f_lL%6/b\L7I/TEMot/O<-#ooK0Wr>pGM=)k6.r7'mVkIVP0Qbs4J"J[o8\UllG%G#'tp"qZaZ$<A`nLlVNRXM2l[$</"qlm5(I"gUp^k%2^@Q2S5PpQMtW^GKSN=1f</9-m;V90h]&2]gua5(Ub*4X@CeFLIBa-hNU0/Z.-=c<!@ZekW6:a`D3<b[[b$"VYO5$>Ud^hQMV%Ag%cHi)^.Ktb'\cY*c.PLkq+>bs>N!\FqjqXmdp,en\TKWk:P<S,LKa%mNIY?@6NotGOEp,=GnkR?KGJ1ap<H6!%8aPCVoV3WHQR9XD%>p<W<,+Q5s9NGE_](6$#"E82m/bNSsXlY,Gm7QOO_ODu+Op1a<CJs%,YE-.Z](kn$!JO<TNV>CB!<?&W1T$;`Ci9PU,K3YrK&-<6%o[!\4IL-O'n+WlQPk<MOFAYo$;?<PF/dO!2Ot;OHIh1f;WA4LeE79/*\'mN8K7Vau)WbJH\0CIBnTIiVN"AA^qMa)Af9nP*SUI:m%T,ik1m.NqR?sFO/O$cJG]6/XFO-qiAn-?br#%-ea#hT>nP5B@L_OGM`_<W(lG6VlT16B^,WbKIdC&'DppclDt(7@3=Z/;5,+li17%A%P&2mV9JgGeRrEAUY-GB)uEJ<Oml1?kuGhC+]hkQqI?_c#-.2+J0"33LdeeS@<=8hf0"sOFtGt1Jho9RQcXN&[M)#j*#C+Y@6"%%Ab4QJN`aL+j$/d/m/RBjg?m\W6teuu&kSPjXu9R4ZNQ$jeT$o5%FCm,3:rHYI]baR'?"6'W_h50mGa&jQ#s2H/)<m7+YD*fkO@.,%NnlK,)0MNhh?qqs>[\b@"-qfSiYpae5G?I;I_T&-@#1=UJ4A]P^"pai0"<&M*RH#3Pd5Ijr/h(hEL!`m1<c8#7.e88T&?U1g_u!&%/O8'pm<BnT8\m>WbcI?a6d\qmUm[4V>;fQtM'(1,2_l3:"bc,m;d-,/E#7MO^<,Y+?NYKki3pV!A\7.-M5(\r'7')+1,\tQ8sdnG%J=0['nE$#L1Gr@m0#XGUQEq0$k[)ar[PO(E%iK_KC>,H<<1k<$OP3!oEDrE]mbg)9<cm*"b6^K^M4%oW,](EC,>q>'I.\\/^ZMRN%b#KAl%qaa1P'Lt'dRl?Egh-)F8e.m]H(tR2dHI;hFq#dLIVU`Nm<jEhhp,V$_&6sR6Im''H,qLD$C%5%dok>=(`k.e-V,2[6sq<n%EtcuCJPa]YY&Z1@Vn!NY+=5g`dIqaQa[BiC+>-c6W]E'3PhY9/k*8O"K\06V0h#BqcS;tT8,>7Dehg%0iaA?nG*oWjD5iu;%30%f%GTZ`2a`LCfE5HKmL77&t4^I"m?WF#u@UR^A4EHU#/Dii-b_qY\I.gi)JgqFfBpNE,Qlg*S"R#m8NIlt[>.74\k'<$'(A^,tEjABS%P#/.2W9Y`i`D%"<S.F>!=iPI(Zkgq"Yk>KJJ)((l(/gGEW8'pp[#!$/Urd]#0&,2pmeEdp#*Gs!(#:VM1F`hS;YH\)nH#7>!5_B8%N8i#D;TrA[B1*QA?L\+PR=0@($\H$7qpd,70*H/Jf)FL+Y2f?++Q.;.FA1OOEX'eR5&*:ea.[TZ(.I82$DufoNcai:.#9ln@"rb*%btbq;*R`O1HPFGj]uKHResnb-r;O]pkpsdc>C8=pP^D,(@ng&]F71V6/:^B:<4X;Jq""L!B?t2<)c"L?[j8h"^--qk*C'GX1-75&%U7dKc;Y5'W.B9.WZ#ObS3cA]@SGHA]$66N#PD7Ca[q%.5De(@g0*%2=+_#sV"X%6CeeK'l$2hVF0O#di#[BMC1+G/6gA6%IMU-s<%h=iDU>VSRa,Tf,ZFdp.cFGE5-foPN/6lXe4nMk&*^LOWCir3On)j?icCf7V:HNFQFr/YVQV7FT*W@-[Qa:GDP6El3DJF@]jHLA*9%ZMiqq;mkd&,h9U"?nsF>hgT^;rpbeU9:?Pd=GW3YB"ht@(PPKEPc^%.T=`\[@V6?lH:,NJ?KrAY6lB&o1Vg!`A\&tf520&iU1D]5%`R"UE"Q(enYI;J!e^<62k4iLE@*&oH#T0XjYU_(H+-`RS6+iG(A/!!0GK4Ehk2K&#Y*[-3LHnT]Kuf/1J_fUf`Yt+)=OPjg]ZuOd%.p%st!!Mg_G6h1A,8g`TDA'T,2X9PhbLhmZoAWru#u950m3f=[!!aJ6f3M!3q2.J#OS@AXjU[n+S(>-r)@Vt'A'.XDM`VB!MI-$>%jJ_bSp-Y5IpN&]B5>S,[^mAsc_"*+&hN4Kgm&?ED]a+2N3)7F=[E<jA/=>"Kq8K&mT0u--Fs`*g9ig2meL^`2!.hRXhsr3\7dI;r%Ac?qk%s/i/d@nW$,]uOa#I2+f\g9Xn0eaR=5&5.M#YVHqbLhsEp:Jb/TgL`AA7`9nPtD[\q;n-Rd%`k7U189jE7`?X:aV:PV0j5(%M9nl<CXqirf1A]A#JZXAK0N),=r9"tOKDiRE05DN?fE`m03D_d2IJh5[\M5`C!6Ca'l+l$aD'?W+N\Dp=tNU5r3Pj,#B#-G;3#A9%;oY;N";A/N'_ajBmQ6aIE"AsW;OIE`*TJ6uId#eJ8]W;n4QL@EPg.\l).IhE<Cu0B2;pZZ[YfETP9nL'qRmY,"EKZA&7$i,#gelU%9h4:_?V*b@_ioW`Gl]`/&=%5=OBmD,MLI02!ODkKJng^pUIC/SV8CW6`TW7OU'k#IL,#l(\.mC7hY0sQ.UIQ=^liKYe-<-%C.go(%Y*<Q[/Bi=dnbKSh&d=f'X6:,;bhQdG^1TXLYr$CX=i4,meY?S1"*a"#8:\2]B)kl/lC)E]#i7<3R1eW1HuUKr]5<1;rdIj(Ko4KQ%0=F6&M!57hm;/]:LmQjfF$f;3a"<SYJ"mO]k5!@I%tH/m`@Qr_UnOWs\2oQ_lc'j6`td4-9k8$8)5?28jYq_GIZ<,8n_;lR)t'kY%`C&H)D&!5X;s26jN1M"4>*qaO^:IW"A\I(Y:cl+pF%pkJPXrpVE,Xs[U*F<u2K*)Yq%f#o;KQR`-917'(@1/1JP+fl,]ZL(ZUId+%3KA91;\V'\8nU(S4)k/r<)(At3c)/s\7CjH*ibGnSjJjLfjhR;?H#F\P4J7*8c\bBYq:hjQ@,7lhu^^'npXb/3pKJf@H5>`=cI;R%D?'<@#qYrdDO3V1GIda"[7jd1B3ju52=hk<\Z:n/K4eoE:TOYYY++C#eT[RpL3NhN">G<":q)E\TNaq?/c;JZ9>4!O3KrJ1Oq&Pp%b6<U[?f6Hi;mF)!d7OlS>36ttSYr(_-pV1<:oYkcoEnJSU9eZc7ncc_4?G#9-1%/$6.@qU_Xd<"!Y.28Nhs_+`#NohiH2(+iurj2%I]&DIbs;(bNKCF2_u0qJjHc?M-r\4UiL"Y-_N:97'*pa>.%e(S9ZAeS^@?JLpSAX:1BCPfS\Ikaa9C?A\6-j#Z-^1n%&uqEpG$]]%1\crI#(I)):m^QKE>d4DK"=;+I@[ucPU2]&6>sReSHeG*)$Z-aPq>[Z=-[6d.kk*lU.U8ZPi4,QQB?+2S9!#`f]L>FoZ+(`h&+.?%]MJsQmWM'nc7:\XI^V>X4^BiDR(Zd(&N-H/HG677o2SOOY:@N`c672qK2$-+7,41?13I16,`a'P!V\K#S+]p77MG`f&Pl437T6^0%k<b=[-V!27%M2moVRW]sTcNj^RJ"kLUb7^X;bE@hJAn@gbl#/E+Wt(Qo&7[lgmNihpLWIpI)7Xlm]f(c`tgltKPNE4G<ERXJ\&+i%&nD`SHY(AN\r(pK>%Ul;#]HL>cT@ljI#T<XGe^R<@e'Z9Jn%#PmI*>%m%_]<HHsF2:8P*$?AWtC[Kngk0$[OFZ:Pu3n>kU!@X->f%Do<`hkDX9n+lp^;J^6CrO?Wk%@iEh)$5VBZamm#LgM6L5WOd4A6"*sBX//&h->N8BpXs2YNrjD3e6^^KNJ2Hr-V?X,q<%9=SYN2p%!C5oCRYlIVCB<Y\N0ZLX#oIe#fZ\ee"92erZ4]paFM+UBF4]n>!uR7)Ko'mlK%CY5Ri_%$@=]]70iXOUl0X_:d$MYlHu0R-.]K-p%<dfe4fV)K6btgIK)Tf'^l]V4S>tlBrM]cQ\i9ROhKkp@uJIoK8\]FTGXTe,=YoMP+fIXXlVF.%"hj2Er*V^W"O*=aM$^DY2oR3/G%`;Gi7ca_Y/A(tYtn5UlD'Kil8Of0bnEfSl(I'j&1/`?XZ)<hk91iUBdikVLmnhoFeDD+b];2TNOhJe*]/*;[SZs=B2Ga/8FG;+9;%D.g"L&*T,o@U$A^"!ui#mktj$^HKNS&lK2>qE,2j)kA:m]kp88<I<-6U$bI7Z3gRe,<5$ILH;po'D\L0b&*UnZ8s-.c;0HIc#:N'%HX]_!8N"aANXo73$DFe2J1\%,_J_#ugl.*[CkGGagMjU"_g[T(2]Y;d*t]](^ra9\M^]3Op2us</u*Xk0)\J03fiq+1aa)_lR)2X%#"`qf+9ua`r?lGU?c_G*Pl[0?F+*@BHsM*#/4,Fj-EDkLL+5A%WCeXUh<PX?oN!aCMu(Fse]'eF*%epMKiTt;[&]@Fb*Et39PsiX%qYTZZ+#5M"WdhN8=s/0@^:^RM:TKL3pK^8F)Mji1Su)1c/(q1iV\Ua-3>4PoQgY0>HncGiT]lCBYBHdm!A$orJ&O@`q_(/YXmYoq%S*"9O+P$)tja?h>,fVr9_;FsA?T<t_R;$f2:@QN5Krp\402jTCVTH'&&Od46-$OAp.Eu<H`@k5o]8rT%n$te$:W=qkTigF#WfjVh%0/$q?-2%H40/Gl@))_9+C5kC-ebjS`]?9q-"VntHkE-u-c3WV3ARf"-GPV#JZMdYf\W:T)m`/@[cJT"A>IjGi.8\pA\?:4k#;-$c%q$'OPkBaM;g#^d.Mk"KtAU(#M%a-Nm%[#p\7gE">C`9qOZ&3P@G$D7uCq/P2WE<?<O)=Nb#FW5+HTtZ"<71TihJ8=,X:!;<q)55'%*g$KeYKs[t>+XKAKf5clfP"[02?N-iG%cNoLGn#HU`)]mVp'Y$p+%s3H'm611RtR(X/,Kk-q;6l&dr]O=#'Mf9S`>Q===V9]F`;U%(Q<uu<^;ql2`EqeZ+tGb+bOL:-m6kl2t&O^MoquZdW,rB7QYO.?0B(>BM#e'F>f$h(hCQN@)!;t9n%`)GJ;Y'E,o5EE4)O-nLT=[%%,*#pe8T4XR50C)Oa35-"Uu(/;diq02WD0tC75Q6#$6/Lr[lHm7\ODGqKlq&)+taj/eLr(*P4]=h+p/:Yq'/!Wj@5R9gro8AZ%WE%V3\fcFDV")ITtJ5ZIPj5f0/]WbR`fYmZ:tB]YE<-lmmq`e,5<j];,oA,SD72hF$qpgm(!GI:Jba(>JE8eCL;\f9T0-DW:*#TOH*X%F_#BrcoVPc1P0bA?T\ERB@+MBLI+5roG:pl#X[`XZd"VQN#iNPfI]/V[*aekK(:*ENbr\hUi[,[@?RT_<>fQ_))^!"\**Pu!dSUQ%L'nKKGo\KFRMKW\Q>dS)pY3"X$5a8lA*ZFC_A)V;G3[M0^;BjEA1(`7/NhmWWcWPZ9T!f[@A:eDmappZg9rq3gLj83F:"D%8:E`U%&uRDTDDtH`m25M)o0F`-)JDa4@l+.8D'd=?>);o.ce)48d#+9OkEFp[GPoE/qi;iPe`ReTBWR6B+$WqAaM5)B5On?+0K`d-r$?U[%#N,qG[?#Hf[,!bQqC\,Y?.<%*$o?78!bQ]cX6]_-9+&J_U+(<:=Y9F,XRmE^?Z9DmE"k=u&YEFu+MV'1^Nc*.:L)<PZud:J6Z]P^%Yl0%GhbpHRo7Ja]#dRk`?G6Vkk*!l:rMP`VfO/&!Gs]nmUHkZi)@1O%(<6s>#+?VJ.Mh/,qKa]in]YNF.2/5s,g**pm)rjFA24jn%>$'??OA&E\S'!YF/<K8.,QnJ^CPn-FPMujQ40VGo>XJ9,%%I27eHTtK*pd]K;AtAjbmI%`E5[Xq:gE<oXe^8uk?o8'X'9,\_cN<?%ha52p=BR.[,-Ze\^cl&G1Wtne5LS]8m$;@@Ifq0!0P)The,(?1ZJ/=)XunNO<=a\2/lQW$mO!@OGk)H7FuX!_#b(Z8'1iK*7#rp-%o!rdHilrA!GRmT-X9[,`A-uJYEJdJ))EtUIKVFS%f2""s7m?P2;3k0D\E92n'+I0]d_ep%K-R>BjlmtXJkj1]U1uf(P!2Vc`?"dH%Wq*[pDf@S:?:^("cd`R3NZW'L29sYF@Qi3cg0@_0'&E!/%Z9@TL2Y>SJ]P9t$5>G2i4d<^?mZOIW0Z2K-!o;4Cjru$5Pau)U>X<-%VD"^ek:E"JIIc/P>H6$WI`@Joc,;5HI\pDu)CHVCj,.1lfh3FsBmD_d-K*-k+TVFU8/pi)$[/0-_%g!*)=;NS)2$&(8T1pji@Q_,%b`^Lm:,jTp+VK1ilc0:1"XJ/sqg'XQF*QKN^V3;u5RE!6`X/m9D\CZX<W:!2De&c[UBFZDKtg_u,',Ajld(i';s3m!#O$8\I2Z`+%lqn>`Ht[^e2gLI7lC"2gPd1@UK\#J1_OJ\)Ymgm5E^\%%aGS'$OZ'K`jQZSOq`T=28f3'V,XKVZ=NIXY/!uQQP$>BAVsg_/Q"l6O%a9*O[GhH/8C]N,M]F"%fgLBD[9jWTqR.kY(5',;_C+7:@QuV9Op%DP46R:uLp9CYNS_F1ZqOPlo:)RE-e[GNaO3MUXBBn)EP1eOO%P=oP@<E[eH5nU*WNH:JV>OW]s]Ct,Ls77eV\d-"MUV6q[):%JU1iG.SQ>iVH_^*.>CH[VV`__.gSNk6(BcB4TPo0+^iY->OrglLQ%Y&bVi8P4tJNIW3DTk'aD0`oc?jZV.$1M7`1T\k5SYL>Ah`FM&n%%)L6gfJ%V_ALigr*1fT\@2&4&G9I%4f2Xhd+>bt)VnWOS#H+L%^PAO6WO&cmYn1=\mn_0-DZPU@Z<FCq6@;k"S@JI,gZpJ)eo*Dj1_0?(S]iG[I+C&[f8[$Uo9e-0c[64bKJ+joKC$V(k*.f\;nUCb%U5*ubf6tKQOh%)TfhV=1BeCogY5g>JORHk#iP;,pIOdodV7+pV[LKr2e\<"oo@EX7^rK,u;S5dRktT)aT)Ci*W=1/;NfX(I;n&]T%-fRta^1C$IA]!Ym6hDI[G*_OcSs:BR47f%(/G0n(TkHE(5iUa@C8e4VQF/f..48`:Zo^H:M..YXpdN3F_5\)IQ2]i.*je<apUe-l%ElaXdOZ,4g/I]hod56OS[37'jLg4B[OYNCnE]2d1AH'-$J)(B:QAM-'E`G`IIRBIi0%&.8ou6k-7l.m6M-g"?H+!@(H%e!;MqQME%&T4h6rK`ZCX0I=]p@l?#?oEYhlg$j\%(sHaB:\^og,&50boDtLaZIrkb'EkcPs^Kkl0$b!ni[tIaZgjbDk/-Hk8-OoUn+'-(52!T%1\fQX=c^,3_78ecg2Z6!M=1?Yl)Su&r1uaJIE]rJeg`!5N`"WhEoot^nQ8l!^CHR"pJFW,Kh.Eqf61^F^)A._lK?t%@]$hLT?l(F%/\(r`$1g@LPo!2f5tNl/)s2VDONF2ZGB2l+^FqJrM,?;0)#sTeKCJhH8pS4Xm%=J*%;MG12l_k4.<n;Lj\4cKmu<`%oR4q?`hoXC%ik;rFO(QluNtJDLqeY\e,r:h&A;3*.9jc9YVDhFK@uSF&.OUL7=1CY@IRnM6asP&MO`TG):qa^Sac:gD)u9_VoQkXK^b^rBXq)6L%@oi*=_:l?0KVnL4a7gW"H7SpYHO`Kccl]dI3R<%LN9_&J.[R^[?2!T_XrLH3n2c;:4CI"Z2M*U>laJ)AX5dU2Mi?)+r7pnr`'Xi;%XiH^j!ZkufU:3Hr"KZa\7/K=1[+u<_!rkoCoC$t!^-]WYF5Hf=#,hP._U"69j5#/$W^e":jp(Nhdg+IdRFkZ'kNC"[9F#WBB',Z,%3G41BWTn'J5JfK^4h01_nZN)NpOjTrd]/nnf/V/F;M/2lRF1Se5a61[5??ATH_f6#i=<AF(S>q_]@5Qu(CqUa\<lO"*hiYF2Z&h%%AqiYAVFJ?:J;u(H-CPX1XF\miH(K2-jDXoTOc)@ug.$Epa*ZSt^NdG.X#M]YEkHOlnr@ZX][1Ktp,U-n/PFaEkj-VKjr(=620e!e%>(<Y9aWIaG`dgT!9Xr==m&t(FOH[8u)sC?P:DpL4baO*n:a5\1qfRC;:bL&/9^h`(WNmqp>5N;IC33W&d<2'<A%_6^X@/\:Ul4Tp%2Z2qUkR3lt1bo1&Z6VfS[a&S0:no,PoppV-A7=V7:Lc`(0te`HXdh1I@CCHi9cJ/:8_gju&'F8m[b$!kF%VVh3#H&YKJTC%5rPZr%V@lZ%C$1?[iF80W\p:-n99;o?&U)4=DOtZk`2p6"E%rWOm@I8[1Smh,0pBQ.n($dEd^Z)_eTgD!(%KFI?bdI\76a#0>"\llUoK-W%WLC36%Hk5[Yf0KS6+8^V#U];@f@X['DL$aNB'c[$+L^#6i0`:K\[iiHh?$fS??S_%L>@s33q?**g@a'"Mkoe5o$)5%'/AZ_a'nEe%?#HDl6I`_D.!Q-fbSl3*T1A9?ra6eAp3^#<+/sd!:Kr>+2C6Xr[[rVXQ?ob+].'=B-lV[-gk4D38Ad`:H!&O"BLl.I=lkGKUq@Q0%b&u2<aHZ!^A*u53LN>Bf&TB.#0AgR\O.``g@?D\@8ZMXi3)_Eq8]?e@]>[.;,BFW:8IrFJ=.8m/h9M+tG5LLH4RY1-!#S5QcJcdX%`bV^Wf2YKM6l%Y[J'uBTf'Kco<jSo<^#o,95RK9jKl\RaD-,AYEu<qp/)'(rfn\?IH5]mi#X?&Dg<A.a`71hm-@RcrCDZ&[m^.Wj%^8m<;R-/#iord3g;:`q\^9#0F.ZOJP+J+0-7_*(/IPq[mQl`TH$'?4;"Z?!`^:Q&Ah0d5@8'KGVQda)>`jsMO?do.E\K#J/c?_GD%4jQ9U&lVGfaoeU%in)?sK]$8h/`58ScUT-U":4%1qE1qbh#:aSB8,6R;DUu4rSusOB$lK]p&\-0o,SWq5]0sZ]9P\Ce-s"sor`Ea%BBZ\-8!qOPqj?R;c.k3Bh8d$VFEqB`b(.;rZJVbteY2])S@??WjL\I&KDUq`HJV?!mlG-;7*98B/MNX&oKj<5n*ETN40+:Dbn4WQ%rH#[0T6&4dN`5.3>H;CfY+@S4..bOV<7%q`,BdO!YhbXK]MHp17Q/j?AqkSjnTb4[FVKql9bn^Teqj#hQZ1g+"CGTGA)$l3:DH77%M[SBHAR^E@g_V0Ll#-OEU[hbWBL7mB:83WI)6q%#&P=ZR+VYK<o9S/5[jpVJ=b/T)['c;9J6KQniip4[e=pJsh=$D+5#EM'83&NX%[GH#a3-d[FVaEaCo.63TQ&P)jbK."l:bQopm%-T[/nY=&&$9u'Q[Ac],O)5_I=>RUC4btBkI2gcZGK>P%uAqUq(,gkbhfMB6;i&_%L'sJu#4'q0_dXs%>CR`p9OoQ]es,`5^.,ojjWK3QqZEmQoOEcHI"-@_lt+)\IQq!Eh/FMi<M4eg!,9r/4V'WMg_8)kqfs]uWP(tl%V4NnakAU4loTs_VPDTP'DfVl7=*`7jV>4/jcF3EVei]E'BB=Q=##fhpI:gbu,"U60QqZk[b>SEWhr?i7Fh"Fq@k8LZ$_b9JZZ>bR%lf!aL3Ag3CcC!?[\eETn/Sb]/k%("715a[2B6!&1MZ&fF^SD_tknj"8o2$e\UOYkX9:7eBaFK:OcLXDQHBK0d['aKGcGJl.Pu;5#%55@;5l[$905DT,TZd**L#F'Vcpo(=D+'#Xo._Dr`VkgS*a3Dd<OOfPY0q.QgVao^63bBi(Y$0/K7+9K=jaD[,I=]mH1Y+7tRZP=.%pRU1ec8`0g1<-ft>r>]aZEA+HpbG_/f)otI<BO10`]VsH5gbPN*^H`?,cN&.n^pII5<6.#X4qJDaol6)jT]6iq:KTZ+>@8K16/_r%[M4ELLBb)<pG[#Jd`qGk$c3pC`55+GZ27mX^AkaL\WW6l\&3B/[69T@l<1uJH5uMXkC)cKD=Tl927OYH!./Y(S&61&qZ>]HX:*m-%phlX*[@UG*b5u+EHU,]"M7Qa2-I>hB(WQ6oi-Eo(adU.Nn*M)3=6jKsYEB.P7LkT6*U)qQ?.W;T.X%j*Jt\jOh*GW^YB'>o)-&?!%^`%;q@.:M`q=!jqW`r<,Q/^,kHA`HTZ?X$=\*0ZuYClC^)uCJ-HrBGE`oFGi<J)T+!iYpdI8-r4'BfqceQXoCCjXra$rUKiB*Oc;%R-2ERTT)U5lV<JR8(0Z&Wb8ZG2<W1k(3=uSk2l45HD[o@7/a4&54X-^_#&S1@'5`lL4TCWCTp9=_?Bc0?iZp?VZu[6%o)Hg;fE<^%K5i9lpsn",!GR!j7h`;bJihk*;?$.1DfpKr8pnumGp<9m?R&d=?q.B[j-Fu5FF"JURh]lMc5!6mPCB@16'Y162U2*q'.$0>'dN\4%4N\A-qOE]_L:\F`Qu7/&\8htC*X]2,IS1"laoVn&_=L8*'!:+B>MdfXUJb;f+=]:HdB+Eli<C`$W2NZJLA)CD4u]d&/Hr6\<rD^,%@=2>Q&`Y55K&#UI2Dd:8jJlOC154*J[(pMFJ][X=)/i7=7rs'Fh/:9#mLN9^(Oel^1!-R,Fptr;Vuq,l*cm^#p>0baKG@6+DS-M%%7XZGt*oHpc,"BgS"R=>C]>51=lQ=R^L%IEq9:,kKJY[!jR]LD;.&^Fdg-T\XSF0+DGLVUAcQc\ZRY;EG7g3Rgjr(1Qh2qnP>F[`0%qofhc^Nr(1N+P.g*"2<R0i696!Z`EV3OU(kj+gi*q(f4$0;3s^NcLkR9JbF0A;D/eA!`9\:AJl#K0g@H9j)gthLi6BcU2?n;TDu.%3;YuaQt`dTC)k1gJ.ofua:2LX*O%!a9'ZWa<ZP.BB0q:Q`.@K?^c.BdC+k52P+6O,D*#po;4C4=-B$];T*hlf?4=[O/fB[K(@.?2%/]urX+-XlOFZ\Os1V_6R^".+OZ2"?=#!5RSqg>O]mZTjV)r*;/1NEEtpT(>>5j&^BBD)O'/c#_S[&jS80)p,'K<bLfVJ^!pE8O>J%:$O`(a*\m/*/s0k6fqX(raNHMVh=TO8joTOE7YXjP61[<q]-lUHGgs#D`lT/<SC0)4R[RK[ED%d%6J4$DG#^`^)=SgOY9.MR&K_^%=/ij2cS'd-reR/LNm)=!(NTf+SRSlm8d,4)b>V!\COcsn9p`f>o79hSE>ZRAKi=ed%;*.Eb;$,GKQ9YLQPlPMOAIPULYTkVn_R[1%3)<!B1_`e0=F?HZMtS1h6E+qV?;H,YC*H;`]T7*Zn7]Wf//($Po8rI$QF)"2Qc\q'"]t3mrB=bNHkctq8*_:o@GmTo\6\f_kF@<n%C:1tG4mii[T2>TP@3`Pf-!-!U!_8@D"-_etbdPJKpUep\bm7j9rP'KT,J!B_/=-]Zj\t^qqk*pHHn&+-2IK<%T^-g%_aN3fd7L%;%kC=qgc9/&J2Vaid/j5_%f4>n5U#PH$U8"BR%"0Y8C%8$WKfc&gQOl%&k-W\0J?ep926iufRLcMf*Cgl+iWtfNd[NpMQH$GsJ>&>J%(a!hGBi@@S"kr1cbqAL9)!Xp.j-:V5e@aHYr4bel"H.tE8]?p5^)EiO!MjV!:tQN+Lru1ZF3QeP,T6jVEjnDr:pe^6p<g'cS&KKq%ZX1(F<na.5m!@?1P>H^jd.7^WUCJ/mqgK@*IYX!@$-DFjHA4i$pN4)BO'FkkpFJ3!pa+-5WoSnrl]11$@?^HtK9aZJej?i:k2DIS%8,.0H/rlVM2'OU/2,uSn_&9Y?LmGT?ohKPa5-'_S(0<hf5SJ[:,SZEZlnAuGP&4>VAGR,HT^+@TZ232D8c'+jlm_^`[Bl`9mE_'0%,d(K9VB0d+1UF=@l*>NsAXi%$8r#(IOI/]+H*_ei(>Ad$WU[aH':-mV,L1^N_JYbZ+MkTAY?4[CGYI^B8'?!hD&dkO7:ItDS`B!-%Jk[.=ZS62(Z]+]d1Fb="RCjU;e$Ag1_g30Ii#9jA3MCZ2MAP7$[F=Q3!gp,'f`YmSF)ocj(Z@9YepG8%i/#\B>/K1.U0_ln#<Hoa%NVUQ1GmJ8pc,1HlR@p.`IFROS17l6#huA9HV8Td#$.<SPT2D9jZO13h(%!ugX`F%78CY,S;kFJF#"FD/b>GaW?][$oQj-9OoTg1*%mSf,gI4XJ2Ka1%\[=t9.$H:jKVbMHeR'';L)s?VA(.O"Q.+l_V%/k,0,BfE!f0`P:Cp!\>p:3;o:jUutLFHGKT+AC'<WoPE=^)bU%V2Ka]Ap17oQ$KAcB(NAbj\9kjFc0=p\h#S@X`b8J4>r#YY*A<kf/.\HY"`I6gR6:NRHLc>d:B\s*#Um.^]Cs=-/fSq5f9/]Z!K1?%O:(=i0*9qF;Bihb]l-Pkd1lZ=jfJU<EhM,,Vl5#rbFZ=`.tfQ\)$aODYf`Hi+[ou5]"9p-cY6.5Wbmoq_d<P;1XDm.2MY`)\MUD\%<.pNEIrbg)>'^K_LITN89q3)3)ea';Zq)O!`N\D)ISoXZE'!B-RqR%8I\d/3B<%*n[9#43j?AXlEah_)8Y7YoUElBfbIPbp<RA\/%APHH^29/OrPN5Pu5^t\>2-K?Gl*o847oCXDQP*&a*X:;fZE.)hDO3:DoIT#.g<\6?o&5.WE4o">Qf,q?-6B&-L*)Aqa5\sS*,84`%>5%R5)[So$CW:?p*ZId:9cGZ^jBf)crD#u5j1HIuEGWf@j'EFj.-ei6p$o/dIe\O?h^29a.KPkoYEX<t?)>f0%!84)1.qBk^SC5K%ID1*,bp'Ka!J<7kJn7$9[*PMg&b4/pFs]Dc1<M)9O_c*_o=D6A8;S?3<2:SB&02K%GP;u\@W,<WQnZR<hmgu:dd;YQ=m\lO"@Vm&%;6_]hkYSVqZWGe^Q"C6%9k4^&8hkh]-]MHZp+#0/30"T?<!ebR<Y\NE\mXq4b0.C(&`Nj;V(K!$>m\mDU[m7tkF:_O(;]i_k80JJ%FII(d2DraTbR3m/.9<SE<0`KMRDT-(DJ'ePSAMF6KOX'+W"<Ek[FlVB#nVD%Dpj<rYK,>2J7Q#`Xn/!ccEbd3<D`&Dk5L#9B!90'%[cAAYrXcf_e.3dq/^KkbViqb^4tWK-@T\^'6,HJLkWD?o&6?HU8=kX,)IgH&f\>lX-;?0P;,N;/QCCoA=raXsQXcFrIS#iL[4j77%Q1h!fj34B@\<1U_dcOA[\$L-W!s$I#7_$qB2Z2UodjC<t,CXJ-_dD$@Z+Lq^&I(tX_*_Y1J,PjIAs7r=L&UZCD=-\5lmT"bqulU$%kJiZ:0qkVYI`W<J6pd>-P^qa$9@h$F17%9H1`f24qt0a9m_N9E,SEP^Yha`=]"3?6mCi3s)^f/"k*MT!Zc9#LCf.7J>;bGUON^^D%%*NHW`GNi#),'%BBa,/VF05FZ*KcYC"A]E$"CB$n5,-@O>@+E$cqXn1=V(4"L$tE5,$br:!o03*Y3r`1]mA<e.qCS=GZr-]o0S+p%ND.DpF;qFrm?,`rda#RrKSh#i#jm+RNm<ZH/f9`U8LL)sG\+6C>L;V4(l@LYV-Yf"%AAWN4(Ct35J%Q]]Ho8qZ<":cjb/6RhV0hk%>ZfjId88eR_s&_/K=+J3Y7c!l#bYD<EOSsRG&U3T3o+Ws]BtAJ8/:sp>&uUZ4gLd$9+bGbl*;Y!'oSH!$QmGW?HhTO9;Nghn`\Cp%ho"ao8qAh3k@Uni2<*='QZsRKfBoBLRn'DPiNZ?/rJIK\,s5A7W`[TP,r4KFm_*>+)HNq9pM<f[Am\\s>jG%V*69pn5P(0]F5Y.i%]dUi@FQR)4jOfoC,%gT<2=o^8K"IM!&Hg27<.iKCoMnd5Xp">_O%ieVpai9_i9tq1#p:MuKfjOO;dc+rpD5OP,;-\:%sBH/7(Q'#%B3oPXTaOe]N9"8@nR6Xn#Yi.]]<O]E.'PqS/m?jmEiHeS/2D;s=F54C'#OhUJfG^FOVe;Z.O/c10l5OXNt%gY-^;R04(2r6A'6E,%nj>uUle)U6cr0LsnpNCnShU97.*&eL!Y"HSYu\,&CoI>ZI9NkEJY"@-)6LQ=,@d6fjK:,@NUo-8/6dEih[W8AN@f:0!JcgLXW(82%=0>dNEMRlCh%<6a!;`W^0V[5@h`R4+g>-EZL+aiKKCU_"goO*k\9Y9L)EJ4o7MMshR"=A%B5$s[jNm0=E]lB`lajY9)IIO>LA>>5%pkiKXboIo@CA*7@9hrnRaB/2],8;\])jEM"8Ttp<X$a4C[jg*+NMW!q[\+Pi=V4[i/]oNQ:-q<$CZb&56-?dk$EeI'R_6=Jo[,#=%Eh_=L\l#md>;rf#q]"'g]9O+4D3A[)41ur9l;:aCs4>:_2-'_:incf)_=ce<V93:tA:U9&0?3fQ6<-#mU2&Ta^!UJ.DC!GmQO)Y;%rddkh,ZaPX(_N`rC\CK9?CC%]9Ent6`*1&U;#N=WJ@OO:#1U5>G)WWj_0);7T8.PF7roF[*03\H1_\kd'lI"FcP0Zf[nO=g%`GE=%KjcU&Y8V=]2F%%$GO;lgnNlP0rLe6SL<.8=bGt?>-!HTo"[m7Xq7>3FhP"K@4;j3U9C]\g7c;p^0.P=B>U^_&-l(:%3fRSN3$k__%3cUL&h!if-J(CO5edFTri[EQIT0+WWSJpAh*$O]Ek&hF%O0g#;#?WLA,hN\#K7hZHO.'EGN=2OX`;>dGD&rI"L%rnkTMW<afofcN%d%[1,F5P3uUF6=-6ro`iBmG:+"c#Fpj]-o;,5W&?@"c`7ri%$q![p_]WrS$rln"5<.$pS.Z/&H12_6#[R6OJ+Y9W0;X+Y^PMWeoM%9BXEs9Ibad23N5gAmAtN+:1YK>[hN7(q?o%]Q;Nh^>"mS?.B\[<H1[1U]a!+d:9E#m^<aJ4HebtMCL:s/_m!a+uiTHTuD:"7?MBu%IoAcTN:.)i,MZ=sbG9aG1h5OC+p0LD'HIen'N)gV&BT78[ac"#EDGd=Ci0!01""[/hs5FAcNIqnkfME%OIcg9&hV$>7U$/3>2Edd%IjRA!,d+-&(+$U4m.t<p.k8"uokRL)9@^Uqm7-/[,Ho.?7?1CYL>Lu;X2)*l+KJNs;UfCVp)@]NR@7#h$kdX%D=pC#5+uC`EZ=+B%D7WpoiFQRFj\beA("tA.XJe3C``/13Jm>"8`9,;-DJ".E.]rl5D=,\8K("Q.[CPk5["jU-)N/Ea\u[h[][ULD*?pf72SC;*g^6nU%#ojCoT[E7/X]tuTkD:Xp>b<[5AgKi\A7]gajboF4@B-anO;7C*>Hj[VG!E7QR.4;ol!n03,"N[>0O4cV7!R(nkjF^GGc,;*/Z_\0%YQ@+X)2'ruO/ftp/8hs[Nu>ioYX\08UN0YB(D(\6=k8IH>G=edglQ$SEnh,5OJd\B]dKl,Lhrc5HE-kCk%qk-)I<oaV_mcQo%Ld_%:M=k^Zc$b16&+NtHI2)G]FOKTVRejZo)3$%DP\@@033`iT`Xs:o5Ri6!Vmh=X1aq(8#$?i4:%[_iM-Zhgb$1h3f&2rkAHuJAn^0h%f8kc@$N6'TOVo$ER+E!GB(`Xn].<*23hR6%2\I8^1i+1n/liK7E,,u&*M%h<\3)^t.q"jDL+^Vc&7<5ag*(:_+XG;WE+"(Z!Q/V@%\<4jg7(9Ul*s:YE[:n%ME\%#Q)7%)h*d_5W;9@>JdAfY,c,F?QG"b;2rI`s&hY.\4]@3H%?_qja-5aXR=t^5s2EpaI+D3Kr9@cj9%7"TS\.&+W%,)+O9.']uc+</aoC'*'uRgR_P>$-YoM[j&2%'EQQCS!3p12epZ`NHFfL,+p=R0Z.l/2F3gn5:0(d$J60r'i#rJ-A\_%(!:%@/6l?alAKcbCD#-k5j!LpK=00G+f;7+iuul(7eN/s7tZPgUK+0#2d@hqQo]IL]lY=2JVtfpEc^t#-!tLVcq*!6-a>7=di09F%ni6&l8E1>2l%.i,;$;=ZU6Ua]&mHV^@FKLb!,DqF(A%gP0b,HEBrCm2*i9&qU'QY0OI6sLAdBDY/RphYlO'"eCWpqSWiF+2l#,J_%c.5U%O^];N4`"NEA6X[pTtAeEYY`c(P9O$nJ$D_p:-;_]\:R&#4%M#$gqAGGB"q&=QiUEHNFc5$4khktf*;;j*08sh^L3Ut+ZW2W%$:t$*!@e1sUE>`kGHi,$m?pL?lJ%OAc)r`p8ba5EMRu_Y]]W@U;:/)!c;^m1,.J8nL3n!;P[0E>[ZMaSlO3<=Z;F1Gq<T:((2R;@%AqBWO*"T@AP8&q3a;8J1165Qf/==K9D.,fKqO*,r[dfgobm[si7AZPk+KhqOiDR)rrM),@"[-AuJ`8ZpLj#f<D0b&PP;Lp85@=.`%c2G=kH=fNVcQ`W@6)>/(V^X&5XhmH8`b@8GfVg]a/Cq#&$mrDPMP"dB-UZao_5R?bCC=@D>YdMp7-J-MHl8?\!AfLj,K4;`E0=]U%pr_d;7t(+m5[aEed:ClTkM2BrYfK_jSueJ</K4jE<F<Pda,j,p7pE==gc&FqSbFl3M%D_;J.lCt:1_&B2/5Qk>9X6hQ9Z`g#sML?%ZOkU8R2tV-47O<$@6ZR0W1r85C&V@?j0eOs'tb5qgfVI*)tU:F`(spE2'/lY'$/2:a[6:5JoT^f-i=G54=2idDn4B(M=#An36DTC%.0=&U)=Ln2X;oQ@B$">P+=a;rXD>*AAE="5;Tb1p0_J=AgYeVd[);kR0`i)r_dZK*c"WF[JKV-Z#HidoW[f1K`raJLR"2WfLC;TM%WP2po[:NbMMN8"0"&Fc,<nO9G@Ks]WdZ7m(@k/;P"ofG5<i(u\]QfXV<cS3&C5\k$KF`A8HjcGUfJYSO)iWbZ4]J(=>+f"rm`0$R%>4=$c>KP-a$qJ]=m^t`G,6F;7[[Eh?*i`6V8<V&Jm^jmJh8!7'Ju89'X;)Ml<Y0L#(kTne9KJ\ZPKL\;%A-Q":6%l&U-l4\MiSYh%jBFII'p^1_MK#H1(AMdW[uG#Q89N&=#3!S"/c+Cqf]5V@L@X<:q/.?E"5kQrWm4-Q$8S:#GfU#<)SEZ+0:frt<_7`pbd?-^^BuK2%!MGnsT+q5>K=:EPg=^$V)>jq1m2PA"7[^+1UIZPc<nS7m8J%iYnC8DO*N7JiHd\nJ3eR[B.]H7cSs,V_5OcA2:+J6pZso]Q^l9,M%e?0eZg#>$7J5ip][DZn-\.-mcoYG8(J@0:CR>d@-%+K.%QFqi=:7I&5<]l)T*5nZ21olKS'j9!0*j2k_D/hi,K=E4mX=;jZ.:ST[%gn1IM57Id1q)F35rL(isZ4AN(^NoMJjs$Ae.Ik0n5OAF?pobM3qt#_pHMH^rq!VJY1W'G>p$q',?[_b4q3h9@JR<p(o'PVDcEGPQ%GE5K@s6]7Jjir_4_gfFMFgGFuWIN].^Q-lmq!Yu4Ie?uOOQ0'lrTh)mQeC,7HgQ"Srl8fGIJ`Tco@rk2>k;;Ar;HHEh4*/glhqot%]Xn+$I/>4,qitbXI'TAMT9PfCkLee?*e3<NrIs-RkLI`TrRKc8nG7$PpclL)426d$IeomBrTI=$I.*hZ']&Q/(OnPqEdILkT,:At%okOO,h>o2mX\[-h8#Q=2:VY!8krr_Q$\-#]oojrLonSG1T751ZIX^nd9$Or[]Qir(0@ql&?f,2)I!*0:Gk(M(qt'(Kk2sqEp"fG9%qqmoMgn*Ekmr:P)rV"LNAD(l]/q<BKo<8.8nK2FU(Gl~>%AI9_PrivateDataEnd